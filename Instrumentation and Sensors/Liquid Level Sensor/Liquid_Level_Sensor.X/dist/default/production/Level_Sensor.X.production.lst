

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 30 14:02:29 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	nvBANK0
    83  0000F7                     __pnvBANK0:
    84                           	callstack 0
    85  0000F7                     _digital:
    86                           	callstack 0
    87  0000F7                     	ds	2
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADRESL	set	4035
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADCON1	set	4033
    94  0000                     _TRISA	set	3986
    95  0000                     _PORTBbits	set	3969
    96  0000                     _OSCCON	set	4051
    97  0000                     _PORTAbits	set	3968
    98  0000                     _TRISE	set	3990
    99  0000                     _TRISD	set	3989
   100  0000                     _TRISC	set	3988
   101  0000                     _TRISB	set	3987
   102  0000                     _RCREG	set	4014
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _TXREG	set	4013
   105  0000                     _RCSTA	set	4011
   106  0000                     _TXSTA	set	4012
   107  0000                     _SPBRG	set	4015
   108  0000                     _GO	set	32273
   109  0000                     _ADON	set	32272
   110  0000                     _CREN	set	32092
   111  0000                     _RCIF	set	31989
   112  0000                     _TXIF	set	31988
   113  0000                     _TRISC7	set	31911
   114  0000                     _TRISC6	set	31910
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	callstack 0
   119  000800  00                 	db	0
   120  000801                     STR_1:
   121  000801  57                 	db	87	;'W'
   122  000802  61                 	db	97	;'a'
   123  000803  74                 	db	116	;'t'
   124  000804  65                 	db	101	;'e'
   125  000805  72                 	db	114	;'r'
   126  000806  20                 	db	32
   127  000807  4C                 	db	76	;'L'
   128  000808  65                 	db	101	;'e'
   129  000809  76                 	db	118	;'v'
   130  00080A  65                 	db	101	;'e'
   131  00080B  6C                 	db	108	;'l'
   132  00080C  20                 	db	32
   133  00080D  3D                 	db	61	;'='
   134  00080E  20                 	db	32
   135  00080F  25                 	db	37
   136  000810  64                 	db	100	;'d'
   137  000811  00                 	db	0
   138  000812                     STR_2:
   139  000812  0D                 	db	13
   140  000813  00                 	db	0
   141  000814  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           ; #config settings
   144                           
   145                           	psect	cinit
   146  002246                     __pcinit:
   147                           	callstack 0
   148  002246                     start_initialization:
   149                           	callstack 0
   150  002246                     __initialization:
   151                           	callstack 0
   152                           
   153                           ; Clear objects allocated to BANK2 (200 bytes)
   154  002246  EE02  F000         	lfsr	0,__pbssBANK2
   155  00224A  0EC8               	movlw	200
   156  00224C                     clear_0:
   157  00224C  6AEE               	clrf	postinc0,c
   158  00224E  06E8               	decf	wreg,f,c
   159  002250  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to BANK1 (160 bytes)
   162  002252  EE01  F000         	lfsr	0,__pbssBANK1
   163  002256  0EA0               	movlw	160
   164  002258                     clear_1:
   165  002258  6AEE               	clrf	postinc0,c
   166  00225A  06E8               	decf	wreg,f,c
   167  00225C  E1FD               	bnz	clear_1
   168                           
   169                           ; Clear objects allocated to BANK0 (78 bytes)
   170  00225E  EE00  F060         	lfsr	0,__pbssBANK0
   171  002262  0E4E               	movlw	78
   172  002264                     clear_2:
   173  002264  6AEE               	clrf	postinc0,c
   174  002266  06E8               	decf	wreg,f,c
   175  002268  E1FD               	bnz	clear_2
   176                           
   177                           ; Clear objects allocated to COMRAM (2 bytes)
   178  00226A  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   179  00226C  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   180  00226E                     end_of_initialization:
   181                           	callstack 0
   182  00226E                     __end_of__initialization:
   183                           	callstack 0
   184  00226E  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   185  002270  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   186  002272  0E00               	movlw	low (__Lsmallconst shr (0+16))
   187  002274  6EF8               	movwf	tblptru,c
   188  002276  0E08               	movlw	high __Lsmallconst
   189  002278  6EF7               	movwf	tblptrh,c
   190  00227A  0100               	movlb	0
   191  00227C  EFF4  F00F         	goto	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMRAM
   194  00005B                     __pbssCOMRAM:
   195                           	callstack 0
   196  00005B                     _flags:
   197                           	callstack 0
   198  00005B                     	ds	2
   199                           
   200                           	psect	bssBANK0
   201  000060                     __pbssBANK0:
   202                           	callstack 0
   203  000060                     _data:
   204                           	callstack 0
   205  000060                     	ds	10
   206  00006A                     _y:
   207                           	callstack 0
   208  00006A                     	ds	10
   209  000074                     _depth:
   210                           	callstack 0
   211  000074                     	ds	4
   212  000078                     _voltage:
   213                           	callstack 0
   214  000078                     	ds	4
   215  00007C                     _nout:
   216                           	callstack 0
   217  00007C                     	ds	2
   218  00007E                     _width:
   219                           	callstack 0
   220  00007E                     	ds	2
   221  000080                     _prec:
   222                           	callstack 0
   223  000080                     	ds	2
   224  000082                     _a:
   225                           	callstack 0
   226  000082                     	ds	2
   227  000084                     _e:
   228                           	callstack 0
   229  000084                     	ds	2
   230  000086                     _s:
   231                           	callstack 0
   232  000086                     	ds	2
   233  000088                     _data2:
   234                           	callstack 0
   235  000088                     	ds	2
   236  00008A                     _data1:
   237                           	callstack 0
   238  00008A                     	ds	2
   239  00008C                     _status_flag:
   240                           	callstack 0
   241  00008C                     	ds	1
   242  00008D                     _index:
   243                           	callstack 0
   244  00008D                     	ds	1
   245  00008E                     _dbuf:
   246                           	callstack 0
   247  00008E                     	ds	32
   248                           
   249                           	psect	bssBANK1
   250  000100                     __pbssBANK1:
   251                           	callstack 0
   252  000100                     _buff:
   253                           	callstack 0
   254  000100                     	ds	160
   255                           
   256                           	psect	bssBANK2
   257  000200                     __pbssBANK2:
   258                           	callstack 0
   259  000200                     _str2:
   260                           	callstack 0
   261  000200                     	ds	100
   262  000264                     _str1:
   263                           	callstack 0
   264  000264                     	ds	100
   265                           
   266                           	psect	cstackBANK0
   267  0000AE                     __pcstackBANK0:
   268                           	callstack 0
   269  0000AE                     ?_sprintf:
   270                           	callstack 0
   271  0000AE                     sprintf@s:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x0
   275  0000AE                     	ds	2
   276  0000B0                     sprintf@fmt:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x2
   280  0000B0                     	ds	6
   281  0000B6                     sprintf@ap:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x8
   285  0000B6                     	ds	2
   286  0000B8                     sprintf@f:
   287                           	callstack 0
   288                           
   289                           ; 6 bytes @ 0xA
   290  0000B8                     	ds	6
   291  0000BE                     GSM_Send_Msg@sms:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x10
   295  0000BE                     	ds	2
   296  0000C0                     GSM_Send_Msg@sms_buffer:
   297                           	callstack 0
   298                           
   299                           ; 35 bytes @ 0x12
   300  0000C0                     	ds	35
   301  0000E3                     main@strr:
   302                           	callstack 0
   303                           
   304                           ; 20 bytes @ 0x35
   305  0000E3                     	ds	20
   306                           
   307                           	psect	cstackCOMRAM
   308  000001                     __pcstackCOMRAM:
   309                           	callstack 0
   310  000001                     ??_my_isr:
   311  000001                     
   312                           ; 1 bytes @ 0x0
   313  000001                     	ds	2
   314  000003                     ?_ADC_Read:
   315                           	callstack 0
   316  000003                     ?_strlen:
   317                           	callstack 0
   318  000003                     ?___fltol:
   319                           	callstack 0
   320  000003                     ?___xxtofl:
   321                           	callstack 0
   322  000003                     ?___aodiv:
   323                           	callstack 0
   324  000003                     ?___aomod:
   325                           	callstack 0
   326  000003                     USART_TxChar@data:
   327                           	callstack 0
   328  000003                     MSdelay@val:
   329                           	callstack 0
   330  000003                     ADC_Read@channel:
   331                           	callstack 0
   332  000003                     fputc@c:
   333                           	callstack 0
   334  000003                     strlen@s:
   335                           	callstack 0
   336  000003                     ___fltol@f1:
   337                           	callstack 0
   338  000003                     ___xxtofl@val:
   339                           	callstack 0
   340  000003                     ___aodiv@dividend:
   341                           	callstack 0
   342  000003                     ___aomod@dividend:
   343                           	callstack 0
   344                           
   345                           ; 8 bytes @ 0x2
   346  000003                     	ds	1
   347  000004                     USART_SendString@out:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x3
   351  000004                     	ds	1
   352  000005                     ??_ADC_Read:
   353  000005                     MSdelay@i:
   354                           	callstack 0
   355  000005                     fputc@fp:
   356                           	callstack 0
   357  000005                     strlen@a:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x4
   361  000005                     	ds	1
   362  000006                     USART_SendString@s:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x5
   366  000006                     	ds	1
   367  000007                     ??_fputc:
   368  000007                     ??___fltol:
   369  000007                     ??___xxtofl:
   370  000007                     MSdelay@j:
   371                           	callstack 0
   372  000007                     memset@dest:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x6
   376  000007                     	ds	2
   377  000009                     memset@c:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x8
   381  000009                     	ds	2
   382  00000B                     ___fltol@sign1:
   383                           	callstack 0
   384  00000B                     ___xxtofl@sign:
   385                           	callstack 0
   386  00000B                     memset@n:
   387                           	callstack 0
   388  00000B                     ___aodiv@divisor:
   389                           	callstack 0
   390  00000B                     ___aomod@divisor:
   391                           	callstack 0
   392                           
   393                           ; 8 bytes @ 0xA
   394  00000B                     	ds	1
   395  00000C                     ___fltol@exp1:
   396                           	callstack 0
   397  00000C                     ___xxtofl@exp:
   398                           	callstack 0
   399  00000C                     fputs@s:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xB
   403  00000C                     	ds	1
   404  00000D                     ??_memset:
   405  00000D                     ___xxtofl@arg:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0xC
   409  00000D                     	ds	1
   410  00000E                     fputs@fp:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0xD
   414  00000E                     	ds	1
   415  00000F                     memset@k:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xE
   419  00000F                     	ds	1
   420  000010                     fputs@c:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0xF
   424  000010                     	ds	1
   425  000011                     ?___fldiv:
   426                           	callstack 0
   427  000011                     memset@s:
   428                           	callstack 0
   429  000011                     fputs@i:
   430                           	callstack 0
   431  000011                     ___fldiv@b:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x10
   435  000011                     	ds	2
   436  000013                     ?_pad:
   437                           	callstack 0
   438  000013                     ___aodiv@counter:
   439                           	callstack 0
   440  000013                     ___aomod@counter:
   441                           	callstack 0
   442  000013                     pad@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x12
   446  000013                     	ds	1
   447  000014                     ___aodiv@sign:
   448                           	callstack 0
   449  000014                     ___aomod@sign:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x13
   453  000014                     	ds	1
   454  000015                     ?_abs:
   455                           	callstack 0
   456  000015                     pad@buf:
   457                           	callstack 0
   458  000015                     abs@a:
   459                           	callstack 0
   460  000015                     ___fldiv@a:
   461                           	callstack 0
   462  000015                     ___aodiv@quotient:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x14
   466  000015                     	ds	2
   467  000017                     ??_abs:
   468  000017                     pad@p:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x16
   472  000017                     	ds	2
   473  000019                     ??___fldiv:
   474  000019                     ??_pad:
   475                           
   476                           ; 1 bytes @ 0x18
   477  000019                     	ds	1
   478  00001A                     pad@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x19
   482  00001A                     	ds	2
   483  00001C                     pad@w:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1B
   487  00001C                     	ds	1
   488  00001D                     ___fldiv@rem:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x1C
   492  00001D                     	ds	1
   493  00001E                     ?_dtoa:
   494                           	callstack 0
   495  00001E                     dtoa@fp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x1D
   499  00001E                     	ds	2
   500  000020                     dtoa@d:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x1F
   504  000020                     	ds	1
   505  000021                     ___fldiv@sign:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x20
   509  000021                     	ds	1
   510  000022                     ___fldiv@new_exp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x21
   514  000022                     	ds	2
   515  000024                     ___fldiv@grs:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x23
   519  000024                     	ds	4
   520  000028                     ??_dtoa:
   521  000028                     ___fldiv@bexp:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x27
   525  000028                     	ds	1
   526  000029                     ___fldiv@aexp:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x28
   530  000029                     	ds	1
   531  00002A                     ?___fladd:
   532                           	callstack 0
   533  00002A                     ___fladd@b:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x29
   537  00002A                     	ds	4
   538  00002E                     ___fladd@a:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x2D
   542  00002E                     	ds	2
   543  000030                     _dtoa$941:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x2F
   547  000030                     	ds	2
   548  000032                     ??___fladd:
   549  000032                     dtoa@p:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x31
   553  000032                     	ds	2
   554  000034                     dtoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x33
   558  000034                     	ds	2
   559  000036                     ___fladd@signs:
   560                           	callstack 0
   561  000036                     dtoa@s:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x35
   565  000036                     	ds	1
   566  000037                     ___fladd@aexp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x36
   570  000037                     	ds	1
   571  000038                     ___fladd@bexp:
   572                           	callstack 0
   573  000038                     dtoa@n:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x37
   577  000038                     	ds	1
   578  000039                     ___fladd@grs:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x38
   582  000039                     	ds	1
   583  00003A                     USART_Init@baud_rate:
   584                           	callstack 0
   585                           
   586                           ; 4 bytes @ 0x39
   587  00003A                     	ds	4
   588  00003E                     USART_Init@temp:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x3D
   592  00003E                     	ds	2
   593  000040                     dtoa@i:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x3F
   597  000040                     	ds	2
   598  000042                     ?_vfpfcnvrt:
   599                           	callstack 0
   600  000042                     vfpfcnvrt@fp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x41
   604  000042                     	ds	2
   605  000044                     vfpfcnvrt@fmt:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x43
   609  000044                     	ds	2
   610  000046                     vfpfcnvrt@ap:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x45
   614  000046                     	ds	2
   615  000048                     ??_vfpfcnvrt:
   616                           
   617                           ; 1 bytes @ 0x47
   618  000048                     	ds	2
   619  00004A                     vfpfcnvrt@ll:
   620                           	callstack 0
   621                           
   622                           ; 8 bytes @ 0x49
   623  00004A                     	ds	8
   624  000052                     ?_vfprintf:
   625                           	callstack 0
   626  000052                     vfprintf@fp:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x51
   630  000052                     	ds	2
   631  000054                     vfprintf@fmt:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x53
   635  000054                     	ds	2
   636  000056                     vfprintf@ap:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x55
   640  000056                     	ds	2
   641  000058                     vfprintf@cfmt:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x57
   645  000058                     	ds	2
   646  00005A                     
   647                           ; 1 bytes @ 0x59
   648  00005A                     	ds	1
   649  00005B                     
   650                           ; 1 bytes @ 0x5A
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 60 in file "Level_Sensor.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  strr           20   53[BANK0 ] unsigned char [20]
   661 ;;  data           10    0        unsigned char [10]
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   671 ;;      Params:         0       0       0       0       0       0       0       0       0
   672 ;;      Locals:         0      20       0       0       0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0
   674 ;;      Totals:         0      20       0       0       0       0       0       0       0
   675 ;;Total ram usage:       20 bytes
   676 ;; Hardware stack levels required when called:   10
   677 ;; This function calls:
   678 ;;		_ADC_Init
   679 ;;		_ADC_Read
   680 ;;		_GSM_Send_Msg
   681 ;;		_MSdelay
   682 ;;		_USART_Init
   683 ;;		_sprintf
   684 ;; This function is called by:
   685 ;;		Startup code after reset
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text0
   690  001FE8                     __ptext0:
   691                           	callstack 0
   692  001FE8                     _main:
   693                           	callstack 21
   694  001FE8                     
   695                           ;Level_Sensor.c: 63:     TRISB = 0x00;
   696  001FE8  0E00               	movlw	0
   697  001FEA  6E93               	movwf	147,c	;volatile
   698                           
   699                           ;Level_Sensor.c: 64:  TRISC = 0x00;
   700  001FEC  0E00               	movlw	0
   701  001FEE  6E94               	movwf	148,c	;volatile
   702                           
   703                           ;Level_Sensor.c: 65:  TRISD = 0x00;
   704  001FF0  0E00               	movlw	0
   705  001FF2  6E95               	movwf	149,c	;volatile
   706                           
   707                           ;Level_Sensor.c: 66:  TRISE = 0x00;
   708  001FF4  0E00               	movlw	0
   709  001FF6  6E96               	movwf	150,c	;volatile
   710  001FF8                     
   711                           ;Level_Sensor.c: 67:     PORTAbits.RA0 = 1;
   712  001FF8  8080               	bsf	128,0,c	;volatile
   713  001FFA                     
   714                           ;Level_Sensor.c: 69:     char data[10];;Level_Sensor.c: 70:     USART_Init(9600);
   715  001FFA  0E80               	movlw	128
   716  001FFC  6E3A               	movwf	USART_Init@baud_rate^0,c
   717  001FFE  0E25               	movlw	37
   718  002000  6E3B               	movwf	(USART_Init@baud_rate+1)^0,c
   719  002002  0E00               	movlw	0
   720  002004  6E3C               	movwf	(USART_Init@baud_rate+2)^0,c
   721  002006  0E00               	movlw	0
   722  002008  6E3D               	movwf	(USART_Init@baud_rate+3)^0,c
   723  00200A  ECAA  F00F         	call	_USART_Init	;wreg free
   724  00200E                     
   725                           ;Level_Sensor.c: 73:     OSCCON=0x72;
   726  00200E  0E72               	movlw	114
   727  002010  6ED3               	movwf	211,c	;volatile
   728  002012                     
   729                           ;Level_Sensor.c: 74:     ADC_Init();
   730  002012  EC83  F011         	call	_ADC_Init	;wreg free
   731  002016                     l2744:
   732                           
   733                           ;Level_Sensor.c: 77:     {;Level_Sensor.c: 78:         digital = ADC_Read(0);
   734  002016  0E00               	movlw	0
   735  002018  6E04               	movwf	(ADC_Read@channel+1)^0,c
   736  00201A  0E00               	movlw	0
   737  00201C  6E03               	movwf	ADC_Read@channel^0,c
   738  00201E  EC5B  F00F         	call	_ADC_Read	;wreg free
   739  002022  C003  F0F7         	movff	?_ADC_Read,_digital
   740  002026  C004  F0F8         	movff	?_ADC_Read+1,_digital+1
   741  00202A                     
   742                           ;Level_Sensor.c: 82:         char strr[20];;Level_Sensor.c: 83:         sprintf(strr,"Wa
      +                          ter Level = %d", digital);
   743  00202A  0EE3               	movlw	low main@strr
   744  00202C  0100               	movlb	0	; () banked
   745  00202E  6FAE               	movwf	sprintf@s& (0+255),b
   746  002030  0E00               	movlw	high main@strr
   747  002032  6FAF               	movwf	(sprintf@s+1)& (0+255),b
   748  002034  0E01               	movlw	low STR_1
   749  002036  6FB0               	movwf	sprintf@fmt& (0+255),b
   750  002038  0E08               	movlw	high STR_1
   751  00203A  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
   752  00203C  C0F7  F0B2         	movff	_digital,?_sprintf+4
   753  002040  C0F8  F0B3         	movff	_digital+1,?_sprintf+5
   754  002044  EC93  F010         	call	_sprintf	;wreg free
   755  002048                     
   756                           ;Level_Sensor.c: 84:         GSM_Send_Msg(strr);
   757  002048  0EE3               	movlw	low main@strr
   758  00204A  0100               	movlb	0	; () banked
   759  00204C  6FBE               	movwf	GSM_Send_Msg@sms& (0+255),b
   760  00204E  0E00               	movlw	high main@strr
   761  002050  6FBF               	movwf	(GSM_Send_Msg@sms+1)& (0+255),b
   762  002052  EC8C  F00D         	call	_GSM_Send_Msg	;wreg free
   763  002056  9081               	bcf	129,0,c	;volatile
   764  002058  9281               	bcf	129,1,c	;volatile
   765  00205A  9481               	bcf	129,2,c	;volatile
   766  00205C                     
   767                           ;Level_Sensor.c: 95:   MSdelay(500);
   768  00205C  0E01               	movlw	1
   769  00205E  6E04               	movwf	(MSdelay@val+1)^0,c
   770  002060  0EF4               	movlw	244
   771  002062  6E03               	movwf	MSdelay@val^0,c
   772  002064  ECBC  F010         	call	_MSdelay	;wreg free
   773  002068  EF0B  F010         	goto	l2744
   774  00206C  EF07  F000         	goto	start
   775  002070                     __end_of_main:
   776                           	callstack 0
   777                           
   778 ;; *************** function _USART_Init *****************
   779 ;; Defined at:
   780 ;;		line 8 in file "USART_Source_File.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  baud_rate       4   57[COMRAM] long 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  temp            4   61[COMRAM] float 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   794 ;;      Params:         4       0       0       0       0       0       0       0       0
   795 ;;      Locals:         4       0       0       0       0       0       0       0       0
   796 ;;      Temps:          0       0       0       0       0       0       0       0       0
   797 ;;      Totals:         8       0       0       0       0       0       0       0       0
   798 ;;Total ram usage:        8 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		___fladd
   803 ;;		___fldiv
   804 ;;		___fltol
   805 ;;		___xxtofl
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text1
   812  001F54                     __ptext1:
   813                           	callstack 0
   814  001F54                     _USART_Init:
   815                           	callstack 28
   816  001F54                     
   817                           ;USART_Source_File.c: 8: void USART_Init(long baud_rate);USART_Source_File.c: 9: {;USART
      +                          _Source_File.c: 10:     float temp;;USART_Source_File.c: 11:     TRISC6=0;
   818  001F54  9C94               	bcf	3988,6,c	;volatile
   819                           
   820                           ;USART_Source_File.c: 12:     TRISC7=1;
   821  001F56  8E94               	bsf	3988,7,c	;volatile
   822  001F58                     
   823                           ;USART_Source_File.c: 13:     temp=(((float)(8000000/64)/(float)baud_rate)-1);
   824  001F58  C03A  F003         	movff	USART_Init@baud_rate,___xxtofl@val
   825  001F5C  C03B  F004         	movff	USART_Init@baud_rate+1,___xxtofl@val+1
   826  001F60  C03C  F005         	movff	USART_Init@baud_rate+2,___xxtofl@val+2
   827  001F64  C03D  F006         	movff	USART_Init@baud_rate+3,___xxtofl@val+3
   828  001F68  0E01               	movlw	1
   829  001F6A  ECA7  F009         	call	___xxtofl
   830  001F6E  C003  F015         	movff	?___xxtofl,___fldiv@a
   831  001F72  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
   832  001F76  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
   833  001F7A  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
   834  001F7E  0E00               	movlw	0
   835  001F80  6E11               	movwf	___fldiv@b^0,c
   836  001F82  0E24               	movlw	36
   837  001F84  6E12               	movwf	(___fldiv@b+1)^0,c
   838  001F86  0EF4               	movlw	244
   839  001F88  6E13               	movwf	(___fldiv@b+2)^0,c
   840  001F8A  0E47               	movlw	71
   841  001F8C  6E14               	movwf	(___fldiv@b+3)^0,c
   842  001F8E  EC6B  F006         	call	___fldiv	;wreg free
   843  001F92  C011  F02A         	movff	?___fldiv,___fladd@b
   844  001F96  C012  F02B         	movff	?___fldiv+1,___fladd@b+1
   845  001F9A  C013  F02C         	movff	?___fldiv+2,___fladd@b+2
   846  001F9E  C014  F02D         	movff	?___fldiv+3,___fladd@b+3
   847  001FA2  0E00               	movlw	0
   848  001FA4  6E2E               	movwf	___fladd@a^0,c
   849  001FA6  0E00               	movlw	0
   850  001FA8  6E2F               	movwf	(___fladd@a+1)^0,c
   851  001FAA  0E80               	movlw	128
   852  001FAC  6E30               	movwf	(___fladd@a+2)^0,c
   853  001FAE  0EBF               	movlw	191
   854  001FB0  6E31               	movwf	(___fladd@a+3)^0,c
   855  001FB2  EC0B  F004         	call	___fladd	;wreg free
   856  001FB6  C02A  F03E         	movff	?___fladd,USART_Init@temp
   857  001FBA  C02B  F03F         	movff	?___fladd+1,USART_Init@temp+1
   858  001FBE  C02C  F040         	movff	?___fladd+2,USART_Init@temp+2
   859  001FC2  C02D  F041         	movff	?___fladd+3,USART_Init@temp+3
   860                           
   861                           ;USART_Source_File.c: 14:     SPBRG=(int)temp;
   862  001FC6  C03E  F003         	movff	USART_Init@temp,___fltol@f1
   863  001FCA  C03F  F004         	movff	USART_Init@temp+1,___fltol@f1+1
   864  001FCE  C040  F005         	movff	USART_Init@temp+2,___fltol@f1+2
   865  001FD2  C041  F006         	movff	USART_Init@temp+3,___fltol@f1+3
   866  001FD6  EC12  F00E         	call	___fltol	;wreg free
   867  001FDA  5003               	movf	?___fltol^0,w,c
   868  001FDC  6EAF               	movwf	175,c	;volatile
   869  001FDE                     
   870                           ;USART_Source_File.c: 15:     TXSTA=0x20;
   871  001FDE  0E20               	movlw	32
   872  001FE0  6EAC               	movwf	172,c	;volatile
   873  001FE2                     
   874                           ;USART_Source_File.c: 16:     RCSTA=0x90;
   875  001FE2  0E90               	movlw	144
   876  001FE4  6EAB               	movwf	171,c	;volatile
   877  001FE6  0012               	return		;funcret
   878  001FE8                     __end_of_USART_Init:
   879                           	callstack 0
   880                           
   881 ;; *************** function ___xxtofl *****************
   882 ;; Defined at:
   883 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  sign            1    wreg     unsigned char 
   886 ;;  val             4    2[COMRAM] long 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  sign            1   10[COMRAM] unsigned char 
   889 ;;  arg             4   12[COMRAM] unsigned long 
   890 ;;  exp             1   11[COMRAM] unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  4    2[COMRAM] unsigned char 
   893 ;; Registers used:
   894 ;;		wreg, status,2, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   900 ;;      Params:         4       0       0       0       0       0       0       0       0
   901 ;;      Locals:         6       0       0       0       0       0       0       0       0
   902 ;;      Temps:          4       0       0       0       0       0       0       0       0
   903 ;;      Totals:        14       0       0       0       0       0       0       0       0
   904 ;;Total ram usage:       14 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    1
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_USART_Init
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text2
   915  00134E                     __ptext2:
   916                           	callstack 0
   917  00134E                     ___xxtofl:
   918                           	callstack 28
   919                           
   920                           ;incstack = 0
   921                           ;___xxtofl@sign stored from wreg
   922  00134E  6E0B               	movwf	___xxtofl@sign^0,c
   923  001350  500B               	movf	___xxtofl@sign^0,w,c
   924  001352  B4D8               	btfsc	status,2,c
   925  001354  EFAE  F009         	goto	u2721
   926  001358  EFB0  F009         	goto	u2720
   927  00135C                     u2721:
   928  00135C  EFD2  F009         	goto	l839
   929  001360                     u2720:
   930  001360  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
   931  001362  EFB7  F009         	goto	u2730
   932  001366  EFB5  F009         	goto	u2731
   933  00136A                     u2731:
   934  00136A  EFD2  F009         	goto	l839
   935  00136E                     u2730:
   936  00136E  C003  F007         	movff	___xxtofl@val,??___xxtofl
   937  001372  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
   938  001376  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
   939  00137A  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
   940  00137E  1E07               	comf	??___xxtofl^0,f,c
   941  001380  1E08               	comf	(??___xxtofl+1)^0,f,c
   942  001382  1E09               	comf	(??___xxtofl+2)^0,f,c
   943  001384  1E0A               	comf	(??___xxtofl+3)^0,f,c
   944  001386  2A07               	incf	??___xxtofl^0,f,c
   945  001388  0E00               	movlw	0
   946  00138A  2208               	addwfc	(??___xxtofl+1)^0,f,c
   947  00138C  2209               	addwfc	(??___xxtofl+2)^0,f,c
   948  00138E  220A               	addwfc	(??___xxtofl+3)^0,f,c
   949  001390  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
   950  001394  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
   951  001398  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
   952  00139C  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
   953  0013A0  EFDA  F009         	goto	l2560
   954  0013A4                     l839:
   955  0013A4  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
   956  0013A8  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
   957  0013AC  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
   958  0013B0  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
   959  0013B4                     l2560:
   960  0013B4  5003               	movf	___xxtofl@val^0,w,c
   961  0013B6  1004               	iorwf	(___xxtofl@val+1)^0,w,c
   962  0013B8  1005               	iorwf	(___xxtofl@val+2)^0,w,c
   963  0013BA  1006               	iorwf	(___xxtofl@val+3)^0,w,c
   964  0013BC  A4D8               	btfss	status,2,c
   965  0013BE  EFE3  F009         	goto	u2741
   966  0013C2  EFE5  F009         	goto	u2740
   967  0013C6                     u2741:
   968  0013C6  EFEF  F009         	goto	l2566
   969  0013CA                     u2740:
   970  0013CA  0E00               	movlw	0
   971  0013CC  6E03               	movwf	?___xxtofl^0,c
   972  0013CE  0E00               	movlw	0
   973  0013D0  6E04               	movwf	(?___xxtofl+1)^0,c
   974  0013D2  0E00               	movlw	0
   975  0013D4  6E05               	movwf	(?___xxtofl+2)^0,c
   976  0013D6  0E00               	movlw	0
   977  0013D8  6E06               	movwf	(?___xxtofl+3)^0,c
   978  0013DA  EF80  F00A         	goto	l842
   979  0013DE                     l2566:
   980  0013DE  0E96               	movlw	150
   981  0013E0  6E0C               	movwf	___xxtofl@exp^0,c
   982  0013E2  EFF9  F009         	goto	l2570
   983  0013E6                     l2568:
   984  0013E6  2A0C               	incf	___xxtofl@exp^0,f,c
   985  0013E8  90D8               	bcf	status,0,c
   986  0013EA  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
   987  0013EC  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
   988  0013EE  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
   989  0013F0  320D               	rrcf	___xxtofl@arg^0,f,c
   990  0013F2                     l2570:
   991  0013F2  0E00               	movlw	0
   992  0013F4  140D               	andwf	___xxtofl@arg^0,w,c
   993  0013F6  6E07               	movwf	??___xxtofl^0,c
   994  0013F8  0E00               	movlw	0
   995  0013FA  140E               	andwf	(___xxtofl@arg+1)^0,w,c
   996  0013FC  6E08               	movwf	(??___xxtofl+1)^0,c
   997  0013FE  0E00               	movlw	0
   998  001400  140F               	andwf	(___xxtofl@arg+2)^0,w,c
   999  001402  6E09               	movwf	(??___xxtofl+2)^0,c
  1000  001404  0EFE               	movlw	254
  1001  001406  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1002  001408  6E0A               	movwf	(??___xxtofl+3)^0,c
  1003  00140A  5007               	movf	??___xxtofl^0,w,c
  1004  00140C  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1005  00140E  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1006  001410  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1007  001412  A4D8               	btfss	status,2,c
  1008  001414  EF0E  F00A         	goto	u2751
  1009  001418  EF10  F00A         	goto	u2750
  1010  00141C                     u2751:
  1011  00141C  EFF3  F009         	goto	l2568
  1012  001420                     u2750:
  1013  001420  EF1E  F00A         	goto	l846
  1014  001424                     l2572:
  1015  001424  2A0C               	incf	___xxtofl@exp^0,f,c
  1016  001426  0E01               	movlw	1
  1017  001428  260D               	addwf	___xxtofl@arg^0,f,c
  1018  00142A  0E00               	movlw	0
  1019  00142C  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  1020  00142E  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  1021  001430  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  1022  001432  90D8               	bcf	status,0,c
  1023  001434  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  1024  001436  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  1025  001438  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  1026  00143A  320D               	rrcf	___xxtofl@arg^0,f,c
  1027  00143C                     l846:
  1028  00143C  0E00               	movlw	0
  1029  00143E  140D               	andwf	___xxtofl@arg^0,w,c
  1030  001440  6E07               	movwf	??___xxtofl^0,c
  1031  001442  0E00               	movlw	0
  1032  001444  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  1033  001446  6E08               	movwf	(??___xxtofl+1)^0,c
  1034  001448  0E00               	movlw	0
  1035  00144A  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  1036  00144C  6E09               	movwf	(??___xxtofl+2)^0,c
  1037  00144E  0EFF               	movlw	255
  1038  001450  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1039  001452  6E0A               	movwf	(??___xxtofl+3)^0,c
  1040  001454  5007               	movf	??___xxtofl^0,w,c
  1041  001456  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1042  001458  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1043  00145A  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1044  00145C  A4D8               	btfss	status,2,c
  1045  00145E  EF33  F00A         	goto	u2761
  1046  001462  EF35  F00A         	goto	u2760
  1047  001466                     u2761:
  1048  001466  EF12  F00A         	goto	l2572
  1049  00146A                     u2760:
  1050  00146A  EF3D  F00A         	goto	l2580
  1051  00146E                     l2578:
  1052  00146E  060C               	decf	___xxtofl@exp^0,f,c
  1053  001470  90D8               	bcf	status,0,c
  1054  001472  360D               	rlcf	___xxtofl@arg^0,f,c
  1055  001474  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  1056  001476  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  1057  001478  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  1058  00147A                     l2580:
  1059  00147A  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  1060  00147C  EF42  F00A         	goto	u2771
  1061  001480  EF44  F00A         	goto	u2770
  1062  001484                     u2771:
  1063  001484  EF4C  F00A         	goto	l853
  1064  001488                     u2770:
  1065  001488  0E02               	movlw	2
  1066  00148A  600C               	cpfslt	___xxtofl@exp^0,c
  1067  00148C  EF4A  F00A         	goto	u2781
  1068  001490  EF4C  F00A         	goto	u2780
  1069  001494                     u2781:
  1070  001494  EF37  F00A         	goto	l2578
  1071  001498                     u2780:
  1072  001498                     l853:
  1073  001498  B00C               	btfsc	___xxtofl@exp^0,0,c
  1074  00149A  EF51  F00A         	goto	u2791
  1075  00149E  EF53  F00A         	goto	u2790
  1076  0014A2                     u2791:
  1077  0014A2  EF54  F00A         	goto	l2586
  1078  0014A6                     u2790:
  1079  0014A6  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  1080  0014A8                     l2586:
  1081  0014A8  90D8               	bcf	status,0,c
  1082  0014AA  320C               	rrcf	___xxtofl@exp^0,f,c
  1083  0014AC  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  1084  0014B0  6A08               	clrf	(??___xxtofl+1)^0,c
  1085  0014B2  6A09               	clrf	(??___xxtofl+2)^0,c
  1086  0014B4  6A0A               	clrf	(??___xxtofl+3)^0,c
  1087  0014B6  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  1088  0014BA  6A09               	clrf	(??___xxtofl+2)^0,c
  1089  0014BC  6A08               	clrf	(??___xxtofl+1)^0,c
  1090  0014BE  6A07               	clrf	??___xxtofl^0,c
  1091  0014C0  5007               	movf	??___xxtofl^0,w,c
  1092  0014C2  120D               	iorwf	___xxtofl@arg^0,f,c
  1093  0014C4  5008               	movf	(??___xxtofl+1)^0,w,c
  1094  0014C6  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  1095  0014C8  5009               	movf	(??___xxtofl+2)^0,w,c
  1096  0014CA  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  1097  0014CC  500A               	movf	(??___xxtofl+3)^0,w,c
  1098  0014CE  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  1099  0014D0  500B               	movf	___xxtofl@sign^0,w,c
  1100  0014D2  B4D8               	btfsc	status,2,c
  1101  0014D4  EF6E  F00A         	goto	u2801
  1102  0014D8  EF70  F00A         	goto	u2800
  1103  0014DC                     u2801:
  1104  0014DC  EF78  F00A         	goto	l2596
  1105  0014E0                     u2800:
  1106  0014E0  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  1107  0014E2  EF77  F00A         	goto	u2810
  1108  0014E6  EF75  F00A         	goto	u2811
  1109  0014EA                     u2811:
  1110  0014EA  EF78  F00A         	goto	l2596
  1111  0014EE                     u2810:
  1112  0014EE  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  1113  0014F0                     l2596:
  1114  0014F0  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  1115  0014F4  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  1116  0014F8  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  1117  0014FC  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  1118  001500                     l842:
  1119  001500  0012               	return		;funcret
  1120  001502                     __end_of___xxtofl:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function ___fltol *****************
  1124 ;; Defined at:
  1125 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  f1              4    2[COMRAM] unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  exp1            1   11[COMRAM] unsigned char 
  1130 ;;  sign1           1   10[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  4    2[COMRAM] long 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1140 ;;      Params:         4       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1143 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:       10 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    1
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_USART_Init
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text3
  1155  001C24                     __ptext3:
  1156                           	callstack 0
  1157  001C24                     ___fltol:
  1158                           	callstack 28
  1159  001C24  3405               	rlcf	(___fltol@f1+2)^0,w,c
  1160  001C26  3406               	rlcf	(___fltol@f1+3)^0,w,c
  1161  001C28  6E0C               	movwf	___fltol@exp1^0,c
  1162  001C2A  500C               	movf	___fltol@exp1^0,w,c
  1163  001C2C  A4D8               	btfss	status,2,c
  1164  001C2E  EF1B  F00E         	goto	u2651
  1165  001C32  EF1D  F00E         	goto	u2650
  1166  001C36                     u2651:
  1167  001C36  EF27  F00E         	goto	l2516
  1168  001C3A                     u2650:
  1169  001C3A                     l2512:
  1170  001C3A  0E00               	movlw	0
  1171  001C3C  6E03               	movwf	?___fltol^0,c
  1172  001C3E  0E00               	movlw	0
  1173  001C40  6E04               	movwf	(?___fltol+1)^0,c
  1174  001C42  0E00               	movlw	0
  1175  001C44  6E05               	movwf	(?___fltol+2)^0,c
  1176  001C46  0E00               	movlw	0
  1177  001C48  6E06               	movwf	(?___fltol+3)^0,c
  1178  001C4A  EF94  F00E         	goto	l481
  1179  001C4E                     l2516:
  1180  001C4E  C003  F007         	movff	___fltol@f1,??___fltol
  1181  001C52  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  1182  001C56  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  1183  001C5A  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  1184  001C5E  0E20               	movlw	32
  1185  001C60  EF37  F00E         	goto	u2660
  1186  001C64                     u2665:
  1187  001C64  90D8               	bcf	status,0,c
  1188  001C66  320A               	rrcf	(??___fltol+3)^0,f,c
  1189  001C68  3209               	rrcf	(??___fltol+2)^0,f,c
  1190  001C6A  3208               	rrcf	(??___fltol+1)^0,f,c
  1191  001C6C  3207               	rrcf	??___fltol^0,f,c
  1192  001C6E                     u2660:
  1193  001C6E  2EE8               	decfsz	wreg,f,c
  1194  001C70  EF32  F00E         	goto	u2665
  1195  001C74  5007               	movf	??___fltol^0,w,c
  1196  001C76  6E0B               	movwf	___fltol@sign1^0,c
  1197  001C78  8E05               	bsf	(___fltol@f1+2)^0,7,c
  1198  001C7A  0EFF               	movlw	255
  1199  001C7C  1603               	andwf	___fltol@f1^0,f,c
  1200  001C7E  0EFF               	movlw	255
  1201  001C80  1604               	andwf	(___fltol@f1+1)^0,f,c
  1202  001C82  0EFF               	movlw	255
  1203  001C84  1605               	andwf	(___fltol@f1+2)^0,f,c
  1204  001C86  0E00               	movlw	0
  1205  001C88  1606               	andwf	(___fltol@f1+3)^0,f,c
  1206  001C8A  0E96               	movlw	150
  1207  001C8C  5E0C               	subwf	___fltol@exp1^0,f,c
  1208  001C8E  BE0C               	btfsc	___fltol@exp1^0,7,c
  1209  001C90  EF4E  F00E         	goto	u2670
  1210  001C94  EF4C  F00E         	goto	u2671
  1211  001C98                     u2671:
  1212  001C98  EF64  F00E         	goto	l2536
  1213  001C9C                     u2670:
  1214  001C9C  500C               	movf	___fltol@exp1^0,w,c
  1215  001C9E  0A80               	xorlw	128
  1216  001CA0  0F97               	addlw	151
  1217  001CA2  B0D8               	btfsc	status,0,c
  1218  001CA4  EF56  F00E         	goto	u2681
  1219  001CA8  EF58  F00E         	goto	u2680
  1220  001CAC                     u2681:
  1221  001CAC  EF5A  F00E         	goto	l2532
  1222  001CB0                     u2680:
  1223  001CB0  EF1D  F00E         	goto	l2512
  1224  001CB4                     l2532:
  1225  001CB4  90D8               	bcf	status,0,c
  1226  001CB6  3206               	rrcf	(___fltol@f1+3)^0,f,c
  1227  001CB8  3205               	rrcf	(___fltol@f1+2)^0,f,c
  1228  001CBA  3204               	rrcf	(___fltol@f1+1)^0,f,c
  1229  001CBC  3203               	rrcf	___fltol@f1^0,f,c
  1230  001CBE  3E0C               	incfsz	___fltol@exp1^0,f,c
  1231  001CC0  EF5A  F00E         	goto	l2532
  1232  001CC4  EF7C  F00E         	goto	l2546
  1233  001CC8                     l2536:
  1234  001CC8  0E1F               	movlw	31
  1235  001CCA  640C               	cpfsgt	___fltol@exp1^0,c
  1236  001CCC  EF6A  F00E         	goto	u2691
  1237  001CD0  EF6C  F00E         	goto	u2690
  1238  001CD4                     u2691:
  1239  001CD4  EF74  F00E         	goto	l2544
  1240  001CD8                     u2690:
  1241  001CD8  EF1D  F00E         	goto	l2512
  1242  001CDC                     l2542:
  1243  001CDC  90D8               	bcf	status,0,c
  1244  001CDE  3603               	rlcf	___fltol@f1^0,f,c
  1245  001CE0  3604               	rlcf	(___fltol@f1+1)^0,f,c
  1246  001CE2  3605               	rlcf	(___fltol@f1+2)^0,f,c
  1247  001CE4  3606               	rlcf	(___fltol@f1+3)^0,f,c
  1248  001CE6  060C               	decf	___fltol@exp1^0,f,c
  1249  001CE8                     l2544:
  1250  001CE8  500C               	movf	___fltol@exp1^0,w,c
  1251  001CEA  A4D8               	btfss	status,2,c
  1252  001CEC  EF7A  F00E         	goto	u2701
  1253  001CF0  EF7C  F00E         	goto	u2700
  1254  001CF4                     u2701:
  1255  001CF4  EF6E  F00E         	goto	l2542
  1256  001CF8                     u2700:
  1257  001CF8                     l2546:
  1258  001CF8  500B               	movf	___fltol@sign1^0,w,c
  1259  001CFA  B4D8               	btfsc	status,2,c
  1260  001CFC  EF82  F00E         	goto	u2711
  1261  001D00  EF84  F00E         	goto	u2710
  1262  001D04                     u2711:
  1263  001D04  EF8C  F00E         	goto	l2550
  1264  001D08                     u2710:
  1265  001D08  1E06               	comf	(___fltol@f1+3)^0,f,c
  1266  001D0A  1E05               	comf	(___fltol@f1+2)^0,f,c
  1267  001D0C  1E04               	comf	(___fltol@f1+1)^0,f,c
  1268  001D0E  6C03               	negf	___fltol@f1^0,c
  1269  001D10  0E00               	movlw	0
  1270  001D12  2204               	addwfc	(___fltol@f1+1)^0,f,c
  1271  001D14  2205               	addwfc	(___fltol@f1+2)^0,f,c
  1272  001D16  2206               	addwfc	(___fltol@f1+3)^0,f,c
  1273  001D18                     l2550:
  1274  001D18  C003  F003         	movff	___fltol@f1,?___fltol
  1275  001D1C  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  1276  001D20  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  1277  001D24  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  1278  001D28                     l481:
  1279  001D28  0012               	return		;funcret
  1280  001D2A                     __end_of___fltol:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function ___fldiv *****************
  1284 ;; Defined at:
  1285 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  b               4   16[COMRAM] long 
  1288 ;;  a               4   20[COMRAM] long 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  grs             4   35[COMRAM] unsigned long 
  1291 ;;  rem             4   28[COMRAM] unsigned long 
  1292 ;;  new_exp         2   33[COMRAM] short 
  1293 ;;  aexp            1   40[COMRAM] unsigned char 
  1294 ;;  bexp            1   39[COMRAM] unsigned char 
  1295 ;;  sign            1   32[COMRAM] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  4   16[COMRAM] unsigned char 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 0/0
  1302 ;;		On exit  : 0/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1305 ;;      Params:         8       0       0       0       0       0       0       0       0
  1306 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1307 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1308 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1309 ;;Total ram usage:       25 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_USART_Init
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text4
  1320  000CD6                     __ptext4:
  1321                           	callstack 0
  1322  000CD6                     ___fldiv:
  1323                           	callstack 28
  1324  000CD6  5014               	movf	(___fldiv@b+3)^0,w,c
  1325  000CD8  0B80               	andlw	128
  1326  000CDA  6E21               	movwf	___fldiv@sign^0,c
  1327  000CDC  5014               	movf	(___fldiv@b+3)^0,w,c
  1328  000CDE  2414               	addwf	(___fldiv@b+3)^0,w,c
  1329  000CE0  6E28               	movwf	___fldiv@bexp^0,c
  1330  000CE2  AE13               	btfss	(___fldiv@b+2)^0,7,c
  1331  000CE4  EF76  F006         	goto	u2421
  1332  000CE8  EF78  F006         	goto	u2420
  1333  000CEC                     u2421:
  1334  000CEC  EF79  F006         	goto	l2378
  1335  000CF0                     u2420:
  1336  000CF0  8028               	bsf	___fldiv@bexp^0,0,c
  1337  000CF2                     l2378:
  1338  000CF2  5028               	movf	___fldiv@bexp^0,w,c
  1339  000CF4  B4D8               	btfsc	status,2,c
  1340  000CF6  EF7F  F006         	goto	u2431
  1341  000CFA  EF81  F006         	goto	u2430
  1342  000CFE                     u2431:
  1343  000CFE  EF96  F006         	goto	l2388
  1344  000D02                     u2430:
  1345  000D02  2828               	incf	___fldiv@bexp^0,w,c
  1346  000D04  A4D8               	btfss	status,2,c
  1347  000D06  EF87  F006         	goto	u2441
  1348  000D0A  EF89  F006         	goto	u2440
  1349  000D0E                     u2441:
  1350  000D0E  EF91  F006         	goto	l2384
  1351  000D12                     u2440:
  1352  000D12  0E00               	movlw	0
  1353  000D14  6E11               	movwf	___fldiv@b^0,c
  1354  000D16  0E00               	movlw	0
  1355  000D18  6E12               	movwf	(___fldiv@b+1)^0,c
  1356  000D1A  0E00               	movlw	0
  1357  000D1C  6E13               	movwf	(___fldiv@b+2)^0,c
  1358  000D1E  0E00               	movlw	0
  1359  000D20  6E14               	movwf	(___fldiv@b+3)^0,c
  1360  000D22                     l2384:
  1361  000D22  8E13               	bsf	(___fldiv@b+2)^0,7,c
  1362  000D24  0E00               	movlw	0
  1363  000D26  6E14               	movwf	(___fldiv@b+3)^0,c
  1364  000D28  EF9E  F006         	goto	l2390
  1365  000D2C                     l2388:
  1366  000D2C  0E00               	movlw	0
  1367  000D2E  6E11               	movwf	___fldiv@b^0,c
  1368  000D30  0E00               	movlw	0
  1369  000D32  6E12               	movwf	(___fldiv@b+1)^0,c
  1370  000D34  0E00               	movlw	0
  1371  000D36  6E13               	movwf	(___fldiv@b+2)^0,c
  1372  000D38  0E00               	movlw	0
  1373  000D3A  6E14               	movwf	(___fldiv@b+3)^0,c
  1374  000D3C                     l2390:
  1375  000D3C  5018               	movf	(___fldiv@a+3)^0,w,c
  1376  000D3E  0B80               	andlw	128
  1377  000D40  1A21               	xorwf	___fldiv@sign^0,f,c
  1378  000D42  5018               	movf	(___fldiv@a+3)^0,w,c
  1379  000D44  2418               	addwf	(___fldiv@a+3)^0,w,c
  1380  000D46  6E29               	movwf	___fldiv@aexp^0,c
  1381  000D48  AE17               	btfss	(___fldiv@a+2)^0,7,c
  1382  000D4A  EFA9  F006         	goto	u2451
  1383  000D4E  EFAB  F006         	goto	u2450
  1384  000D52                     u2451:
  1385  000D52  EFAC  F006         	goto	l2398
  1386  000D56                     u2450:
  1387  000D56  8029               	bsf	___fldiv@aexp^0,0,c
  1388  000D58                     l2398:
  1389  000D58  5029               	movf	___fldiv@aexp^0,w,c
  1390  000D5A  B4D8               	btfsc	status,2,c
  1391  000D5C  EFB2  F006         	goto	u2461
  1392  000D60  EFB4  F006         	goto	u2460
  1393  000D64                     u2461:
  1394  000D64  EFC9  F006         	goto	l2408
  1395  000D68                     u2460:
  1396  000D68  2829               	incf	___fldiv@aexp^0,w,c
  1397  000D6A  A4D8               	btfss	status,2,c
  1398  000D6C  EFBA  F006         	goto	u2471
  1399  000D70  EFBC  F006         	goto	u2470
  1400  000D74                     u2471:
  1401  000D74  EFC4  F006         	goto	l2404
  1402  000D78                     u2470:
  1403  000D78  0E00               	movlw	0
  1404  000D7A  6E15               	movwf	___fldiv@a^0,c
  1405  000D7C  0E00               	movlw	0
  1406  000D7E  6E16               	movwf	(___fldiv@a+1)^0,c
  1407  000D80  0E00               	movlw	0
  1408  000D82  6E17               	movwf	(___fldiv@a+2)^0,c
  1409  000D84  0E00               	movlw	0
  1410  000D86  6E18               	movwf	(___fldiv@a+3)^0,c
  1411  000D88                     l2404:
  1412  000D88  8E17               	bsf	(___fldiv@a+2)^0,7,c
  1413  000D8A  0E00               	movlw	0
  1414  000D8C  6E18               	movwf	(___fldiv@a+3)^0,c
  1415  000D8E  EFD1  F006         	goto	l2410
  1416  000D92                     l2408:
  1417  000D92  0E00               	movlw	0
  1418  000D94  6E15               	movwf	___fldiv@a^0,c
  1419  000D96  0E00               	movlw	0
  1420  000D98  6E16               	movwf	(___fldiv@a+1)^0,c
  1421  000D9A  0E00               	movlw	0
  1422  000D9C  6E17               	movwf	(___fldiv@a+2)^0,c
  1423  000D9E  0E00               	movlw	0
  1424  000DA0  6E18               	movwf	(___fldiv@a+3)^0,c
  1425  000DA2                     l2410:
  1426  000DA2  5015               	movf	___fldiv@a^0,w,c
  1427  000DA4  1016               	iorwf	(___fldiv@a+1)^0,w,c
  1428  000DA6  1017               	iorwf	(___fldiv@a+2)^0,w,c
  1429  000DA8  1018               	iorwf	(___fldiv@a+3)^0,w,c
  1430  000DAA  A4D8               	btfss	status,2,c
  1431  000DAC  EFDA  F006         	goto	u2481
  1432  000DB0  EFDC  F006         	goto	u2480
  1433  000DB4                     u2481:
  1434  000DB4  EFF4  F006         	goto	l2422
  1435  000DB8                     u2480:
  1436  000DB8  0E00               	movlw	0
  1437  000DBA  6E11               	movwf	___fldiv@b^0,c
  1438  000DBC  0E00               	movlw	0
  1439  000DBE  6E12               	movwf	(___fldiv@b+1)^0,c
  1440  000DC0  0E00               	movlw	0
  1441  000DC2  6E13               	movwf	(___fldiv@b+2)^0,c
  1442  000DC4  0E00               	movlw	0
  1443  000DC6  6E14               	movwf	(___fldiv@b+3)^0,c
  1444  000DC8  0E80               	movlw	128
  1445  000DCA  1213               	iorwf	(___fldiv@b+2)^0,f,c
  1446  000DCC  0E7F               	movlw	127
  1447  000DCE  1214               	iorwf	(___fldiv@b+3)^0,f,c
  1448  000DD0                     l2416:
  1449  000DD0  5021               	movf	___fldiv@sign^0,w,c
  1450  000DD2  1214               	iorwf	(___fldiv@b+3)^0,f,c
  1451  000DD4  C011  F011         	movff	___fldiv@b,?___fldiv
  1452  000DD8  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  1453  000DDC  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  1454  000DE0  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  1455  000DE4  EF37  F008         	goto	l766
  1456  000DE8                     l2422:
  1457  000DE8  5028               	movf	___fldiv@bexp^0,w,c
  1458  000DEA  A4D8               	btfss	status,2,c
  1459  000DEC  EFFA  F006         	goto	u2491
  1460  000DF0  EFFC  F006         	goto	u2490
  1461  000DF4                     u2491:
  1462  000DF4  EF06  F007         	goto	l2430
  1463  000DF8                     u2490:
  1464  000DF8  0E00               	movlw	0
  1465  000DFA  6E11               	movwf	?___fldiv^0,c
  1466  000DFC  0E00               	movlw	0
  1467  000DFE  6E12               	movwf	(?___fldiv+1)^0,c
  1468  000E00  0E00               	movlw	0
  1469  000E02  6E13               	movwf	(?___fldiv+2)^0,c
  1470  000E04  0E00               	movlw	0
  1471  000E06  6E14               	movwf	(?___fldiv+3)^0,c
  1472  000E08  EF37  F008         	goto	l766
  1473  000E0C                     l2430:
  1474  000E0C  5029               	movf	___fldiv@aexp^0,w,c
  1475  000E0E  C028  F019         	movff	___fldiv@bexp,??___fldiv
  1476  000E12  6A1A               	clrf	(??___fldiv+1)^0,c
  1477  000E14  5E19               	subwf	??___fldiv^0,f,c
  1478  000E16  0E00               	movlw	0
  1479  000E18  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  1480  000E1A  0E7F               	movlw	127
  1481  000E1C  2419               	addwf	??___fldiv^0,w,c
  1482  000E1E  6E22               	movwf	___fldiv@new_exp^0,c
  1483  000E20  0E00               	movlw	0
  1484  000E22  201A               	addwfc	(??___fldiv+1)^0,w,c
  1485  000E24  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  1486  000E26  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  1487  000E2A  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  1488  000E2E  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  1489  000E32  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  1490  000E36  0E00               	movlw	0
  1491  000E38  6E11               	movwf	___fldiv@b^0,c
  1492  000E3A  0E00               	movlw	0
  1493  000E3C  6E12               	movwf	(___fldiv@b+1)^0,c
  1494  000E3E  0E00               	movlw	0
  1495  000E40  6E13               	movwf	(___fldiv@b+2)^0,c
  1496  000E42  0E00               	movlw	0
  1497  000E44  6E14               	movwf	(___fldiv@b+3)^0,c
  1498  000E46  0E00               	movlw	0
  1499  000E48  6E24               	movwf	___fldiv@grs^0,c
  1500  000E4A  0E00               	movlw	0
  1501  000E4C  6E25               	movwf	(___fldiv@grs+1)^0,c
  1502  000E4E  0E00               	movlw	0
  1503  000E50  6E26               	movwf	(___fldiv@grs+2)^0,c
  1504  000E52  0E00               	movlw	0
  1505  000E54  6E27               	movwf	(___fldiv@grs+3)^0,c
  1506  000E56  0E00               	movlw	0
  1507  000E58  6E29               	movwf	___fldiv@aexp^0,c
  1508  000E5A  EF67  F007         	goto	l768
  1509  000E5E                     l2440:
  1510  000E5E  5029               	movf	___fldiv@aexp^0,w,c
  1511  000E60  B4D8               	btfsc	status,2,c
  1512  000E62  EF35  F007         	goto	u2501
  1513  000E66  EF37  F007         	goto	u2500
  1514  000E6A                     u2501:
  1515  000E6A  EF4E  F007         	goto	l2448
  1516  000E6E                     u2500:
  1517  000E6E  90D8               	bcf	status,0,c
  1518  000E70  361D               	rlcf	___fldiv@rem^0,f,c
  1519  000E72  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  1520  000E74  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  1521  000E76  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  1522  000E78  90D8               	bcf	status,0,c
  1523  000E7A  3611               	rlcf	___fldiv@b^0,f,c
  1524  000E7C  3612               	rlcf	(___fldiv@b+1)^0,f,c
  1525  000E7E  3613               	rlcf	(___fldiv@b+2)^0,f,c
  1526  000E80  3614               	rlcf	(___fldiv@b+3)^0,f,c
  1527  000E82  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  1528  000E84  EF46  F007         	goto	u2511
  1529  000E88  EF48  F007         	goto	u2510
  1530  000E8C                     u2511:
  1531  000E8C  EF49  F007         	goto	l771
  1532  000E90                     u2510:
  1533  000E90  8011               	bsf	___fldiv@b^0,0,c
  1534  000E92                     l771:
  1535  000E92  90D8               	bcf	status,0,c
  1536  000E94  3624               	rlcf	___fldiv@grs^0,f,c
  1537  000E96  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  1538  000E98  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  1539  000E9A  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  1540  000E9C                     l2448:
  1541  000E9C  5015               	movf	___fldiv@a^0,w,c
  1542  000E9E  5C1D               	subwf	___fldiv@rem^0,w,c
  1543  000EA0  5016               	movf	(___fldiv@a+1)^0,w,c
  1544  000EA2  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  1545  000EA4  5017               	movf	(___fldiv@a+2)^0,w,c
  1546  000EA6  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  1547  000EA8  5018               	movf	(___fldiv@a+3)^0,w,c
  1548  000EAA  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  1549  000EAC  A0D8               	btfss	status,0,c
  1550  000EAE  EF5B  F007         	goto	u2521
  1551  000EB2  EF5D  F007         	goto	u2520
  1552  000EB6                     u2521:
  1553  000EB6  EF66  F007         	goto	l2454
  1554  000EBA                     u2520:
  1555  000EBA  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  1556  000EBC  5015               	movf	___fldiv@a^0,w,c
  1557  000EBE  5E1D               	subwf	___fldiv@rem^0,f,c
  1558  000EC0  5016               	movf	(___fldiv@a+1)^0,w,c
  1559  000EC2  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  1560  000EC4  5017               	movf	(___fldiv@a+2)^0,w,c
  1561  000EC6  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  1562  000EC8  5018               	movf	(___fldiv@a+3)^0,w,c
  1563  000ECA  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  1564  000ECC                     l2454:
  1565  000ECC  2A29               	incf	___fldiv@aexp^0,f,c
  1566  000ECE                     l768:
  1567  000ECE  0E19               	movlw	25
  1568  000ED0  6429               	cpfsgt	___fldiv@aexp^0,c
  1569  000ED2  EF6D  F007         	goto	u2531
  1570  000ED6  EF6F  F007         	goto	u2530
  1571  000EDA                     u2531:
  1572  000EDA  EF2F  F007         	goto	l2440
  1573  000EDE                     u2530:
  1574  000EDE  501D               	movf	___fldiv@rem^0,w,c
  1575  000EE0  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  1576  000EE2  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  1577  000EE4  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  1578  000EE6  B4D8               	btfsc	status,2,c
  1579  000EE8  EF78  F007         	goto	u2541
  1580  000EEC  EF7A  F007         	goto	u2540
  1581  000EF0                     u2541:
  1582  000EF0  EF92  F007         	goto	l2466
  1583  000EF4                     u2540:
  1584  000EF4  8024               	bsf	___fldiv@grs^0,0,c
  1585  000EF6  EF92  F007         	goto	l2466
  1586  000EFA                     l2460:
  1587  000EFA  90D8               	bcf	status,0,c
  1588  000EFC  3611               	rlcf	___fldiv@b^0,f,c
  1589  000EFE  3612               	rlcf	(___fldiv@b+1)^0,f,c
  1590  000F00  3613               	rlcf	(___fldiv@b+2)^0,f,c
  1591  000F02  3614               	rlcf	(___fldiv@b+3)^0,f,c
  1592  000F04  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  1593  000F06  EF87  F007         	goto	u2551
  1594  000F0A  EF89  F007         	goto	u2550
  1595  000F0E                     u2551:
  1596  000F0E  EF8A  F007         	goto	l777
  1597  000F12                     u2550:
  1598  000F12  8011               	bsf	___fldiv@b^0,0,c
  1599  000F14                     l777:
  1600  000F14  90D8               	bcf	status,0,c
  1601  000F16  3624               	rlcf	___fldiv@grs^0,f,c
  1602  000F18  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  1603  000F1A  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  1604  000F1C  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  1605  000F1E  0622               	decf	___fldiv@new_exp^0,f,c
  1606  000F20  A0D8               	btfss	status,0,c
  1607  000F22  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  1608  000F24                     l2466:
  1609  000F24  AE13               	btfss	(___fldiv@b+2)^0,7,c
  1610  000F26  EF97  F007         	goto	u2561
  1611  000F2A  EF99  F007         	goto	u2560
  1612  000F2E                     u2561:
  1613  000F2E  EF7D  F007         	goto	l2460
  1614  000F32                     u2560:
  1615  000F32  0E00               	movlw	0
  1616  000F34  6E29               	movwf	___fldiv@aexp^0,c
  1617  000F36  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  1618  000F38  EFA0  F007         	goto	u2571
  1619  000F3C  EFA2  F007         	goto	u2570
  1620  000F40                     u2571:
  1621  000F40  EFC6  F007         	goto	l779
  1622  000F44                     u2570:
  1623  000F44  0EFF               	movlw	255
  1624  000F46  1424               	andwf	___fldiv@grs^0,w,c
  1625  000F48  6E19               	movwf	??___fldiv^0,c
  1626  000F4A  0EFF               	movlw	255
  1627  000F4C  1425               	andwf	(___fldiv@grs+1)^0,w,c
  1628  000F4E  6E1A               	movwf	(??___fldiv+1)^0,c
  1629  000F50  0EFF               	movlw	255
  1630  000F52  1426               	andwf	(___fldiv@grs+2)^0,w,c
  1631  000F54  6E1B               	movwf	(??___fldiv+2)^0,c
  1632  000F56  0E7F               	movlw	127
  1633  000F58  1427               	andwf	(___fldiv@grs+3)^0,w,c
  1634  000F5A  6E1C               	movwf	(??___fldiv+3)^0,c
  1635  000F5C  5019               	movf	??___fldiv^0,w,c
  1636  000F5E  101A               	iorwf	(??___fldiv+1)^0,w,c
  1637  000F60  101B               	iorwf	(??___fldiv+2)^0,w,c
  1638  000F62  101C               	iorwf	(??___fldiv+3)^0,w,c
  1639  000F64  B4D8               	btfsc	status,2,c
  1640  000F66  EFB7  F007         	goto	u2581
  1641  000F6A  EFB9  F007         	goto	u2580
  1642  000F6E                     u2581:
  1643  000F6E  EFBD  F007         	goto	l780
  1644  000F72                     u2580:
  1645  000F72                     l2474:
  1646  000F72  0E01               	movlw	1
  1647  000F74  6E29               	movwf	___fldiv@aexp^0,c
  1648  000F76  EFC6  F007         	goto	l779
  1649  000F7A                     l780:
  1650  000F7A  A011               	btfss	___fldiv@b^0,0,c
  1651  000F7C  EFC2  F007         	goto	u2591
  1652  000F80  EFC4  F007         	goto	u2590
  1653  000F84                     u2591:
  1654  000F84  EFC6  F007         	goto	l779
  1655  000F88                     u2590:
  1656  000F88  EFB9  F007         	goto	l2474
  1657  000F8C                     l779:
  1658  000F8C  5029               	movf	___fldiv@aexp^0,w,c
  1659  000F8E  B4D8               	btfsc	status,2,c
  1660  000F90  EFCC  F007         	goto	u2601
  1661  000F94  EFCE  F007         	goto	u2600
  1662  000F98                     u2601:
  1663  000F98  EFF2  F007         	goto	l2486
  1664  000F9C                     u2600:
  1665  000F9C  0E01               	movlw	1
  1666  000F9E  2611               	addwf	___fldiv@b^0,f,c
  1667  000FA0  0E00               	movlw	0
  1668  000FA2  2212               	addwfc	(___fldiv@b+1)^0,f,c
  1669  000FA4  2213               	addwfc	(___fldiv@b+2)^0,f,c
  1670  000FA6  2214               	addwfc	(___fldiv@b+3)^0,f,c
  1671  000FA8  A014               	btfss	(___fldiv@b+3)^0,0,c
  1672  000FAA  EFD9  F007         	goto	u2611
  1673  000FAE  EFDB  F007         	goto	u2610
  1674  000FB2                     u2611:
  1675  000FB2  EFF2  F007         	goto	l2486
  1676  000FB6                     u2610:
  1677  000FB6  C011  F019         	movff	___fldiv@b,??___fldiv
  1678  000FBA  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  1679  000FBE  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  1680  000FC2  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  1681  000FC6  341C               	rlcf	(??___fldiv+3)^0,w,c
  1682  000FC8  321C               	rrcf	(??___fldiv+3)^0,f,c
  1683  000FCA  321B               	rrcf	(??___fldiv+2)^0,f,c
  1684  000FCC  321A               	rrcf	(??___fldiv+1)^0,f,c
  1685  000FCE  3219               	rrcf	??___fldiv^0,f,c
  1686  000FD0  C019  F011         	movff	??___fldiv,___fldiv@b
  1687  000FD4  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  1688  000FD8  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  1689  000FDC  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  1690  000FE0  4A22               	infsnz	___fldiv@new_exp^0,f,c
  1691  000FE2  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  1692  000FE4                     l2486:
  1693  000FE4  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1694  000FE6  EFFD  F007         	goto	u2621
  1695  000FEA  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  1696  000FEC  E108               	bnz	u2620
  1697  000FEE  2822               	incf	___fldiv@new_exp^0,w,c
  1698  000FF0  A0D8               	btfss	status,0,c
  1699  000FF2  EFFD  F007         	goto	u2621
  1700  000FF6  EFFF  F007         	goto	u2620
  1701  000FFA                     u2621:
  1702  000FFA  EF0A  F008         	goto	l2490
  1703  000FFE                     u2620:
  1704  000FFE  0E00               	movlw	0
  1705  001000  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  1706  001002  6822               	setf	___fldiv@new_exp^0,c
  1707  001004  0E00               	movlw	0
  1708  001006  6E11               	movwf	___fldiv@b^0,c
  1709  001008  0E00               	movlw	0
  1710  00100A  6E12               	movwf	(___fldiv@b+1)^0,c
  1711  00100C  0E00               	movlw	0
  1712  00100E  6E13               	movwf	(___fldiv@b+2)^0,c
  1713  001010  0E00               	movlw	0
  1714  001012  6E14               	movwf	(___fldiv@b+3)^0,c
  1715  001014                     l2490:
  1716  001014  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1717  001016  EF17  F008         	goto	u2630
  1718  00101A  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  1719  00101C  E106               	bnz	u2631
  1720  00101E  0422               	decf	___fldiv@new_exp^0,w,c
  1721  001020  B0D8               	btfsc	status,0,c
  1722  001022  EF15  F008         	goto	u2631
  1723  001026  EF17  F008         	goto	u2630
  1724  00102A                     u2631:
  1725  00102A  EF25  F008         	goto	l2494
  1726  00102E                     u2630:
  1727  00102E  0E00               	movlw	0
  1728  001030  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  1729  001032  0E00               	movlw	0
  1730  001034  6E22               	movwf	___fldiv@new_exp^0,c
  1731  001036  0E00               	movlw	0
  1732  001038  6E11               	movwf	___fldiv@b^0,c
  1733  00103A  0E00               	movlw	0
  1734  00103C  6E12               	movwf	(___fldiv@b+1)^0,c
  1735  00103E  0E00               	movlw	0
  1736  001040  6E13               	movwf	(___fldiv@b+2)^0,c
  1737  001042  0E00               	movlw	0
  1738  001044  6E14               	movwf	(___fldiv@b+3)^0,c
  1739  001046  0E00               	movlw	0
  1740  001048  6E21               	movwf	___fldiv@sign^0,c
  1741  00104A                     l2494:
  1742  00104A  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  1743  00104E  A028               	btfss	___fldiv@bexp^0,0,c
  1744  001050  EF2C  F008         	goto	u2641
  1745  001054  EF2E  F008         	goto	u2640
  1746  001058                     u2641:
  1747  001058  EF31  F008         	goto	l2500
  1748  00105C                     u2640:
  1749  00105C  8E13               	bsf	(___fldiv@b+2)^0,7,c
  1750  00105E  EF32  F008         	goto	l2502
  1751  001062                     l2500:
  1752  001062  9E13               	bcf	(___fldiv@b+2)^0,7,c
  1753  001064                     l2502:
  1754  001064  90D8               	bcf	status,0,c
  1755  001066  3028               	rrcf	___fldiv@bexp^0,w,c
  1756  001068  6E14               	movwf	(___fldiv@b+3)^0,c
  1757  00106A  EFE8  F006         	goto	l2416
  1758  00106E                     l766:
  1759  00106E  0012               	return		;funcret
  1760  001070                     __end_of___fldiv:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function ___fladd *****************
  1764 ;; Defined at:
  1765 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  b               4   41[COMRAM] unsigned char 
  1768 ;;  a               4   45[COMRAM] unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  grs             1   56[COMRAM] unsigned char 
  1771 ;;  bexp            1   55[COMRAM] unsigned char 
  1772 ;;  aexp            1   54[COMRAM] unsigned char 
  1773 ;;  signs           1   53[COMRAM] unsigned char 
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  4   41[COMRAM] unsigned char 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1783 ;;      Params:         8       0       0       0       0       0       0       0       0
  1784 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1785 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1786 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1787 ;;Total ram usage:       16 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    1
  1790 ;; This function calls:
  1791 ;;		Nothing
  1792 ;; This function is called by:
  1793 ;;		_USART_Init
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text5
  1798  000816                     __ptext5:
  1799                           	callstack 0
  1800  000816                     ___fladd:
  1801                           	callstack 28
  1802  000816  502D               	movf	(___fladd@b+3)^0,w,c
  1803  000818  0B80               	andlw	128
  1804  00081A  6E36               	movwf	___fladd@signs^0,c
  1805  00081C  502D               	movf	(___fladd@b+3)^0,w,c
  1806  00081E  242D               	addwf	(___fladd@b+3)^0,w,c
  1807  000820  6E38               	movwf	___fladd@bexp^0,c
  1808  000822  AE2C               	btfss	(___fladd@b+2)^0,7,c
  1809  000824  EF16  F004         	goto	u2031
  1810  000828  EF18  F004         	goto	u2030
  1811  00082C                     u2031:
  1812  00082C  EF19  F004         	goto	l2176
  1813  000830                     u2030:
  1814  000830  8038               	bsf	___fladd@bexp^0,0,c
  1815  000832                     l2176:
  1816  000832  5038               	movf	___fladd@bexp^0,w,c
  1817  000834  B4D8               	btfsc	status,2,c
  1818  000836  EF1F  F004         	goto	u2041
  1819  00083A  EF21  F004         	goto	u2040
  1820  00083E                     u2041:
  1821  00083E  EF36  F004         	goto	l2186
  1822  000842                     u2040:
  1823  000842  2838               	incf	___fladd@bexp^0,w,c
  1824  000844  A4D8               	btfss	status,2,c
  1825  000846  EF27  F004         	goto	u2051
  1826  00084A  EF29  F004         	goto	u2050
  1827  00084E                     u2051:
  1828  00084E  EF31  F004         	goto	l2182
  1829  000852                     u2050:
  1830  000852  0E00               	movlw	0
  1831  000854  6E2A               	movwf	___fladd@b^0,c
  1832  000856  0E00               	movlw	0
  1833  000858  6E2B               	movwf	(___fladd@b+1)^0,c
  1834  00085A  0E00               	movlw	0
  1835  00085C  6E2C               	movwf	(___fladd@b+2)^0,c
  1836  00085E  0E00               	movlw	0
  1837  000860  6E2D               	movwf	(___fladd@b+3)^0,c
  1838  000862                     l2182:
  1839  000862  8E2C               	bsf	(___fladd@b+2)^0,7,c
  1840  000864  0E00               	movlw	0
  1841  000866  6E2D               	movwf	(___fladd@b+3)^0,c
  1842  000868  EF3E  F004         	goto	l2188
  1843  00086C                     l2186:
  1844  00086C  0E00               	movlw	0
  1845  00086E  6E2A               	movwf	___fladd@b^0,c
  1846  000870  0E00               	movlw	0
  1847  000872  6E2B               	movwf	(___fladd@b+1)^0,c
  1848  000874  0E00               	movlw	0
  1849  000876  6E2C               	movwf	(___fladd@b+2)^0,c
  1850  000878  0E00               	movlw	0
  1851  00087A  6E2D               	movwf	(___fladd@b+3)^0,c
  1852  00087C                     l2188:
  1853  00087C  5031               	movf	(___fladd@a+3)^0,w,c
  1854  00087E  0B80               	andlw	128
  1855  000880  6E37               	movwf	___fladd@aexp^0,c
  1856  000882  5036               	movf	___fladd@signs^0,w,c
  1857  000884  1837               	xorwf	___fladd@aexp^0,w,c
  1858  000886  B4D8               	btfsc	status,2,c
  1859  000888  EF48  F004         	goto	u2061
  1860  00088C  EF4A  F004         	goto	u2060
  1861  000890                     u2061:
  1862  000890  EF4B  F004         	goto	l2194
  1863  000894                     u2060:
  1864  000894  8C36               	bsf	___fladd@signs^0,6,c
  1865  000896                     l2194:
  1866  000896  5031               	movf	(___fladd@a+3)^0,w,c
  1867  000898  2431               	addwf	(___fladd@a+3)^0,w,c
  1868  00089A  6E37               	movwf	___fladd@aexp^0,c
  1869  00089C  AE30               	btfss	(___fladd@a+2)^0,7,c
  1870  00089E  EF53  F004         	goto	u2071
  1871  0008A2  EF55  F004         	goto	u2070
  1872  0008A6                     u2071:
  1873  0008A6  EF56  F004         	goto	l2200
  1874  0008AA                     u2070:
  1875  0008AA  8037               	bsf	___fladd@aexp^0,0,c
  1876  0008AC                     l2200:
  1877  0008AC  5037               	movf	___fladd@aexp^0,w,c
  1878  0008AE  B4D8               	btfsc	status,2,c
  1879  0008B0  EF5C  F004         	goto	u2081
  1880  0008B4  EF5E  F004         	goto	u2080
  1881  0008B8                     u2081:
  1882  0008B8  EF73  F004         	goto	l2210
  1883  0008BC                     u2080:
  1884  0008BC  2837               	incf	___fladd@aexp^0,w,c
  1885  0008BE  A4D8               	btfss	status,2,c
  1886  0008C0  EF64  F004         	goto	u2091
  1887  0008C4  EF66  F004         	goto	u2090
  1888  0008C8                     u2091:
  1889  0008C8  EF6E  F004         	goto	l2206
  1890  0008CC                     u2090:
  1891  0008CC  0E00               	movlw	0
  1892  0008CE  6E2E               	movwf	___fladd@a^0,c
  1893  0008D0  0E00               	movlw	0
  1894  0008D2  6E2F               	movwf	(___fladd@a+1)^0,c
  1895  0008D4  0E00               	movlw	0
  1896  0008D6  6E30               	movwf	(___fladd@a+2)^0,c
  1897  0008D8  0E00               	movlw	0
  1898  0008DA  6E31               	movwf	(___fladd@a+3)^0,c
  1899  0008DC                     l2206:
  1900  0008DC  8E30               	bsf	(___fladd@a+2)^0,7,c
  1901  0008DE  0E00               	movlw	0
  1902  0008E0  6E31               	movwf	(___fladd@a+3)^0,c
  1903  0008E2  EF7B  F004         	goto	l2212
  1904  0008E6                     l2210:
  1905  0008E6  0E00               	movlw	0
  1906  0008E8  6E2E               	movwf	___fladd@a^0,c
  1907  0008EA  0E00               	movlw	0
  1908  0008EC  6E2F               	movwf	(___fladd@a+1)^0,c
  1909  0008EE  0E00               	movlw	0
  1910  0008F0  6E30               	movwf	(___fladd@a+2)^0,c
  1911  0008F2  0E00               	movlw	0
  1912  0008F4  6E31               	movwf	(___fladd@a+3)^0,c
  1913  0008F6                     l2212:
  1914  0008F6  5038               	movf	___fladd@bexp^0,w,c
  1915  0008F8  5C37               	subwf	___fladd@aexp^0,w,c
  1916  0008FA  B0D8               	btfsc	status,0,c
  1917  0008FC  EF82  F004         	goto	u2101
  1918  000900  EF84  F004         	goto	u2100
  1919  000904                     u2101:
  1920  000904  EFAB  F004         	goto	l2248
  1921  000908                     u2100:
  1922  000908  AC36               	btfss	___fladd@signs^0,6,c
  1923  00090A  EF89  F004         	goto	u2111
  1924  00090E  EF8B  F004         	goto	u2110
  1925  000912                     u2111:
  1926  000912  EF8D  F004         	goto	l2218
  1927  000916                     u2110:
  1928  000916  0E80               	movlw	128
  1929  000918  1A36               	xorwf	___fladd@signs^0,f,c
  1930  00091A                     l2218:
  1931  00091A  C038  F039         	movff	___fladd@bexp,___fladd@grs
  1932  00091E  C037  F038         	movff	___fladd@aexp,___fladd@bexp
  1933  000922  C039  F037         	movff	___fladd@grs,___fladd@aexp
  1934  000926  C02A  F039         	movff	___fladd@b,___fladd@grs
  1935  00092A  C02E  F02A         	movff	___fladd@a,___fladd@b
  1936  00092E  C039  F02E         	movff	___fladd@grs,___fladd@a
  1937  000932  C02B  F039         	movff	___fladd@b+1,___fladd@grs
  1938  000936  C02F  F02B         	movff	___fladd@a+1,___fladd@b+1
  1939  00093A  C039  F02F         	movff	___fladd@grs,___fladd@a+1
  1940  00093E  C02C  F039         	movff	___fladd@b+2,___fladd@grs
  1941  000942  C030  F02C         	movff	___fladd@a+2,___fladd@b+2
  1942  000946  C039  F030         	movff	___fladd@grs,___fladd@a+2
  1943  00094A  C02D  F039         	movff	___fladd@b+3,___fladd@grs
  1944  00094E  C031  F02D         	movff	___fladd@a+3,___fladd@b+3
  1945  000952  C039  F031         	movff	___fladd@grs,___fladd@a+3
  1946  000956                     l2248:
  1947  000956  0E00               	movlw	0
  1948  000958  6E39               	movwf	___fladd@grs^0,c
  1949  00095A  5038               	movf	___fladd@bexp^0,w,c
  1950  00095C  C037  F032         	movff	___fladd@aexp,??___fladd
  1951  000960  6A33               	clrf	(??___fladd+1)^0,c
  1952  000962  5E32               	subwf	??___fladd^0,f,c
  1953  000964  0E00               	movlw	0
  1954  000966  5A33               	subwfb	(??___fladd+1)^0,f,c
  1955  000968  BE33               	btfsc	(??___fladd+1)^0,7,c
  1956  00096A  EFC0  F004         	goto	u2121
  1957  00096E  5033               	movf	(??___fladd+1)^0,w,c
  1958  000970  E109               	bnz	u2120
  1959  000972  0E1A               	movlw	26
  1960  000974  5C32               	subwf	??___fladd^0,w,c
  1961  000976  A0D8               	btfss	status,0,c
  1962  000978  EFC0  F004         	goto	u2121
  1963  00097C  EFC2  F004         	goto	u2120
  1964  000980                     u2121:
  1965  000980  EFF9  F004         	goto	l713
  1966  000984                     u2120:
  1967  000984  502A               	movf	___fladd@b^0,w,c
  1968  000986  102B               	iorwf	(___fladd@b+1)^0,w,c
  1969  000988  102C               	iorwf	(___fladd@b+2)^0,w,c
  1970  00098A  102D               	iorwf	(___fladd@b+3)^0,w,c
  1971  00098C  A4D8               	btfss	status,2,c
  1972  00098E  EFCB  F004         	goto	u2131
  1973  000992  EFCE  F004         	goto	u2130
  1974  000996                     u2131:
  1975  000996  0E01               	movlw	1
  1976  000998  EFCF  F004         	goto	u2140
  1977  00099C                     u2130:
  1978  00099C  0E00               	movlw	0
  1979  00099E                     u2140:
  1980  00099E  6E39               	movwf	___fladd@grs^0,c
  1981  0009A0  0E00               	movlw	0
  1982  0009A2  6E2A               	movwf	___fladd@b^0,c
  1983  0009A4  0E00               	movlw	0
  1984  0009A6  6E2B               	movwf	(___fladd@b+1)^0,c
  1985  0009A8  0E00               	movlw	0
  1986  0009AA  6E2C               	movwf	(___fladd@b+2)^0,c
  1987  0009AC  0E00               	movlw	0
  1988  0009AE  6E2D               	movwf	(___fladd@b+3)^0,c
  1989  0009B0  C037  F038         	movff	___fladd@aexp,___fladd@bexp
  1990  0009B4  EF02  F005         	goto	l712
  1991  0009B8                     l714:
  1992  0009B8  A039               	btfss	___fladd@grs^0,0,c
  1993  0009BA  EFE1  F004         	goto	u2151
  1994  0009BE  EFE3  F004         	goto	u2150
  1995  0009C2                     u2151:
  1996  0009C2  EFE9  F004         	goto	l2260
  1997  0009C6                     u2150:
  1998  0009C6  90D8               	bcf	status,0,c
  1999  0009C8  3039               	rrcf	___fladd@grs^0,w,c
  2000  0009CA  0901               	iorlw	1
  2001  0009CC  6E39               	movwf	___fladd@grs^0,c
  2002  0009CE  EFEB  F004         	goto	l2262
  2003  0009D2                     l2260:
  2004  0009D2  90D8               	bcf	status,0,c
  2005  0009D4  3239               	rrcf	___fladd@grs^0,f,c
  2006  0009D6                     l2262:
  2007  0009D6  A02A               	btfss	___fladd@b^0,0,c
  2008  0009D8  EFF0  F004         	goto	u2161
  2009  0009DC  EFF2  F004         	goto	u2160
  2010  0009E0                     u2161:
  2011  0009E0  EFF3  F004         	goto	l2266
  2012  0009E4                     u2160:
  2013  0009E4  8E39               	bsf	___fladd@grs^0,7,c
  2014  0009E6                     l2266:
  2015  0009E6  342D               	rlcf	(___fladd@b+3)^0,w,c
  2016  0009E8  322D               	rrcf	(___fladd@b+3)^0,f,c
  2017  0009EA  322C               	rrcf	(___fladd@b+2)^0,f,c
  2018  0009EC  322B               	rrcf	(___fladd@b+1)^0,f,c
  2019  0009EE  322A               	rrcf	___fladd@b^0,f,c
  2020  0009F0  2A38               	incf	___fladd@bexp^0,f,c
  2021  0009F2                     l713:
  2022  0009F2  5037               	movf	___fladd@aexp^0,w,c
  2023  0009F4  5C38               	subwf	___fladd@bexp^0,w,c
  2024  0009F6  A0D8               	btfss	status,0,c
  2025  0009F8  EF00  F005         	goto	u2171
  2026  0009FC  EF02  F005         	goto	u2170
  2027  000A00                     u2171:
  2028  000A00  EFDC  F004         	goto	l714
  2029  000A04                     u2170:
  2030  000A04                     l712:
  2031  000A04  BC36               	btfsc	___fladd@signs^0,6,c
  2032  000A06  EF07  F005         	goto	u2181
  2033  000A0A  EF09  F005         	goto	u2180
  2034  000A0E                     u2181:
  2035  000A0E  EF49  F005         	goto	l2294
  2036  000A12                     u2180:
  2037  000A12  5038               	movf	___fladd@bexp^0,w,c
  2038  000A14  A4D8               	btfss	status,2,c
  2039  000A16  EF0F  F005         	goto	u2191
  2040  000A1A  EF11  F005         	goto	u2190
  2041  000A1E                     u2191:
  2042  000A1E  EF1B  F005         	goto	l2276
  2043  000A22                     u2190:
  2044  000A22  0E00               	movlw	0
  2045  000A24  6E2A               	movwf	?___fladd^0,c
  2046  000A26  0E00               	movlw	0
  2047  000A28  6E2B               	movwf	(?___fladd+1)^0,c
  2048  000A2A  0E00               	movlw	0
  2049  000A2C  6E2C               	movwf	(?___fladd+2)^0,c
  2050  000A2E  0E00               	movlw	0
  2051  000A30  6E2D               	movwf	(?___fladd+3)^0,c
  2052  000A32  EF6A  F006         	goto	l721
  2053  000A36                     l2276:
  2054  000A36  502E               	movf	___fladd@a^0,w,c
  2055  000A38  262A               	addwf	___fladd@b^0,f,c
  2056  000A3A  502F               	movf	(___fladd@a+1)^0,w,c
  2057  000A3C  222B               	addwfc	(___fladd@b+1)^0,f,c
  2058  000A3E  5030               	movf	(___fladd@a+2)^0,w,c
  2059  000A40  222C               	addwfc	(___fladd@b+2)^0,f,c
  2060  000A42  5031               	movf	(___fladd@a+3)^0,w,c
  2061  000A44  222D               	addwfc	(___fladd@b+3)^0,f,c
  2062  000A46  A02D               	btfss	(___fladd@b+3)^0,0,c
  2063  000A48  EF28  F005         	goto	u2201
  2064  000A4C  EF2A  F005         	goto	u2200
  2065  000A50                     u2201:
  2066  000A50  EFD6  F005         	goto	l2330
  2067  000A54                     u2200:
  2068  000A54  A039               	btfss	___fladd@grs^0,0,c
  2069  000A56  EF2F  F005         	goto	u2211
  2070  000A5A  EF31  F005         	goto	u2210
  2071  000A5E                     u2211:
  2072  000A5E  EF37  F005         	goto	l2284
  2073  000A62                     u2210:
  2074  000A62  90D8               	bcf	status,0,c
  2075  000A64  3039               	rrcf	___fladd@grs^0,w,c
  2076  000A66  0901               	iorlw	1
  2077  000A68  6E39               	movwf	___fladd@grs^0,c
  2078  000A6A  EF39  F005         	goto	l2286
  2079  000A6E                     l2284:
  2080  000A6E  90D8               	bcf	status,0,c
  2081  000A70  3239               	rrcf	___fladd@grs^0,f,c
  2082  000A72                     l2286:
  2083  000A72  A02A               	btfss	___fladd@b^0,0,c
  2084  000A74  EF3E  F005         	goto	u2221
  2085  000A78  EF40  F005         	goto	u2220
  2086  000A7C                     u2221:
  2087  000A7C  EF41  F005         	goto	l2290
  2088  000A80                     u2220:
  2089  000A80  8E39               	bsf	___fladd@grs^0,7,c
  2090  000A82                     l2290:
  2091  000A82  342D               	rlcf	(___fladd@b+3)^0,w,c
  2092  000A84  322D               	rrcf	(___fladd@b+3)^0,f,c
  2093  000A86  322C               	rrcf	(___fladd@b+2)^0,f,c
  2094  000A88  322B               	rrcf	(___fladd@b+1)^0,f,c
  2095  000A8A  322A               	rrcf	___fladd@b^0,f,c
  2096  000A8C  2A38               	incf	___fladd@bexp^0,f,c
  2097  000A8E  EFD6  F005         	goto	l2330
  2098  000A92                     l2294:
  2099  000A92  502E               	movf	___fladd@a^0,w,c
  2100  000A94  5C2A               	subwf	___fladd@b^0,w,c
  2101  000A96  502F               	movf	(___fladd@a+1)^0,w,c
  2102  000A98  582B               	subwfb	(___fladd@b+1)^0,w,c
  2103  000A9A  5030               	movf	(___fladd@a+2)^0,w,c
  2104  000A9C  582C               	subwfb	(___fladd@b+2)^0,w,c
  2105  000A9E  502D               	movf	(___fladd@b+3)^0,w,c
  2106  000AA0  0A80               	xorlw	128
  2107  000AA2  6E32               	movwf	??___fladd^0,c
  2108  000AA4  5031               	movf	(___fladd@a+3)^0,w,c
  2109  000AA6  0A80               	xorlw	128
  2110  000AA8  5832               	subwfb	??___fladd^0,w,c
  2111  000AAA  B0D8               	btfsc	status,0,c
  2112  000AAC  EF5A  F005         	goto	u2231
  2113  000AB0  EF5C  F005         	goto	u2230
  2114  000AB4                     u2231:
  2115  000AB4  EF87  F005         	goto	l2304
  2116  000AB8                     u2230:
  2117  000AB8  502A               	movf	___fladd@b^0,w,c
  2118  000ABA  5C2E               	subwf	___fladd@a^0,w,c
  2119  000ABC  6E32               	movwf	??___fladd^0,c
  2120  000ABE  502B               	movf	(___fladd@b+1)^0,w,c
  2121  000AC0  582F               	subwfb	(___fladd@a+1)^0,w,c
  2122  000AC2  6E33               	movwf	(??___fladd+1)^0,c
  2123  000AC4  502C               	movf	(___fladd@b+2)^0,w,c
  2124  000AC6  5830               	subwfb	(___fladd@a+2)^0,w,c
  2125  000AC8  6E34               	movwf	(??___fladd+2)^0,c
  2126  000ACA  502D               	movf	(___fladd@b+3)^0,w,c
  2127  000ACC  5831               	subwfb	(___fladd@a+3)^0,w,c
  2128  000ACE  6E35               	movwf	(??___fladd+3)^0,c
  2129  000AD0  0EFF               	movlw	255
  2130  000AD2  2432               	addwf	??___fladd^0,w,c
  2131  000AD4  6E2A               	movwf	___fladd@b^0,c
  2132  000AD6  0EFF               	movlw	255
  2133  000AD8  2033               	addwfc	(??___fladd+1)^0,w,c
  2134  000ADA  6E2B               	movwf	(___fladd@b+1)^0,c
  2135  000ADC  0EFF               	movlw	255
  2136  000ADE  2034               	addwfc	(??___fladd+2)^0,w,c
  2137  000AE0  6E2C               	movwf	(___fladd@b+2)^0,c
  2138  000AE2  0EFF               	movlw	255
  2139  000AE4  2035               	addwfc	(??___fladd+3)^0,w,c
  2140  000AE6  6E2D               	movwf	(___fladd@b+3)^0,c
  2141  000AE8  0E80               	movlw	128
  2142  000AEA  1A36               	xorwf	___fladd@signs^0,f,c
  2143  000AEC  6C39               	negf	___fladd@grs^0,c
  2144  000AEE  5039               	movf	___fladd@grs^0,w,c
  2145  000AF0  A4D8               	btfss	status,2,c
  2146  000AF2  EF7D  F005         	goto	u2241
  2147  000AF6  EF7F  F005         	goto	u2240
  2148  000AFA                     u2241:
  2149  000AFA  EF8F  F005         	goto	l729
  2150  000AFE                     u2240:
  2151  000AFE  0E01               	movlw	1
  2152  000B00  262A               	addwf	___fladd@b^0,f,c
  2153  000B02  0E00               	movlw	0
  2154  000B04  222B               	addwfc	(___fladd@b+1)^0,f,c
  2155  000B06  222C               	addwfc	(___fladd@b+2)^0,f,c
  2156  000B08  222D               	addwfc	(___fladd@b+3)^0,f,c
  2157  000B0A  EF8F  F005         	goto	l729
  2158  000B0E                     l2304:
  2159  000B0E  502E               	movf	___fladd@a^0,w,c
  2160  000B10  5E2A               	subwf	___fladd@b^0,f,c
  2161  000B12  502F               	movf	(___fladd@a+1)^0,w,c
  2162  000B14  5A2B               	subwfb	(___fladd@b+1)^0,f,c
  2163  000B16  5030               	movf	(___fladd@a+2)^0,w,c
  2164  000B18  5A2C               	subwfb	(___fladd@b+2)^0,f,c
  2165  000B1A  5031               	movf	(___fladd@a+3)^0,w,c
  2166  000B1C  5A2D               	subwfb	(___fladd@b+3)^0,f,c
  2167  000B1E                     l729:
  2168  000B1E  502A               	movf	___fladd@b^0,w,c
  2169  000B20  102B               	iorwf	(___fladd@b+1)^0,w,c
  2170  000B22  102C               	iorwf	(___fladd@b+2)^0,w,c
  2171  000B24  102D               	iorwf	(___fladd@b+3)^0,w,c
  2172  000B26  A4D8               	btfss	status,2,c
  2173  000B28  EF98  F005         	goto	u2251
  2174  000B2C  EF9A  F005         	goto	u2250
  2175  000B30                     u2251:
  2176  000B30  EFCF  F005         	goto	l2328
  2177  000B34                     u2250:
  2178  000B34  5039               	movf	___fladd@grs^0,w,c
  2179  000B36  A4D8               	btfss	status,2,c
  2180  000B38  EFA0  F005         	goto	u2261
  2181  000B3C  EFA2  F005         	goto	u2260
  2182  000B40                     u2261:
  2183  000B40  EFCF  F005         	goto	l2328
  2184  000B44                     u2260:
  2185  000B44  0E00               	movlw	0
  2186  000B46  6E2A               	movwf	?___fladd^0,c
  2187  000B48  0E00               	movlw	0
  2188  000B4A  6E2B               	movwf	(?___fladd+1)^0,c
  2189  000B4C  0E00               	movlw	0
  2190  000B4E  6E2C               	movwf	(?___fladd+2)^0,c
  2191  000B50  0E00               	movlw	0
  2192  000B52  6E2D               	movwf	(?___fladd+3)^0,c
  2193  000B54  EF6A  F006         	goto	l721
  2194  000B58                     l2312:
  2195  000B58  90D8               	bcf	status,0,c
  2196  000B5A  362A               	rlcf	___fladd@b^0,f,c
  2197  000B5C  362B               	rlcf	(___fladd@b+1)^0,f,c
  2198  000B5E  362C               	rlcf	(___fladd@b+2)^0,f,c
  2199  000B60  362D               	rlcf	(___fladd@b+3)^0,f,c
  2200  000B62  AE39               	btfss	___fladd@grs^0,7,c
  2201  000B64  EFB6  F005         	goto	u2271
  2202  000B68  EFB8  F005         	goto	u2270
  2203  000B6C                     u2271:
  2204  000B6C  EFB9  F005         	goto	l2318
  2205  000B70                     u2270:
  2206  000B70  802A               	bsf	___fladd@b^0,0,c
  2207  000B72                     l2318:
  2208  000B72  A039               	btfss	___fladd@grs^0,0,c
  2209  000B74  EFBE  F005         	goto	u2281
  2210  000B78  EFC0  F005         	goto	u2280
  2211  000B7C                     u2281:
  2212  000B7C  EFC4  F005         	goto	l2322
  2213  000B80                     u2280:
  2214  000B80  80D8               	bsf	status,0,c
  2215  000B82  3639               	rlcf	___fladd@grs^0,f,c
  2216  000B84  EFC6  F005         	goto	l2324
  2217  000B88                     l2322:
  2218  000B88  90D8               	bcf	status,0,c
  2219  000B8A  3639               	rlcf	___fladd@grs^0,f,c
  2220  000B8C                     l2324:
  2221  000B8C  5038               	movf	___fladd@bexp^0,w,c
  2222  000B8E  B4D8               	btfsc	status,2,c
  2223  000B90  EFCC  F005         	goto	u2291
  2224  000B94  EFCE  F005         	goto	u2290
  2225  000B98                     u2291:
  2226  000B98  EFCF  F005         	goto	l2328
  2227  000B9C                     u2290:
  2228  000B9C  0638               	decf	___fladd@bexp^0,f,c
  2229  000B9E                     l2328:
  2230  000B9E  AE2C               	btfss	(___fladd@b+2)^0,7,c
  2231  000BA0  EFD4  F005         	goto	u2301
  2232  000BA4  EFD6  F005         	goto	u2300
  2233  000BA8                     u2301:
  2234  000BA8  EFAC  F005         	goto	l2312
  2235  000BAC                     u2300:
  2236  000BAC                     l2330:
  2237  000BAC  0E00               	movlw	0
  2238  000BAE  6E37               	movwf	___fladd@aexp^0,c
  2239  000BB0  AE39               	btfss	___fladd@grs^0,7,c
  2240  000BB2  EFDD  F005         	goto	u2311
  2241  000BB6  EFDF  F005         	goto	u2310
  2242  000BBA                     u2311:
  2243  000BBA  EFF7  F005         	goto	l738
  2244  000BBE                     u2310:
  2245  000BBE  C039  F032         	movff	___fladd@grs,??___fladd
  2246  000BC2  0E7F               	movlw	127
  2247  000BC4  1632               	andwf	??___fladd^0,f,c
  2248  000BC6  B4D8               	btfsc	status,2,c
  2249  000BC8  EFE8  F005         	goto	u2321
  2250  000BCC  EFEA  F005         	goto	u2320
  2251  000BD0                     u2321:
  2252  000BD0  EFEE  F005         	goto	l739
  2253  000BD4                     u2320:
  2254  000BD4                     l2336:
  2255  000BD4  0E01               	movlw	1
  2256  000BD6  6E37               	movwf	___fladd@aexp^0,c
  2257  000BD8  EFF7  F005         	goto	l738
  2258  000BDC                     l739:
  2259  000BDC  A02A               	btfss	___fladd@b^0,0,c
  2260  000BDE  EFF3  F005         	goto	u2331
  2261  000BE2  EFF5  F005         	goto	u2330
  2262  000BE6                     u2331:
  2263  000BE6  EFF7  F005         	goto	l738
  2264  000BEA                     u2330:
  2265  000BEA  EFEA  F005         	goto	l2336
  2266  000BEE                     l738:
  2267  000BEE  5037               	movf	___fladd@aexp^0,w,c
  2268  000BF0  B4D8               	btfsc	status,2,c
  2269  000BF2  EFFD  F005         	goto	u2341
  2270  000BF6  EFFF  F005         	goto	u2340
  2271  000BFA                     u2341:
  2272  000BFA  EF2A  F006         	goto	l2348
  2273  000BFE                     u2340:
  2274  000BFE  0E01               	movlw	1
  2275  000C00  262A               	addwf	___fladd@b^0,f,c
  2276  000C02  0E00               	movlw	0
  2277  000C04  222B               	addwfc	(___fladd@b+1)^0,f,c
  2278  000C06  222C               	addwfc	(___fladd@b+2)^0,f,c
  2279  000C08  222D               	addwfc	(___fladd@b+3)^0,f,c
  2280  000C0A  A02D               	btfss	(___fladd@b+3)^0,0,c
  2281  000C0C  EF0A  F006         	goto	u2351
  2282  000C10  EF0C  F006         	goto	u2350
  2283  000C14                     u2351:
  2284  000C14  EF2A  F006         	goto	l2348
  2285  000C18                     u2350:
  2286  000C18  C02A  F032         	movff	___fladd@b,??___fladd
  2287  000C1C  C02B  F033         	movff	___fladd@b+1,??___fladd+1
  2288  000C20  C02C  F034         	movff	___fladd@b+2,??___fladd+2
  2289  000C24  C02D  F035         	movff	___fladd@b+3,??___fladd+3
  2290  000C28  3435               	rlcf	(??___fladd+3)^0,w,c
  2291  000C2A  3235               	rrcf	(??___fladd+3)^0,f,c
  2292  000C2C  3234               	rrcf	(??___fladd+2)^0,f,c
  2293  000C2E  3233               	rrcf	(??___fladd+1)^0,f,c
  2294  000C30  3232               	rrcf	??___fladd^0,f,c
  2295  000C32  C032  F02A         	movff	??___fladd,___fladd@b
  2296  000C36  C033  F02B         	movff	??___fladd+1,___fladd@b+1
  2297  000C3A  C034  F02C         	movff	??___fladd+2,___fladd@b+2
  2298  000C3E  C035  F02D         	movff	??___fladd+3,___fladd@b+3
  2299  000C42  2838               	incf	___fladd@bexp^0,w,c
  2300  000C44  B4D8               	btfsc	status,2,c
  2301  000C46  EF27  F006         	goto	u2361
  2302  000C4A  EF29  F006         	goto	u2360
  2303  000C4E                     u2361:
  2304  000C4E  EF2A  F006         	goto	l2348
  2305  000C52                     u2360:
  2306  000C52  2A38               	incf	___fladd@bexp^0,f,c
  2307  000C54                     l2348:
  2308  000C54  2838               	incf	___fladd@bexp^0,w,c
  2309  000C56  B4D8               	btfsc	status,2,c
  2310  000C58  EF30  F006         	goto	u2371
  2311  000C5C  EF32  F006         	goto	u2370
  2312  000C60                     u2371:
  2313  000C60  EF3A  F006         	goto	l2352
  2314  000C64                     u2370:
  2315  000C64  5038               	movf	___fladd@bexp^0,w,c
  2316  000C66  A4D8               	btfss	status,2,c
  2317  000C68  EF38  F006         	goto	u2381
  2318  000C6C  EF3A  F006         	goto	u2380
  2319  000C70                     u2381:
  2320  000C70  EF4C  F006         	goto	l2356
  2321  000C74                     u2380:
  2322  000C74                     l2352:
  2323  000C74  0E00               	movlw	0
  2324  000C76  6E2A               	movwf	___fladd@b^0,c
  2325  000C78  0E00               	movlw	0
  2326  000C7A  6E2B               	movwf	(___fladd@b+1)^0,c
  2327  000C7C  0E00               	movlw	0
  2328  000C7E  6E2C               	movwf	(___fladd@b+2)^0,c
  2329  000C80  0E00               	movlw	0
  2330  000C82  6E2D               	movwf	(___fladd@b+3)^0,c
  2331  000C84  5038               	movf	___fladd@bexp^0,w,c
  2332  000C86  A4D8               	btfss	status,2,c
  2333  000C88  EF48  F006         	goto	u2391
  2334  000C8C  EF4A  F006         	goto	u2390
  2335  000C90                     u2391:
  2336  000C90  EF4C  F006         	goto	l2356
  2337  000C94                     u2390:
  2338  000C94  0E00               	movlw	0
  2339  000C96  6E36               	movwf	___fladd@signs^0,c
  2340  000C98                     l2356:
  2341  000C98  A038               	btfss	___fladd@bexp^0,0,c
  2342  000C9A  EF51  F006         	goto	u2401
  2343  000C9E  EF53  F006         	goto	u2400
  2344  000CA2                     u2401:
  2345  000CA2  EF56  F006         	goto	l2360
  2346  000CA6                     u2400:
  2347  000CA6  8E2C               	bsf	(___fladd@b+2)^0,7,c
  2348  000CA8  EF57  F006         	goto	l2362
  2349  000CAC                     l2360:
  2350  000CAC  9E2C               	bcf	(___fladd@b+2)^0,7,c
  2351  000CAE                     l2362:
  2352  000CAE  90D8               	bcf	status,0,c
  2353  000CB0  3038               	rrcf	___fladd@bexp^0,w,c
  2354  000CB2  6E2D               	movwf	(___fladd@b+3)^0,c
  2355  000CB4  AE36               	btfss	___fladd@signs^0,7,c
  2356  000CB6  EF5F  F006         	goto	u2411
  2357  000CBA  EF61  F006         	goto	u2410
  2358  000CBE                     u2411:
  2359  000CBE  EF62  F006         	goto	l2368
  2360  000CC2                     u2410:
  2361  000CC2  8E2D               	bsf	(___fladd@b+3)^0,7,c
  2362  000CC4                     l2368:
  2363  000CC4  C02A  F02A         	movff	___fladd@b,?___fladd
  2364  000CC8  C02B  F02B         	movff	___fladd@b+1,?___fladd+1
  2365  000CCC  C02C  F02C         	movff	___fladd@b+2,?___fladd+2
  2366  000CD0  C02D  F02D         	movff	___fladd@b+3,?___fladd+3
  2367  000CD4                     l721:
  2368  000CD4  0012               	return		;funcret
  2369  000CD6                     __end_of___fladd:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _GSM_Send_Msg *****************
  2373 ;; Defined at:
  2374 ;;		line 118 in file "Level_Sensor.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  sms             2   16[BANK0 ] PTR const unsigned char 
  2377 ;;		 -> main@strr(20), 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  sms_buffer     35   18[BANK0 ] unsigned char [35]
  2380 ;;  i               2    0        int 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2390 ;;      Params:         0       2       0       0       0       0       0       0       0
  2391 ;;      Locals:         0      35       0       0       0       0       0       0       0
  2392 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2393 ;;      Totals:         1      37       0       0       0       0       0       0       0
  2394 ;;Total ram usage:       38 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    9
  2397 ;; This function calls:
  2398 ;;		_MSdelay
  2399 ;;		_USART_SendString
  2400 ;;		_USART_TxChar
  2401 ;;		_memset
  2402 ;;		_sprintf
  2403 ;;		_strlen
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text6
  2410  001B18                     __ptext6:
  2411                           	callstack 0
  2412  001B18                     _GSM_Send_Msg:
  2413                           	callstack 21
  2414  001B18                     
  2415                           ;Level_Sensor.c: 118: void GSM_Send_Msg(const char *sms);Level_Sensor.c: 119: {;Level_Se
      +                          nsor.c: 120:     int i;;Level_Sensor.c: 121:     char sms_buffer[35];;Level_Sensor.c: 12
      +                          2:     a=0;
  2416  001B18  0E00               	movlw	0
  2417  001B1A  0100               	movlb	0	; () banked
  2418  001B1C  6F83               	movwf	(_a+1)& (0+255),b	;volatile
  2419  001B1E  0E00               	movlw	0
  2420  001B20  6F82               	movwf	_a& (0+255),b	;volatile
  2421  001B22                     
  2422                           ; BSR set to: 0
  2423                           ;Level_Sensor.c: 123:     sprintf(sms_buffer,"\r");
  2424  001B22  0EC0               	movlw	low GSM_Send_Msg@sms_buffer
  2425  001B24  6FAE               	movwf	sprintf@s& (0+255),b
  2426  001B26  0E00               	movlw	high GSM_Send_Msg@sms_buffer
  2427  001B28  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2428  001B2A  0E12               	movlw	low STR_2
  2429  001B2C  6FB0               	movwf	sprintf@fmt& (0+255),b
  2430  001B2E  0E08               	movlw	high STR_2
  2431  001B30  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2432  001B32  EC93  F010         	call	_sprintf	;wreg free
  2433  001B36                     
  2434                           ;Level_Sensor.c: 124:     USART_SendString(sms_buffer);
  2435  001B36  0EC0               	movlw	low GSM_Send_Msg@sms_buffer
  2436  001B38  6E04               	movwf	USART_SendString@out^0,c
  2437  001B3A  0E00               	movlw	high GSM_Send_Msg@sms_buffer
  2438  001B3C  6E05               	movwf	(USART_SendString@out+1)^0,c
  2439  001B3E  EC40  F011         	call	_USART_SendString	;wreg free
  2440  001B42                     
  2441                           ;Level_Sensor.c: 125:     MSdelay(200);
  2442  001B42  0E00               	movlw	0
  2443  001B44  6E04               	movwf	(MSdelay@val+1)^0,c
  2444  001B46  0EC8               	movlw	200
  2445  001B48  6E03               	movwf	MSdelay@val^0,c
  2446  001B4A  ECBC  F010         	call	_MSdelay	;wreg free
  2447  001B4E                     l2714:
  2448                           
  2449                           ;Level_Sensor.c: 127:     {;Level_Sensor.c: 128:         if(buff[a]==0x3e)
  2450  001B4E  0E00               	movlw	low _buff
  2451  001B50  0100               	movlb	0	; () banked
  2452  001B52  2582               	addwf	_a& (0+255),w,b	;volatile
  2453  001B54  6ED9               	movwf	fsr2l,c
  2454  001B56  0E01               	movlw	high _buff
  2455  001B58  2183               	addwfc	(_a+1)& (0+255),w,b	;volatile
  2456  001B5A  6EDA               	movwf	fsr2h,c
  2457  001B5C  0E3E               	movlw	62
  2458  001B5E  18DE               	xorwf	postinc2,w,c
  2459  001B60  A4D8               	btfss	status,2,c
  2460  001B62  EFB5  F00D         	goto	u2971
  2461  001B66  EFB7  F00D         	goto	u2970
  2462  001B6A                     u2971:
  2463  001B6A  EFDA  F00D         	goto	l2724
  2464  001B6E                     u2970:
  2465  001B6E                     
  2466                           ; BSR set to: 0
  2467                           ;Level_Sensor.c: 129:         {;Level_Sensor.c: 130:             a=0;
  2468  001B6E  0E00               	movlw	0
  2469  001B70  6F83               	movwf	(_a+1)& (0+255),b	;volatile
  2470  001B72  0E00               	movlw	0
  2471  001B74  6F82               	movwf	_a& (0+255),b	;volatile
  2472  001B76                     
  2473                           ; BSR set to: 0
  2474                           ;Level_Sensor.c: 131:             memset(buff,0,strlen(buff));
  2475  001B76  0E00               	movlw	low _buff
  2476  001B78  6E07               	movwf	memset@dest^0,c
  2477  001B7A  0E01               	movlw	high _buff
  2478  001B7C  6E08               	movwf	(memset@dest+1)^0,c
  2479  001B7E  0E00               	movlw	0
  2480  001B80  6E0A               	movwf	(memset@c+1)^0,c
  2481  001B82  0E00               	movlw	0
  2482  001B84  6E09               	movwf	memset@c^0,c
  2483  001B86  0E00               	movlw	low _buff
  2484  001B88  6E03               	movwf	strlen@s^0,c
  2485  001B8A  0E01               	movlw	high _buff
  2486  001B8C  6E04               	movwf	(strlen@s+1)^0,c
  2487  001B8E  EC5D  F011         	call	_strlen	;wreg free
  2488  001B92  C003  F00B         	movff	?_strlen,memset@n
  2489  001B96  C004  F00C         	movff	?_strlen+1,memset@n+1
  2490  001B9A  EC1F  F00C         	call	_memset	;wreg free
  2491  001B9E                     
  2492                           ;Level_Sensor.c: 132:             USART_SendString(sms);
  2493  001B9E  C0BE  F004         	movff	GSM_Send_Msg@sms,USART_SendString@out
  2494  001BA2  C0BF  F005         	movff	GSM_Send_Msg@sms+1,USART_SendString@out+1
  2495  001BA6  EC40  F011         	call	_USART_SendString	;wreg free
  2496  001BAA                     
  2497                           ;Level_Sensor.c: 133:             USART_TxChar(0x1a);
  2498  001BAA  0E1A               	movlw	26
  2499  001BAC  EC78  F011         	call	_USART_TxChar
  2500                           
  2501                           ;Level_Sensor.c: 134:             break;
  2502  001BB0  EFDE  F00D         	goto	l2726
  2503  001BB4                     l2724:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;Level_Sensor.c: 136:         a++;
  2507  001BB4  4B82               	infsnz	_a& (0+255),f,b	;volatile
  2508  001BB6  2B83               	incf	(_a+1)& (0+255),f,b	;volatile
  2509  001BB8  EFA7  F00D         	goto	l2714
  2510  001BBC                     l2726:
  2511                           
  2512                           ;Level_Sensor.c: 138:     MSdelay(300);
  2513  001BBC  0E01               	movlw	1
  2514  001BBE  6E04               	movwf	(MSdelay@val+1)^0,c
  2515  001BC0  0E2C               	movlw	44
  2516  001BC2  6E03               	movwf	MSdelay@val^0,c
  2517  001BC4  ECBC  F010         	call	_MSdelay	;wreg free
  2518  001BC8                     
  2519                           ;Level_Sensor.c: 139:     a=0;
  2520  001BC8  0E00               	movlw	0
  2521  001BCA  0100               	movlb	0	; () banked
  2522  001BCC  6F83               	movwf	(_a+1)& (0+255),b	;volatile
  2523  001BCE  0E00               	movlw	0
  2524  001BD0  6F82               	movwf	_a& (0+255),b	;volatile
  2525  001BD2                     
  2526                           ; BSR set to: 0
  2527                           ;Level_Sensor.c: 140:     memset(buff,0,strlen(buff));
  2528  001BD2  0E00               	movlw	low _buff
  2529  001BD4  6E07               	movwf	memset@dest^0,c
  2530  001BD6  0E01               	movlw	high _buff
  2531  001BD8  6E08               	movwf	(memset@dest+1)^0,c
  2532  001BDA  0E00               	movlw	0
  2533  001BDC  6E0A               	movwf	(memset@c+1)^0,c
  2534  001BDE  0E00               	movlw	0
  2535  001BE0  6E09               	movwf	memset@c^0,c
  2536  001BE2  0E00               	movlw	low _buff
  2537  001BE4  6E03               	movwf	strlen@s^0,c
  2538  001BE6  0E01               	movlw	high _buff
  2539  001BE8  6E04               	movwf	(strlen@s+1)^0,c
  2540  001BEA  EC5D  F011         	call	_strlen	;wreg free
  2541  001BEE  C003  F00B         	movff	?_strlen,memset@n
  2542  001BF2  C004  F00C         	movff	?_strlen+1,memset@n+1
  2543  001BF6  EC1F  F00C         	call	_memset	;wreg free
  2544  001BFA                     
  2545                           ;Level_Sensor.c: 141:     memset(sms_buffer,0,strlen(sms_buffer));
  2546  001BFA  0EC0               	movlw	low GSM_Send_Msg@sms_buffer
  2547  001BFC  6E07               	movwf	memset@dest^0,c
  2548  001BFE  0E00               	movlw	high GSM_Send_Msg@sms_buffer
  2549  001C00  6E08               	movwf	(memset@dest+1)^0,c
  2550  001C02  0E00               	movlw	0
  2551  001C04  6E0A               	movwf	(memset@c+1)^0,c
  2552  001C06  0E00               	movlw	0
  2553  001C08  6E09               	movwf	memset@c^0,c
  2554  001C0A  0EC0               	movlw	low GSM_Send_Msg@sms_buffer
  2555  001C0C  6E03               	movwf	strlen@s^0,c
  2556  001C0E  0E00               	movlw	high GSM_Send_Msg@sms_buffer
  2557  001C10  6E04               	movwf	(strlen@s+1)^0,c
  2558  001C12  EC5D  F011         	call	_strlen	;wreg free
  2559  001C16  C003  F00B         	movff	?_strlen,memset@n
  2560  001C1A  C004  F00C         	movff	?_strlen+1,memset@n+1
  2561  001C1E  EC1F  F00C         	call	_memset	;wreg free
  2562  001C22  0012               	return		;funcret
  2563  001C24                     __end_of_GSM_Send_Msg:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _sprintf *****************
  2567 ;; Defined at:
  2568 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2571 ;;		 -> GSM_Send_Msg@sms_buffer(35), main@strr(20), 
  2572 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2573 ;;		 -> STR_2(2), STR_1(17), 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  f               6   10[BANK0 ] struct _IO_FILE
  2576 ;;  ap              2    8[BANK0 ] PTR void [1]
  2577 ;;		 -> ?_sprintf(2), 
  2578 ;;  ret             2    0        int 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  2    0[BANK0 ] int 
  2581 ;; Registers used:
  2582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2588 ;;      Params:         0       6       0       0       0       0       0       0       0
  2589 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2591 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2592 ;;Total ram usage:       16 bytes
  2593 ;; Hardware stack levels used:    1
  2594 ;; Hardware stack levels required when called:    8
  2595 ;; This function calls:
  2596 ;;		_vfprintf
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;;		_GSM_Send_Msg
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text7
  2604  002126                     __ptext7:
  2605                           	callstack 0
  2606  002126                     _sprintf:
  2607                           	callstack 22
  2608  002126  0EB2               	movlw	low (?_sprintf+4)
  2609  002128  0100               	movlb	0	; () banked
  2610  00212A  6FB6               	movwf	sprintf@ap& (0+255),b
  2611  00212C  0E00               	movlw	high (?_sprintf+4)
  2612  00212E  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
  2613  002130  C0AE  F0B8         	movff	sprintf@s,sprintf@f
  2614  002134  C0AF  F0B9         	movff	sprintf@s+1,sprintf@f+1
  2615  002138                     
  2616                           ; BSR set to: 0
  2617  002138  0E00               	movlw	0
  2618  00213A  6FBB               	movwf	(sprintf@f+3)& (0+255),b
  2619  00213C  0E00               	movlw	0
  2620  00213E  6FBA               	movwf	(sprintf@f+2)& (0+255),b
  2621  002140                     
  2622                           ; BSR set to: 0
  2623  002140  0E00               	movlw	0
  2624  002142  6FBD               	movwf	(sprintf@f+5)& (0+255),b
  2625  002144  0E00               	movlw	0
  2626  002146  6FBC               	movwf	(sprintf@f+4)& (0+255),b
  2627  002148                     
  2628                           ; BSR set to: 0
  2629  002148  0EB8               	movlw	low sprintf@f
  2630  00214A  6E52               	movwf	vfprintf@fp^0,c
  2631  00214C  0E00               	movlw	high sprintf@f
  2632  00214E  6E53               	movwf	(vfprintf@fp+1)^0,c
  2633  002150  C0B0  F054         	movff	sprintf@fmt,vfprintf@fmt
  2634  002154  C0B1  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2635  002158  0EB6               	movlw	low sprintf@ap
  2636  00215A  6E56               	movwf	vfprintf@ap^0,c
  2637  00215C  0E00               	movlw	high sprintf@ap
  2638  00215E  6E57               	movwf	(vfprintf@ap+1)^0,c
  2639  002160  EC38  F010         	call	_vfprintf	;wreg free
  2640  002164  0100               	movlb	0	; () banked
  2641  002166  51BA               	movf	(sprintf@f+2)& (0+255),w,b
  2642  002168  25AE               	addwf	sprintf@s& (0+255),w,b
  2643  00216A  6ED9               	movwf	fsr2l,c
  2644  00216C  51BB               	movf	(sprintf@f+3)& (0+255),w,b
  2645  00216E  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  2646  002170  6EDA               	movwf	fsr2h,c
  2647  002172  0E00               	movlw	0
  2648  002174  6EDF               	movwf	indf2,c
  2649  002176                     
  2650                           ; BSR set to: 0
  2651  002176  0012               	return		;funcret
  2652  002178                     __end_of_sprintf:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _vfprintf *****************
  2656 ;; Defined at:
  2657 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  2660 ;;		 -> sprintf@f(6), 
  2661 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  2662 ;;		 -> STR_2(2), STR_1(17), 
  2663 ;;  ap              2   85[COMRAM] PTR PTR void 
  2664 ;;		 -> sprintf@ap(2), 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  2667 ;;		 -> STR_2(2), STR_1(17), 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2   81[COMRAM] int 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2677 ;;      Params:         6       0       0       0       0       0       0       0       0
  2678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2680 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2681 ;;Total ram usage:        8 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    7
  2684 ;; This function calls:
  2685 ;;		_vfpfcnvrt
  2686 ;; This function is called by:
  2687 ;;		_sprintf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text8
  2692  002070                     __ptext8:
  2693                           	callstack 0
  2694  002070                     _vfprintf:
  2695                           	callstack 22
  2696  002070                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2698  002070  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  2699  002074  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2700  002078                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2702  002078  0E00               	movlw	0
  2703  00207A  0100               	movlb	0	; () banked
  2704  00207C  6F7D               	movwf	(_nout+1)& (0+255),b
  2705  00207E  0E00               	movlw	0
  2706  002080  6F7C               	movwf	_nout& (0+255),b
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2709  002082  EF56  F010         	goto	l2100
  2710  002086                     l2098:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2714  002086  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2715  00208A  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2716  00208E  0E58               	movlw	low vfprintf@cfmt
  2717  002090  6E44               	movwf	vfpfcnvrt@fmt^0,c
  2718  002092  0E00               	movlw	high vfprintf@cfmt
  2719  002094  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2720  002096  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2721  00209A  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2722  00209E  EC81  F00A         	call	_vfpfcnvrt	;wreg free
  2723  0020A2  5042               	movf	?_vfpfcnvrt^0,w,c
  2724  0020A4  0100               	movlb	0	; () banked
  2725  0020A6  277C               	addwf	_nout& (0+255),f,b
  2726  0020A8  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  2727  0020AA  237D               	addwfc	(_nout+1)& (0+255),f,b
  2728  0020AC                     l2100:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2732  0020AC  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  2733  0020B0  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2734  0020B4                     	if	0	;tblptru may be non-zero
  2735  0020B4                     	endif
  2736  0020B4                     	if	0	;tblptru may be non-zero
  2737  0020B4                     	endif
  2738  0020B4  0008               	tblrd		*
  2739  0020B6  50F5               	movf	tablat,w,c
  2740  0020B8  0900               	iorlw	0
  2741  0020BA  A4D8               	btfss	status,2,c
  2742  0020BC  EF62  F010         	goto	u1941
  2743  0020C0  EF64  F010         	goto	u1940
  2744  0020C4                     u1941:
  2745  0020C4  EF43  F010         	goto	l2098
  2746  0020C8                     u1940:
  2747  0020C8                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2750  0020C8  C07C  F052         	movff	_nout,?_vfprintf
  2751  0020CC  C07D  F053         	movff	_nout+1,?_vfprintf+1
  2752  0020D0                     
  2753                           ; BSR set to: 0
  2754  0020D0  0012               	return		;funcret
  2755  0020D2                     __end_of_vfprintf:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _vfpfcnvrt *****************
  2759 ;; Defined at:
  2760 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2763 ;;		 -> sprintf@f(6), 
  2764 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2765 ;;		 -> vfprintf@cfmt(2), 
  2766 ;;  ap              2   69[COMRAM] PTR PTR void 
  2767 ;;		 -> sprintf@ap(2), 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  ll              8   73[COMRAM] long long 
  2770 ;;  llu             8    0        unsigned long long 
  2771 ;;  f               4    0        unsigned long long 
  2772 ;;  vp              3    0        PTR void 
  2773 ;;  ct              3    0        unsigned char [3]
  2774 ;;  cp              3    0        PTR unsigned char 
  2775 ;;  i               2    0        int 
  2776 ;;  done            2    0        int 
  2777 ;;  c               1    0        unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2   65[COMRAM] int 
  2780 ;; Registers used:
  2781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         6       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2790 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:       16 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    6
  2794 ;; This function calls:
  2795 ;;		_dtoa
  2796 ;;		_fputc
  2797 ;; This function is called by:
  2798 ;;		_vfprintf
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text9
  2803  001502                     __ptext9:
  2804                           	callstack 0
  2805  001502                     _vfpfcnvrt:
  2806                           	callstack 22
  2807  001502                     
  2808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2809  001502  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2810  001506  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2811  00150A  CFDE FFF6          	movff	postinc2,tblptrl
  2812  00150E  CFDD FFF7          	movff	postdec2,tblptrh
  2813  001512                     	if	0	;tblptru may be non-zero
  2814  001512                     	endif
  2815  001512                     	if	0	;tblptru may be non-zero
  2816  001512                     	endif
  2817  001512  0008               	tblrd		*
  2818  001514  50F5               	movf	tablat,w,c
  2819  001516  0A25               	xorlw	37
  2820  001518  A4D8               	btfss	status,2,c
  2821  00151A  EF91  F00A         	goto	u1891
  2822  00151E  EF93  F00A         	goto	u1890
  2823  001522                     u1891:
  2824  001522  EF3F  F00B         	goto	l2082
  2825  001526                     u1890:
  2826  001526                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2828  001526  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2829  00152A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2830  00152E  2ADE               	incf	postinc2,f,c
  2831  001530  0E00               	movlw	0
  2832  001532  22DD               	addwfc	postdec2,f,c
  2833  001534                     
  2834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2835  001534  0E00               	movlw	0
  2836  001536  0100               	movlb	0	; () banked
  2837  001538  6F7F               	movwf	(_width+1)& (0+255),b
  2838  00153A  0E00               	movlw	0
  2839  00153C  6F7E               	movwf	_width& (0+255),b
  2840  00153E  C07E  F05B         	movff	_width,_flags
  2841  001542  C07F  F05C         	movff	_width+1,_flags+1
  2842  001546                     
  2843                           ; BSR set to: 0
  2844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2845  001546  6980               	setf	_prec& (0+255),b
  2846  001548  6981               	setf	(_prec+1)& (0+255),b
  2847  00154A                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2850  00154A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2851  00154E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2852  001552  CFDE FFF6          	movff	postinc2,tblptrl
  2853  001556  CFDD FFF7          	movff	postdec2,tblptrh
  2854  00155A                     	if	0	;tblptru may be non-zero
  2855  00155A                     	endif
  2856  00155A                     	if	0	;tblptru may be non-zero
  2857  00155A                     	endif
  2858  00155A  0008               	tblrd		*
  2859  00155C  50F5               	movf	tablat,w,c
  2860  00155E  0A64               	xorlw	100
  2861  001560  B4D8               	btfsc	status,2,c
  2862  001562  EFB5  F00A         	goto	u1901
  2863  001566  EFB7  F00A         	goto	u1900
  2864  00156A                     u1901:
  2865  00156A  EFC9  F00A         	goto	l2060
  2866  00156E                     u1900:
  2867  00156E                     
  2868                           ; BSR set to: 0
  2869  00156E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2870  001572  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2871  001576  CFDE FFF6          	movff	postinc2,tblptrl
  2872  00157A  CFDD FFF7          	movff	postdec2,tblptrh
  2873  00157E                     	if	0	;tblptru may be non-zero
  2874  00157E                     	endif
  2875  00157E                     	if	0	;tblptru may be non-zero
  2876  00157E                     	endif
  2877  00157E  0008               	tblrd		*
  2878  001580  50F5               	movf	tablat,w,c
  2879  001582  0A69               	xorlw	105
  2880  001584  A4D8               	btfss	status,2,c
  2881  001586  EFC7  F00A         	goto	u1911
  2882  00158A  EFC9  F00A         	goto	u1910
  2883  00158E                     u1911:
  2884  00158E  EF09  F00B         	goto	l2066
  2885  001592                     u1910:
  2886  001592                     l2060:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  2890  001592  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2891  001596  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2892  00159A  2ADE               	incf	postinc2,f,c
  2893  00159C  0E00               	movlw	0
  2894  00159E  22DD               	addwfc	postdec2,f,c
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2897  0015A0  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2898  0015A4  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2899  0015A8  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2900  0015AC  0E02               	movlw	2
  2901  0015AE  26DE               	addwf	postinc2,f,c
  2902  0015B0  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2903  0015B4  0E00               	movlw	0
  2904  0015B6  22DD               	addwfc	postdec2,f,c
  2905  0015B8  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2906  0015BC  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2907  0015C0  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2908  0015C4  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2909  0015C8  0E00               	movlw	0
  2910  0015CA  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2911  0015CC  0EFF               	movlw	-1
  2912  0015CE  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2913  0015D0  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2914  0015D2  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2915  0015D4  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2916  0015D6  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2917  0015D8  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2918  0015DA                     
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  2921  0015DA  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2922  0015DE  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2923  0015E2  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2924  0015E6  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2925  0015EA  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2926  0015EE  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2927  0015F2  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2928  0015F6  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2929  0015FA  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2930  0015FE  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2931  001602  EC38  F008         	call	_dtoa	;wreg free
  2932  001606  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  2933  00160A  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2934  00160E  EF5A  F00B         	goto	l937
  2935  001612                     l2066:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2939  001612  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2940  001616  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2941  00161A  CFDE FFF6          	movff	postinc2,tblptrl
  2942  00161E  CFDD FFF7          	movff	postdec2,tblptrh
  2943  001622                     	if	0	;tblptru may be non-zero
  2944  001622                     	endif
  2945  001622                     	if	0	;tblptru may be non-zero
  2946  001622                     	endif
  2947  001622  0008               	tblrd		*
  2948  001624  50F5               	movf	tablat,w,c
  2949  001626  0A25               	xorlw	37
  2950  001628  A4D8               	btfss	status,2,c
  2951  00162A  EF19  F00B         	goto	u1921
  2952  00162E  EF1B  F00B         	goto	u1920
  2953  001632                     u1921:
  2954  001632  EF32  F00B         	goto	l2076
  2955  001636                     u1920:
  2956  001636                     
  2957                           ; BSR set to: 0
  2958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2959  001636  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2960  00163A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2961  00163E  2ADE               	incf	postinc2,f,c
  2962  001640  0E00               	movlw	0
  2963  001642  22DD               	addwfc	postdec2,f,c
  2964  001644                     
  2965                           ; BSR set to: 0
  2966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2967  001644  0E00               	movlw	0
  2968  001646  6E04               	movwf	(fputc@c+1)^0,c
  2969  001648  0E25               	movlw	37
  2970  00164A  6E03               	movwf	fputc@c^0,c
  2971  00164C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2972  001650  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2973  001654  EC95  F00E         	call	_fputc	;wreg free
  2974  001658                     l2072:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2977  001658  0E00               	movlw	0
  2978  00165A  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2979  00165C  0E01               	movlw	1
  2980  00165E  6E42               	movwf	?_vfpfcnvrt^0,c
  2981  001660  EF5A  F00B         	goto	l937
  2982  001664                     l2076:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2986  001664  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2987  001668  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2988  00166C  2ADE               	incf	postinc2,f,c
  2989  00166E  0E00               	movlw	0
  2990  001670  22DD               	addwfc	postdec2,f,c
  2991  001672                     
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2994  001672  0E00               	movlw	0
  2995  001674  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2996  001676  0E00               	movlw	0
  2997  001678  6E42               	movwf	?_vfpfcnvrt^0,c
  2998  00167A  EF5A  F00B         	goto	l937
  2999  00167E                     l2082:
  3000                           
  3001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  3002  00167E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3003  001682  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3004  001686  CFDE FFF6          	movff	postinc2,tblptrl
  3005  00168A  CFDD FFF7          	movff	postdec2,tblptrh
  3006  00168E                     	if	0	;tblptru may be non-zero
  3007  00168E                     	endif
  3008  00168E                     	if	0	;tblptru may be non-zero
  3009  00168E                     	endif
  3010  00168E  0008               	tblrd		*
  3011  001690  50F5               	movf	tablat,w,c
  3012  001692  6E03               	movwf	fputc@c^0,c
  3013  001694  6A04               	clrf	(fputc@c+1)^0,c
  3014  001696  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3015  00169A  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3016  00169E  EC95  F00E         	call	_fputc	;wreg free
  3017  0016A2                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3019  0016A2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3020  0016A6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3021  0016AA  2ADE               	incf	postinc2,f,c
  3022  0016AC  0E00               	movlw	0
  3023  0016AE  22DD               	addwfc	postdec2,f,c
  3024  0016B0  EF2C  F00B         	goto	l2072
  3025  0016B4                     l937:
  3026  0016B4  0012               	return		;funcret
  3027  0016B6                     __end_of_vfpfcnvrt:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _dtoa *****************
  3031 ;; Defined at:
  3032 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3035 ;;		 -> sprintf@f(6), 
  3036 ;;  d               8   31[COMRAM] long long 
  3037 ;; Auto vars:     Size  Location     Type
  3038 ;;  n               8   55[COMRAM] long long 
  3039 ;;  i               2   63[COMRAM] int 
  3040 ;;  s               2   53[COMRAM] int 
  3041 ;;  w               2   51[COMRAM] int 
  3042 ;;  p               2   49[COMRAM] int 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2   29[COMRAM] int 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3052 ;;      Params:        10       0       0       0       0       0       0       0       0
  3053 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3055 ;;      Totals:        36       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:       36 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    5
  3059 ;; This function calls:
  3060 ;;		___aodiv
  3061 ;;		___aomod
  3062 ;;		_abs
  3063 ;;		_pad
  3064 ;; This function is called by:
  3065 ;;		_vfpfcnvrt
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text10
  3070  001070                     __ptext10:
  3071                           	callstack 0
  3072  001070                     _dtoa:
  3073                           	callstack 22
  3074  001070                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  3076  001070  C020  F038         	movff	dtoa@d,dtoa@n
  3077  001074  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  3078  001078  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  3079  00107C  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  3080  001080  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  3081  001084  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  3082  001088  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  3083  00108C  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  3084  001090                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  3086  001090  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  3087  001092  EF4D  F008         	goto	u1741
  3088  001096  EF50  F008         	goto	u1740
  3089  00109A                     u1741:
  3090  00109A  0E01               	movlw	1
  3091  00109C  EF51  F008         	goto	u1750
  3092  0010A0                     u1740:
  3093  0010A0  0E00               	movlw	0
  3094  0010A2                     u1750:
  3095  0010A2  6E36               	movwf	dtoa@s^0,c
  3096  0010A4  6A37               	clrf	(dtoa@s+1)^0,c
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  3099  0010A6  5036               	movf	dtoa@s^0,w,c
  3100  0010A8  1037               	iorwf	(dtoa@s+1)^0,w,c
  3101  0010AA  B4D8               	btfsc	status,2,c
  3102  0010AC  EF5A  F008         	goto	u1761
  3103  0010B0  EF5C  F008         	goto	u1760
  3104  0010B4                     u1761:
  3105  0010B4  EF6C  F008         	goto	l1992
  3106  0010B8                     u1760:
  3107  0010B8                     
  3108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  3109  0010B8  1E3F               	comf	(dtoa@n+7)^0,f,c
  3110  0010BA  1E3E               	comf	(dtoa@n+6)^0,f,c
  3111  0010BC  1E3D               	comf	(dtoa@n+5)^0,f,c
  3112  0010BE  1E3C               	comf	(dtoa@n+4)^0,f,c
  3113  0010C0  1E3B               	comf	(dtoa@n+3)^0,f,c
  3114  0010C2  1E3A               	comf	(dtoa@n+2)^0,f,c
  3115  0010C4  1E39               	comf	(dtoa@n+1)^0,f,c
  3116  0010C6  6C38               	negf	dtoa@n^0,c
  3117  0010C8  0E00               	movlw	0
  3118  0010CA  2239               	addwfc	(dtoa@n+1)^0,f,c
  3119  0010CC  223A               	addwfc	(dtoa@n+2)^0,f,c
  3120  0010CE  223B               	addwfc	(dtoa@n+3)^0,f,c
  3121  0010D0  223C               	addwfc	(dtoa@n+4)^0,f,c
  3122  0010D2  223D               	addwfc	(dtoa@n+5)^0,f,c
  3123  0010D4  223E               	addwfc	(dtoa@n+6)^0,f,c
  3124  0010D6  223F               	addwfc	(dtoa@n+7)^0,f,c
  3125  0010D8                     l1992:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  3128  0010D8  0100               	movlb	0	; () banked
  3129  0010DA  BF81               	btfsc	(_prec+1)& (0+255),7,b
  3130  0010DC  EF72  F008         	goto	u1771
  3131  0010E0  EF74  F008         	goto	u1770
  3132  0010E4                     u1771:
  3133  0010E4  EF75  F008         	goto	l1996
  3134  0010E8                     u1770:
  3135  0010E8                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  3138  0010E8  925B               	bcf	_flags^0,1,c
  3139  0010EA                     l1996:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  3143  0010EA  BF81               	btfsc	(_prec+1)& (0+255),7,b
  3144  0010EC  EF82  F008         	goto	u1780
  3145  0010F0  5181               	movf	(_prec+1)& (0+255),w,b
  3146  0010F2  E106               	bnz	u1781
  3147  0010F4  0580               	decf	_prec& (0+255),w,b
  3148  0010F6  B0D8               	btfsc	status,0,c
  3149  0010F8  EF80  F008         	goto	u1781
  3150  0010FC  EF82  F008         	goto	u1780
  3151  001100                     u1781:
  3152  001100  EF88  F008         	goto	l910
  3153  001104                     u1780:
  3154  001104                     
  3155                           ; BSR set to: 0
  3156  001104  0E00               	movlw	0
  3157  001106  6E33               	movwf	(dtoa@p+1)^0,c
  3158  001108  0E01               	movlw	1
  3159  00110A  6E32               	movwf	dtoa@p^0,c
  3160  00110C  EF8C  F008         	goto	l912
  3161  001110                     l910:
  3162                           
  3163                           ; BSR set to: 0
  3164  001110  C080  F032         	movff	_prec,dtoa@p
  3165  001114  C081  F033         	movff	_prec+1,dtoa@p+1
  3166  001118                     l912:
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  3170  001118  C07E  F034         	movff	_width,dtoa@w
  3171  00111C  C07F  F035         	movff	_width+1,dtoa@w+1
  3172  001120                     
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  3175  001120  5036               	movf	dtoa@s^0,w,c
  3176  001122  1037               	iorwf	(dtoa@s+1)^0,w,c
  3177  001124  A4D8               	btfss	status,2,c
  3178  001126  EF97  F008         	goto	u1791
  3179  00112A  EF99  F008         	goto	u1790
  3180  00112E                     u1791:
  3181  00112E  EFA0  F008         	goto	l2004
  3182  001132                     u1790:
  3183  001132                     
  3184                           ; BSR set to: 0
  3185  001132  A45B               	btfss	_flags^0,2,c
  3186  001134  EF9E  F008         	goto	u1801
  3187  001138  EFA0  F008         	goto	u1800
  3188  00113C                     u1801:
  3189  00113C  EFA3  F008         	goto	l2006
  3190  001140                     u1800:
  3191  001140                     l2004:
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  3195  001140  0634               	decf	dtoa@w^0,f,c
  3196  001142  A0D8               	btfss	status,0,c
  3197  001144  0635               	decf	(dtoa@w+1)^0,f,c
  3198  001146                     l2006:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  3202  001146  0E00               	movlw	0
  3203  001148  6E41               	movwf	(dtoa@i+1)^0,c
  3204  00114A  0E1F               	movlw	31
  3205  00114C  6E40               	movwf	dtoa@i^0,c
  3206  00114E                     
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  3209  00114E  0E00               	movlw	0
  3210  001150  6FAD               	movwf	(_dbuf+31)& (0+255),b
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3213  001152  EF27  F009         	goto	l2020
  3214  001156                     l2010:
  3215                           
  3216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  3217  001156  0640               	decf	dtoa@i^0,f,c
  3218  001158  A0D8               	btfss	status,0,c
  3219  00115A  0641               	decf	(dtoa@i+1)^0,f,c
  3220  00115C                     
  3221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  3222  00115C  0E8E               	movlw	low _dbuf
  3223  00115E  2440               	addwf	dtoa@i^0,w,c
  3224  001160  6ED9               	movwf	fsr2l,c
  3225  001162  0E00               	movlw	high _dbuf
  3226  001164  2041               	addwfc	(dtoa@i+1)^0,w,c
  3227  001166  6EDA               	movwf	fsr2h,c
  3228  001168  C038  F003         	movff	dtoa@n,___aomod@dividend
  3229  00116C  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  3230  001170  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  3231  001174  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  3232  001178  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  3233  00117C  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  3234  001180  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  3235  001184  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  3236  001188  0E0A               	movlw	10
  3237  00118A  6E0B               	movwf	___aomod@divisor^0,c
  3238  00118C  0E00               	movlw	0
  3239  00118E  6E0C               	movwf	(___aomod@divisor+1)^0,c
  3240  001190  0E00               	movlw	0
  3241  001192  6E0D               	movwf	(___aomod@divisor+2)^0,c
  3242  001194  0E00               	movlw	0
  3243  001196  6E0E               	movwf	(___aomod@divisor+3)^0,c
  3244  001198  0E00               	movlw	0
  3245  00119A  6E0F               	movwf	(___aomod@divisor+4)^0,c
  3246  00119C  0E00               	movlw	0
  3247  00119E  6E10               	movwf	(___aomod@divisor+5)^0,c
  3248  0011A0  0E00               	movlw	0
  3249  0011A2  6E11               	movwf	(___aomod@divisor+6)^0,c
  3250  0011A4  0E00               	movlw	0
  3251  0011A6  6E12               	movwf	(___aomod@divisor+7)^0,c
  3252  0011A8  ECDA  F00C         	call	___aomod	;wreg free
  3253  0011AC  C003  F028         	movff	?___aomod,??_dtoa
  3254  0011B0  C004  F029         	movff	?___aomod+1,??_dtoa+1
  3255  0011B4  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  3256  0011B8  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  3257  0011BC  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  3258  0011C0  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  3259  0011C4  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  3260  0011C8  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  3261  0011CC  C028  F015         	movff	??_dtoa,abs@a
  3262  0011D0  C02A  F016         	movff	??_dtoa+2,abs@a+1
  3263  0011D4  EC03  F011         	call	_abs	;wreg free
  3264  0011D8  5015               	movf	?_abs^0,w,c
  3265  0011DA  0F30               	addlw	48
  3266  0011DC  6EDF               	movwf	indf2,c
  3267  0011DE                     
  3268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  3269  0011DE  0632               	decf	dtoa@p^0,f,c
  3270  0011E0  A0D8               	btfss	status,0,c
  3271  0011E2  0633               	decf	(dtoa@p+1)^0,f,c
  3272  0011E4                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  3274  0011E4  0634               	decf	dtoa@w^0,f,c
  3275  0011E6  A0D8               	btfss	status,0,c
  3276  0011E8  0635               	decf	(dtoa@w+1)^0,f,c
  3277  0011EA                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  3279  0011EA  C038  F003         	movff	dtoa@n,___aodiv@dividend
  3280  0011EE  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  3281  0011F2  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  3282  0011F6  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  3283  0011FA  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  3284  0011FE  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  3285  001202  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  3286  001206  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  3287  00120A  0E0A               	movlw	10
  3288  00120C  6E0B               	movwf	___aodiv@divisor^0,c
  3289  00120E  0E00               	movlw	0
  3290  001210  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  3291  001212  0E00               	movlw	0
  3292  001214  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  3293  001216  0E00               	movlw	0
  3294  001218  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  3295  00121A  0E00               	movlw	0
  3296  00121C  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  3297  00121E  0E00               	movlw	0
  3298  001220  6E10               	movwf	(___aodiv@divisor+5)^0,c
  3299  001222  0E00               	movlw	0
  3300  001224  6E11               	movwf	(___aodiv@divisor+6)^0,c
  3301  001226  0E00               	movlw	0
  3302  001228  6E12               	movwf	(___aodiv@divisor+7)^0,c
  3303  00122A  EC5B  F00B         	call	___aodiv	;wreg free
  3304  00122E  C003  F038         	movff	?___aodiv,dtoa@n
  3305  001232  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  3306  001236  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  3307  00123A  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  3308  00123E  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  3309  001242  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  3310  001246  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  3311  00124A  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  3312  00124E                     l2020:
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3315  00124E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  3316  001250  EF32  F009         	goto	u1811
  3317  001254  5041               	movf	(dtoa@i+1)^0,w,c
  3318  001256  E108               	bnz	u1810
  3319  001258  0440               	decf	dtoa@i^0,w,c
  3320  00125A  A0D8               	btfss	status,0,c
  3321  00125C  EF32  F009         	goto	u1811
  3322  001260  EF34  F009         	goto	u1810
  3323  001264                     u1811:
  3324  001264  EF64  F009         	goto	l2030
  3325  001268                     u1810:
  3326  001268  5038               	movf	dtoa@n^0,w,c
  3327  00126A  1039               	iorwf	(dtoa@n+1)^0,w,c
  3328  00126C  103A               	iorwf	(dtoa@n+2)^0,w,c
  3329  00126E  103B               	iorwf	(dtoa@n+3)^0,w,c
  3330  001270  103C               	iorwf	(dtoa@n+4)^0,w,c
  3331  001272  103D               	iorwf	(dtoa@n+5)^0,w,c
  3332  001274  103E               	iorwf	(dtoa@n+6)^0,w,c
  3333  001276  103F               	iorwf	(dtoa@n+7)^0,w,c
  3334  001278  A4D8               	btfss	status,2,c
  3335  00127A  EF41  F009         	goto	u1821
  3336  00127E  EF43  F009         	goto	u1820
  3337  001282                     u1821:
  3338  001282  EFAB  F008         	goto	l2010
  3339  001286                     u1820:
  3340  001286  BE33               	btfsc	(dtoa@p+1)^0,7,c
  3341  001288  EF50  F009         	goto	u1830
  3342  00128C  5033               	movf	(dtoa@p+1)^0,w,c
  3343  00128E  E106               	bnz	u1831
  3344  001290  0432               	decf	dtoa@p^0,w,c
  3345  001292  B0D8               	btfsc	status,0,c
  3346  001294  EF4E  F009         	goto	u1831
  3347  001298  EF50  F009         	goto	u1830
  3348  00129C                     u1831:
  3349  00129C  EFAB  F008         	goto	l2010
  3350  0012A0                     u1830:
  3351  0012A0  BE35               	btfsc	(dtoa@w+1)^0,7,c
  3352  0012A2  EF5B  F009         	goto	u1841
  3353  0012A6  5035               	movf	(dtoa@w+1)^0,w,c
  3354  0012A8  E108               	bnz	u1840
  3355  0012AA  0434               	decf	dtoa@w^0,w,c
  3356  0012AC  A0D8               	btfss	status,0,c
  3357  0012AE  EF5B  F009         	goto	u1841
  3358  0012B2  EF5D  F009         	goto	u1840
  3359  0012B6                     u1841:
  3360  0012B6  EF64  F009         	goto	l2030
  3361  0012BA                     u1840:
  3362  0012BA  B25B               	btfsc	_flags^0,1,c
  3363  0012BC  EF62  F009         	goto	u1851
  3364  0012C0  EF64  F009         	goto	u1850
  3365  0012C4                     u1851:
  3366  0012C4  EFAB  F008         	goto	l2010
  3367  0012C8                     u1850:
  3368  0012C8                     l2030:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  3371  0012C8  5036               	movf	dtoa@s^0,w,c
  3372  0012CA  1037               	iorwf	(dtoa@s+1)^0,w,c
  3373  0012CC  A4D8               	btfss	status,2,c
  3374  0012CE  EF6B  F009         	goto	u1861
  3375  0012D2  EF6D  F009         	goto	u1860
  3376  0012D6                     u1861:
  3377  0012D6  EF74  F009         	goto	l2034
  3378  0012DA                     u1860:
  3379  0012DA  A45B               	btfss	_flags^0,2,c
  3380  0012DC  EF72  F009         	goto	u1871
  3381  0012E0  EF74  F009         	goto	u1870
  3382  0012E4                     u1871:
  3383  0012E4  EF92  F009         	goto	l2044
  3384  0012E8                     u1870:
  3385  0012E8                     l2034:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  3388  0012E8  0640               	decf	dtoa@i^0,f,c
  3389  0012EA  A0D8               	btfss	status,0,c
  3390  0012EC  0641               	decf	(dtoa@i+1)^0,f,c
  3391  0012EE                     
  3392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  3393  0012EE  5036               	movf	dtoa@s^0,w,c
  3394  0012F0  1037               	iorwf	(dtoa@s+1)^0,w,c
  3395  0012F2  A4D8               	btfss	status,2,c
  3396  0012F4  EF7E  F009         	goto	u1881
  3397  0012F8  EF80  F009         	goto	u1880
  3398  0012FC                     u1881:
  3399  0012FC  EF86  F009         	goto	l2040
  3400  001300                     u1880:
  3401  001300  0E00               	movlw	0
  3402  001302  6E31               	movwf	(_dtoa$941+1)^0,c
  3403  001304  0E2B               	movlw	43
  3404  001306  6E30               	movwf	_dtoa$941^0,c
  3405  001308  EF8A  F009         	goto	l2042
  3406  00130C                     l2040:
  3407  00130C  0E00               	movlw	0
  3408  00130E  6E31               	movwf	(_dtoa$941+1)^0,c
  3409  001310  0E2D               	movlw	45
  3410  001312  6E30               	movwf	_dtoa$941^0,c
  3411  001314                     l2042:
  3412  001314  0E8E               	movlw	low _dbuf
  3413  001316  2440               	addwf	dtoa@i^0,w,c
  3414  001318  6ED9               	movwf	fsr2l,c
  3415  00131A  0E00               	movlw	high _dbuf
  3416  00131C  2041               	addwfc	(dtoa@i+1)^0,w,c
  3417  00131E  6EDA               	movwf	fsr2h,c
  3418  001320  C030  FFDF         	movff	_dtoa$941,indf2
  3419  001324                     l2044:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  3422  001324  C01E  F013         	movff	dtoa@fp,pad@fp
  3423  001328  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3424  00132C  0E8E               	movlw	low _dbuf
  3425  00132E  2440               	addwf	dtoa@i^0,w,c
  3426  001330  6E15               	movwf	pad@buf^0,c
  3427  001332  0E00               	movlw	high _dbuf
  3428  001334  2041               	addwfc	(dtoa@i+1)^0,w,c
  3429  001336  6E16               	movwf	(pad@buf+1)^0,c
  3430  001338  C034  F017         	movff	dtoa@w,pad@p
  3431  00133C  C035  F018         	movff	dtoa@w+1,pad@p+1
  3432  001340  ECFA  F00E         	call	_pad	;wreg free
  3433  001344  C013  F01E         	movff	?_pad,?_dtoa
  3434  001348  C014  F01F         	movff	?_pad+1,?_dtoa+1
  3435  00134C  0012               	return		;funcret
  3436  00134E                     __end_of_dtoa:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _pad *****************
  3440 ;; Defined at:
  3441 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3444 ;;		 -> sprintf@f(6), 
  3445 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3446 ;;		 -> dbuf(32), 
  3447 ;;  p               2   22[COMRAM] int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  w               2   27[COMRAM] int 
  3450 ;;  i               2   25[COMRAM] int 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2   18[COMRAM] int 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3460 ;;      Params:         6       0       0       0       0       0       0       0       0
  3461 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3462 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3463 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3464 ;;Total ram usage:       11 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    4
  3467 ;; This function calls:
  3468 ;;		_fputc
  3469 ;;		_fputs
  3470 ;;		_strlen
  3471 ;; This function is called by:
  3472 ;;		_dtoa
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text11
  3477  001DF4                     __ptext11:
  3478                           	callstack 0
  3479  001DF4                     _pad:
  3480                           	callstack 22
  3481  001DF4                     
  3482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3483  001DF4  A05B               	btfss	_flags^0,0,c
  3484  001DF6  EFFF  F00E         	goto	u1691
  3485  001DFA  EF01  F00F         	goto	u1690
  3486  001DFE                     u1691:
  3487  001DFE  EF0B  F00F         	goto	l1964
  3488  001E02                     u1690:
  3489  001E02                     
  3490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3491  001E02  C015  F00C         	movff	pad@buf,fputs@s
  3492  001E06  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3493  001E0A  C013  F00E         	movff	pad@fp,fputs@fp
  3494  001E0E  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3495  001E12  ECE1  F010         	call	_fputs	;wreg free
  3496  001E16                     l1964:
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3499  001E16  BE18               	btfsc	(pad@p+1)^0,7,c
  3500  001E18  EF10  F00F         	goto	u1701
  3501  001E1C  EF12  F00F         	goto	u1700
  3502  001E20                     u1701:
  3503  001E20  EF18  F00F         	goto	l1968
  3504  001E24                     u1700:
  3505  001E24  C017  F01C         	movff	pad@p,pad@w
  3506  001E28  C018  F01D         	movff	pad@p+1,pad@w+1
  3507  001E2C  EF1C  F00F         	goto	l899
  3508  001E30                     l1968:
  3509  001E30  0E00               	movlw	0
  3510  001E32  6E1D               	movwf	(pad@w+1)^0,c
  3511  001E34  0E00               	movlw	0
  3512  001E36  6E1C               	movwf	pad@w^0,c
  3513  001E38                     l899:
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3516  001E38  0E00               	movlw	0
  3517  001E3A  6E1B               	movwf	(pad@i+1)^0,c
  3518  001E3C  0E00               	movlw	0
  3519  001E3E  6E1A               	movwf	pad@i^0,c
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3522  001E40  EF2E  F00F         	goto	l1974
  3523  001E44                     l1970:
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3526  001E44  0E00               	movlw	0
  3527  001E46  6E04               	movwf	(fputc@c+1)^0,c
  3528  001E48  0E20               	movlw	32
  3529  001E4A  6E03               	movwf	fputc@c^0,c
  3530  001E4C  C013  F005         	movff	pad@fp,fputc@fp
  3531  001E50  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3532  001E54  EC95  F00E         	call	_fputc	;wreg free
  3533  001E58                     
  3534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3535  001E58  4A1A               	infsnz	pad@i^0,f,c
  3536  001E5A  2A1B               	incf	(pad@i+1)^0,f,c
  3537  001E5C                     l1974:
  3538                           
  3539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3540  001E5C  501C               	movf	pad@w^0,w,c
  3541  001E5E  5C1A               	subwf	pad@i^0,w,c
  3542  001E60  501B               	movf	(pad@i+1)^0,w,c
  3543  001E62  0A80               	xorlw	128
  3544  001E64  6E19               	movwf	??_pad^0,c
  3545  001E66  501D               	movf	(pad@w+1)^0,w,c
  3546  001E68  0A80               	xorlw	128
  3547  001E6A  5819               	subwfb	??_pad^0,w,c
  3548  001E6C  A0D8               	btfss	status,0,c
  3549  001E6E  EF3B  F00F         	goto	u1711
  3550  001E72  EF3D  F00F         	goto	u1710
  3551  001E76                     u1711:
  3552  001E76  EF22  F00F         	goto	l1970
  3553  001E7A                     u1710:
  3554  001E7A                     
  3555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3556  001E7A  B05B               	btfsc	_flags^0,0,c
  3557  001E7C  EF42  F00F         	goto	u1721
  3558  001E80  EF44  F00F         	goto	u1720
  3559  001E84                     u1721:
  3560  001E84  EF4E  F00F         	goto	l1978
  3561  001E88                     u1720:
  3562  001E88                     
  3563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3564  001E88  C015  F00C         	movff	pad@buf,fputs@s
  3565  001E8C  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3566  001E90  C013  F00E         	movff	pad@fp,fputs@fp
  3567  001E94  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3568  001E98  ECE1  F010         	call	_fputs	;wreg free
  3569  001E9C                     l1978:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  3572  001E9C  C015  F003         	movff	pad@buf,strlen@s
  3573  001EA0  C016  F004         	movff	pad@buf+1,strlen@s+1
  3574  001EA4  EC5D  F011         	call	_strlen	;wreg free
  3575  001EA8  501C               	movf	pad@w^0,w,c
  3576  001EAA  2403               	addwf	?_strlen^0,w,c
  3577  001EAC  6E13               	movwf	?_pad^0,c
  3578  001EAE  501D               	movf	(pad@w+1)^0,w,c
  3579  001EB0  2004               	addwfc	(?_strlen+1)^0,w,c
  3580  001EB2  6E14               	movwf	(?_pad+1)^0,c
  3581  001EB4  0012               	return		;funcret
  3582  001EB6                     __end_of_pad:
  3583                           	callstack 0
  3584                           
  3585 ;; *************** function _strlen *****************
  3586 ;; Defined at:
  3587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;  s               2    2[COMRAM] PTR const unsigned char 
  3590 ;;		 -> dbuf(32), GSM_Send_Msg@sms_buffer(35), buff(160), 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  a               2    4[COMRAM] PTR const unsigned char 
  3593 ;;		 -> dbuf(32), GSM_Send_Msg@sms_buffer(35), buff(160), 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  2    2[COMRAM] unsigned int 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:         2       0       0       0       0       0       0       0       0
  3604 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3606 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3607 ;;Total ram usage:        4 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_GSM_Send_Msg
  3614 ;;		_pad
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text12
  3619  0022BA                     __ptext12:
  3620                           	callstack 0
  3621  0022BA                     _strlen:
  3622                           	callstack 24
  3623  0022BA  C003  F005         	movff	strlen@s,strlen@a
  3624  0022BE  C004  F006         	movff	strlen@s+1,strlen@a+1
  3625  0022C2  EF65  F011         	goto	l1866
  3626  0022C6                     l1864:
  3627  0022C6  4A03               	infsnz	strlen@s^0,f,c
  3628  0022C8  2A04               	incf	(strlen@s+1)^0,f,c
  3629  0022CA                     l1866:
  3630  0022CA  C003  FFD9         	movff	strlen@s,fsr2l
  3631  0022CE  C004  FFDA         	movff	strlen@s+1,fsr2h
  3632  0022D2  50DF               	movf	indf2,w,c
  3633  0022D4  A4D8               	btfss	status,2,c
  3634  0022D6  EF6F  F011         	goto	u1541
  3635  0022DA  EF71  F011         	goto	u1540
  3636  0022DE                     u1541:
  3637  0022DE  EF63  F011         	goto	l1864
  3638  0022E2                     u1540:
  3639  0022E2  5005               	movf	strlen@a^0,w,c
  3640  0022E4  5C03               	subwf	strlen@s^0,w,c
  3641  0022E6  6E03               	movwf	?_strlen^0,c
  3642  0022E8  5006               	movf	(strlen@a+1)^0,w,c
  3643  0022EA  5804               	subwfb	(strlen@s+1)^0,w,c
  3644  0022EC  6E04               	movwf	(?_strlen+1)^0,c
  3645  0022EE  0012               	return		;funcret
  3646  0022F0                     __end_of_strlen:
  3647                           	callstack 0
  3648                           
  3649 ;; *************** function _fputs *****************
  3650 ;; Defined at:
  3651 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3654 ;;		 -> dbuf(32), 
  3655 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3656 ;;		 -> sprintf@f(6), 
  3657 ;; Auto vars:     Size  Location     Type
  3658 ;;  i               2   16[COMRAM] int 
  3659 ;;  c               1   15[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2   11[COMRAM] int 
  3662 ;; Registers used:
  3663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3669 ;;      Params:         4       0       0       0       0       0       0       0       0
  3670 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        7 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		_fputc
  3678 ;; This function is called by:
  3679 ;;		_pad
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text13
  3684  0021C2                     __ptext13:
  3685                           	callstack 0
  3686  0021C2                     _fputs:
  3687                           	callstack 22
  3688  0021C2  0E00               	movlw	0
  3689  0021C4  6E12               	movwf	(fputs@i+1)^0,c
  3690  0021C6  0E00               	movlw	0
  3691  0021C8  6E11               	movwf	fputs@i^0,c
  3692  0021CA  EFF2  F010         	goto	l1878
  3693  0021CE                     l1874:
  3694  0021CE  C010  F003         	movff	fputs@c,fputc@c
  3695  0021D2  6A04               	clrf	(fputc@c+1)^0,c
  3696  0021D4  C00E  F005         	movff	fputs@fp,fputc@fp
  3697  0021D8  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  3698  0021DC  EC95  F00E         	call	_fputc	;wreg free
  3699  0021E0  4A11               	infsnz	fputs@i^0,f,c
  3700  0021E2  2A12               	incf	(fputs@i+1)^0,f,c
  3701  0021E4                     l1878:
  3702  0021E4  5011               	movf	fputs@i^0,w,c
  3703  0021E6  240C               	addwf	fputs@s^0,w,c
  3704  0021E8  6ED9               	movwf	fsr2l,c
  3705  0021EA  5012               	movf	(fputs@i+1)^0,w,c
  3706  0021EC  200D               	addwfc	(fputs@s+1)^0,w,c
  3707  0021EE  6EDA               	movwf	fsr2h,c
  3708  0021F0  50DF               	movf	indf2,w,c
  3709  0021F2  6E10               	movwf	fputs@c^0,c
  3710  0021F4  5010               	movf	fputs@c^0,w,c
  3711  0021F6  A4D8               	btfss	status,2,c
  3712  0021F8  EF00  F011         	goto	u1551
  3713  0021FC  EF02  F011         	goto	u1550
  3714  002200                     u1551:
  3715  002200  EFE7  F010         	goto	l1874
  3716  002204                     u1550:
  3717  002204  0012               	return		;funcret
  3718  002206                     __end_of_fputs:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _fputc *****************
  3722 ;; Defined at:
  3723 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  c               2    2[COMRAM] int 
  3726 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  3727 ;;		 -> sprintf@f(6), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2    2[COMRAM] int 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3739 ;;      Params:         4       0       0       0       0       0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3741 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3742 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3743 ;;Total ram usage:        9 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    2
  3746 ;; This function calls:
  3747 ;;		_putch
  3748 ;; This function is called by:
  3749 ;;		_pad
  3750 ;;		_vfpfcnvrt
  3751 ;;		_fputs
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text14
  3756  001D2A                     __ptext14:
  3757                           	callstack 0
  3758  001D2A                     _fputc:
  3759                           	callstack 25
  3760  001D2A  5005               	movf	fputc@fp^0,w,c
  3761  001D2C  1006               	iorwf	(fputc@fp+1)^0,w,c
  3762  001D2E  B4D8               	btfsc	status,2,c
  3763  001D30  EF9C  F00E         	goto	u1501
  3764  001D34  EF9E  F00E         	goto	u1500
  3765  001D38                     u1501:
  3766  001D38  EFA7  F00E         	goto	l1852
  3767  001D3C                     u1500:
  3768  001D3C  5005               	movf	fputc@fp^0,w,c
  3769  001D3E  1006               	iorwf	(fputc@fp+1)^0,w,c
  3770  001D40  A4D8               	btfss	status,2,c
  3771  001D42  EFA5  F00E         	goto	u1511
  3772  001D46  EFA7  F00E         	goto	u1510
  3773  001D4A                     u1511:
  3774  001D4A  EFAC  F00E         	goto	l1854
  3775  001D4E                     u1510:
  3776  001D4E                     l1852:
  3777  001D4E  5003               	movf	fputc@c^0,w,c
  3778  001D50  EC8D  F011         	call	_putch
  3779  001D54  EFF9  F00E         	goto	l963
  3780  001D58                     l1854:
  3781  001D58  EE20 F004          	lfsr	2,4
  3782  001D5C  5005               	movf	fputc@fp^0,w,c
  3783  001D5E  26D9               	addwf	fsr2l,f,c
  3784  001D60  5006               	movf	(fputc@fp+1)^0,w,c
  3785  001D62  22DA               	addwfc	fsr2h,f,c
  3786  001D64  50DE               	movf	postinc2,w,c
  3787  001D66  10DE               	iorwf	postinc2,w,c
  3788  001D68  B4D8               	btfsc	status,2,c
  3789  001D6A  EFB9  F00E         	goto	u1521
  3790  001D6E  EFBB  F00E         	goto	u1520
  3791  001D72                     u1521:
  3792  001D72  EFD6  F00E         	goto	l1858
  3793  001D76                     u1520:
  3794  001D76  EE20 F004          	lfsr	2,4
  3795  001D7A  5005               	movf	fputc@fp^0,w,c
  3796  001D7C  26D9               	addwf	fsr2l,f,c
  3797  001D7E  5006               	movf	(fputc@fp+1)^0,w,c
  3798  001D80  22DA               	addwfc	fsr2h,f,c
  3799  001D82  EE10 F002          	lfsr	1,2
  3800  001D86  5005               	movf	fputc@fp^0,w,c
  3801  001D88  26E1               	addwf	fsr1l,f,c
  3802  001D8A  5006               	movf	(fputc@fp+1)^0,w,c
  3803  001D8C  22E2               	addwfc	fsr1h,f,c
  3804  001D8E  50DE               	movf	postinc2,w,c
  3805  001D90  5CE6               	subwf	postinc1,w,c
  3806  001D92  50E6               	movf	postinc1,w,c
  3807  001D94  0A80               	xorlw	128
  3808  001D96  6E0B               	movwf	(??_fputc+4)^0,c
  3809  001D98  50DE               	movf	postinc2,w,c
  3810  001D9A  0A80               	xorlw	128
  3811  001D9C  580B               	subwfb	(??_fputc+4)^0,w,c
  3812  001D9E  B0D8               	btfsc	status,0,c
  3813  001DA0  EFD4  F00E         	goto	u1531
  3814  001DA4  EFD6  F00E         	goto	u1530
  3815  001DA8                     u1531:
  3816  001DA8  EFF9  F00E         	goto	l963
  3817  001DAC                     u1530:
  3818  001DAC                     l1858:
  3819  001DAC  EE20 F002          	lfsr	2,2
  3820  001DB0  5005               	movf	fputc@fp^0,w,c
  3821  001DB2  26D9               	addwf	fsr2l,f,c
  3822  001DB4  5006               	movf	(fputc@fp+1)^0,w,c
  3823  001DB6  22DA               	addwfc	fsr2h,f,c
  3824  001DB8  CFDE F007          	movff	postinc2,??_fputc
  3825  001DBC  CFDD F008          	movff	postdec2,??_fputc+1
  3826  001DC0  C005  FFD9         	movff	fputc@fp,fsr2l
  3827  001DC4  C006  FFDA         	movff	fputc@fp+1,fsr2h
  3828  001DC8  CFDE F009          	movff	postinc2,??_fputc+2
  3829  001DCC  CFDD F00A          	movff	postdec2,??_fputc+3
  3830  001DD0  5007               	movf	??_fputc^0,w,c
  3831  001DD2  2409               	addwf	(??_fputc+2)^0,w,c
  3832  001DD4  6ED9               	movwf	fsr2l,c
  3833  001DD6  5008               	movf	(??_fputc+1)^0,w,c
  3834  001DD8  200A               	addwfc	(??_fputc+3)^0,w,c
  3835  001DDA  6EDA               	movwf	fsr2h,c
  3836  001DDC  C003  FFDF         	movff	fputc@c,indf2
  3837  001DE0  EE20 F002          	lfsr	2,2
  3838  001DE4  5005               	movf	fputc@fp^0,w,c
  3839  001DE6  26D9               	addwf	fsr2l,f,c
  3840  001DE8  5006               	movf	(fputc@fp+1)^0,w,c
  3841  001DEA  22DA               	addwfc	fsr2h,f,c
  3842  001DEC  2ADE               	incf	postinc2,f,c
  3843  001DEE  0E00               	movlw	0
  3844  001DF0  22DD               	addwfc	postdec2,f,c
  3845  001DF2                     l963:
  3846  001DF2  0012               	return		;funcret
  3847  001DF4                     __end_of_fputc:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _putch *****************
  3851 ;; Defined at:
  3852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  c               1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  c               1    0[COMRAM] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    1
  3873 ;; This function calls:
  3874 ;;		Nothing
  3875 ;; This function is called by:
  3876 ;;		_fputc
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text15
  3881  00231A                     __ptext15:
  3882                           	callstack 0
  3883  00231A                     _putch:
  3884                           	callstack 25
  3885  00231A  0012               	return		;funcret
  3886  00231C                     __end_of_putch:
  3887                           	callstack 0
  3888                           
  3889 ;; *************** function _abs *****************
  3890 ;; Defined at:
  3891 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  a               2   20[COMRAM] int 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  2   20[COMRAM] int 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3905 ;;      Params:         2       0       0       0       0       0       0       0       0
  3906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3907 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3908 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3909 ;;Total ram usage:        4 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_dtoa
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           	psect	text16
  3920  002206                     __ptext16:
  3921                           	callstack 0
  3922  002206                     _abs:
  3923                           	callstack 25
  3924  002206  BE16               	btfsc	(abs@a+1)^0,7,c
  3925  002208  EF10  F011         	goto	u1730
  3926  00220C  5016               	movf	(abs@a+1)^0,w,c
  3927  00220E  E106               	bnz	u1731
  3928  002210  0415               	decf	abs@a^0,w,c
  3929  002212  B0D8               	btfsc	status,0,c
  3930  002214  EF0E  F011         	goto	u1731
  3931  002218  EF10  F011         	goto	u1730
  3932  00221C                     u1731:
  3933  00221C  EF1E  F011         	goto	l948
  3934  002220                     u1730:
  3935  002220  C015  F017         	movff	abs@a,??_abs
  3936  002224  C016  F018         	movff	abs@a+1,??_abs+1
  3937  002228  1E17               	comf	??_abs^0,f,c
  3938  00222A  1E18               	comf	(??_abs+1)^0,f,c
  3939  00222C  4A17               	infsnz	??_abs^0,f,c
  3940  00222E  2A18               	incf	(??_abs+1)^0,f,c
  3941  002230  C017  F015         	movff	??_abs,?_abs
  3942  002234  C018  F016         	movff	??_abs+1,?_abs+1
  3943  002238  EF22  F011         	goto	l951
  3944  00223C                     l948:
  3945  00223C  C015  F015         	movff	abs@a,?_abs
  3946  002240  C016  F016         	movff	abs@a+1,?_abs+1
  3947  002244                     l951:
  3948  002244  0012               	return		;funcret
  3949  002246                     __end_of_abs:
  3950                           	callstack 0
  3951                           
  3952 ;; *************** function ___aomod *****************
  3953 ;; Defined at:
  3954 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  dividend        8    2[COMRAM] long long 
  3957 ;;  divisor         8   10[COMRAM] long long 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;  sign            1   19[COMRAM] unsigned char 
  3960 ;;  counter         1   18[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  8    2[COMRAM] long long 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3970 ;;      Params:        16       0       0       0       0       0       0       0       0
  3971 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3973 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3974 ;;Total ram usage:       18 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_dtoa
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text17
  3985  0019B4                     __ptext17:
  3986                           	callstack 0
  3987  0019B4                     ___aomod:
  3988                           	callstack 25
  3989  0019B4  0E00               	movlw	0
  3990  0019B6  6E14               	movwf	___aomod@sign^0,c
  3991  0019B8  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  3992  0019BA  EFE3  F00C         	goto	u1630
  3993  0019BE  EFE1  F00C         	goto	u1631
  3994  0019C2                     u1631:
  3995  0019C2  EFF5  F00C         	goto	l1932
  3996  0019C6                     u1630:
  3997  0019C6  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  3998  0019C8  1E09               	comf	(___aomod@dividend+6)^0,f,c
  3999  0019CA  1E08               	comf	(___aomod@dividend+5)^0,f,c
  4000  0019CC  1E07               	comf	(___aomod@dividend+4)^0,f,c
  4001  0019CE  1E06               	comf	(___aomod@dividend+3)^0,f,c
  4002  0019D0  1E05               	comf	(___aomod@dividend+2)^0,f,c
  4003  0019D2  1E04               	comf	(___aomod@dividend+1)^0,f,c
  4004  0019D4  6C03               	negf	___aomod@dividend^0,c
  4005  0019D6  0E00               	movlw	0
  4006  0019D8  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  4007  0019DA  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  4008  0019DC  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  4009  0019DE  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  4010  0019E0  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  4011  0019E2  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  4012  0019E4  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  4013  0019E6  0E01               	movlw	1
  4014  0019E8  6E14               	movwf	___aomod@sign^0,c
  4015  0019EA                     l1932:
  4016  0019EA  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  4017  0019EC  EFFC  F00C         	goto	u1640
  4018  0019F0  EFFA  F00C         	goto	u1641
  4019  0019F4                     u1641:
  4020  0019F4  EF0C  F00D         	goto	l1936
  4021  0019F8                     u1640:
  4022  0019F8  1E12               	comf	(___aomod@divisor+7)^0,f,c
  4023  0019FA  1E11               	comf	(___aomod@divisor+6)^0,f,c
  4024  0019FC  1E10               	comf	(___aomod@divisor+5)^0,f,c
  4025  0019FE  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  4026  001A00  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  4027  001A02  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  4028  001A04  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  4029  001A06  6C0B               	negf	___aomod@divisor^0,c
  4030  001A08  0E00               	movlw	0
  4031  001A0A  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  4032  001A0C  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  4033  001A0E  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  4034  001A10  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  4035  001A12  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  4036  001A14  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  4037  001A16  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  4038  001A18                     l1936:
  4039  001A18  500B               	movf	___aomod@divisor^0,w,c
  4040  001A1A  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  4041  001A1C  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  4042  001A1E  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  4043  001A20  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  4044  001A22  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  4045  001A24  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  4046  001A26  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  4047  001A28  B4D8               	btfsc	status,2,c
  4048  001A2A  EF19  F00D         	goto	u1651
  4049  001A2E  EF1B  F00D         	goto	u1650
  4050  001A32                     u1651:
  4051  001A32  EF63  F00D         	goto	l1952
  4052  001A36                     u1650:
  4053  001A36  0E01               	movlw	1
  4054  001A38  6E13               	movwf	___aomod@counter^0,c
  4055  001A3A  EF29  F00D         	goto	l1942
  4056  001A3E                     l1940:
  4057  001A3E  90D8               	bcf	status,0,c
  4058  001A40  360B               	rlcf	___aomod@divisor^0,f,c
  4059  001A42  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  4060  001A44  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  4061  001A46  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  4062  001A48  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  4063  001A4A  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  4064  001A4C  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  4065  001A4E  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  4066  001A50  2A13               	incf	___aomod@counter^0,f,c
  4067  001A52                     l1942:
  4068  001A52  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  4069  001A54  EF2E  F00D         	goto	u1661
  4070  001A58  EF30  F00D         	goto	u1660
  4071  001A5C                     u1661:
  4072  001A5C  EF1F  F00D         	goto	l1940
  4073  001A60                     u1660:
  4074  001A60                     l1944:
  4075  001A60  500B               	movf	___aomod@divisor^0,w,c
  4076  001A62  5C03               	subwf	___aomod@dividend^0,w,c
  4077  001A64  500C               	movf	(___aomod@divisor+1)^0,w,c
  4078  001A66  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  4079  001A68  500D               	movf	(___aomod@divisor+2)^0,w,c
  4080  001A6A  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  4081  001A6C  500E               	movf	(___aomod@divisor+3)^0,w,c
  4082  001A6E  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  4083  001A70  500F               	movf	(___aomod@divisor+4)^0,w,c
  4084  001A72  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  4085  001A74  5010               	movf	(___aomod@divisor+5)^0,w,c
  4086  001A76  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  4087  001A78  5011               	movf	(___aomod@divisor+6)^0,w,c
  4088  001A7A  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  4089  001A7C  5012               	movf	(___aomod@divisor+7)^0,w,c
  4090  001A7E  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  4091  001A80  A0D8               	btfss	status,0,c
  4092  001A82  EF45  F00D         	goto	u1671
  4093  001A86  EF47  F00D         	goto	u1670
  4094  001A8A                     u1671:
  4095  001A8A  EF57  F00D         	goto	l1948
  4096  001A8E                     u1670:
  4097  001A8E  500B               	movf	___aomod@divisor^0,w,c
  4098  001A90  5E03               	subwf	___aomod@dividend^0,f,c
  4099  001A92  500C               	movf	(___aomod@divisor+1)^0,w,c
  4100  001A94  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  4101  001A96  500D               	movf	(___aomod@divisor+2)^0,w,c
  4102  001A98  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  4103  001A9A  500E               	movf	(___aomod@divisor+3)^0,w,c
  4104  001A9C  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  4105  001A9E  500F               	movf	(___aomod@divisor+4)^0,w,c
  4106  001AA0  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  4107  001AA2  5010               	movf	(___aomod@divisor+5)^0,w,c
  4108  001AA4  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  4109  001AA6  5011               	movf	(___aomod@divisor+6)^0,w,c
  4110  001AA8  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  4111  001AAA  5012               	movf	(___aomod@divisor+7)^0,w,c
  4112  001AAC  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  4113  001AAE                     l1948:
  4114  001AAE  90D8               	bcf	status,0,c
  4115  001AB0  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  4116  001AB2  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  4117  001AB4  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  4118  001AB6  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  4119  001AB8  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  4120  001ABA  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  4121  001ABC  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  4122  001ABE  320B               	rrcf	___aomod@divisor^0,f,c
  4123  001AC0  2E13               	decfsz	___aomod@counter^0,f,c
  4124  001AC2  EF30  F00D         	goto	l1944
  4125  001AC6                     l1952:
  4126  001AC6  5014               	movf	___aomod@sign^0,w,c
  4127  001AC8  B4D8               	btfsc	status,2,c
  4128  001ACA  EF69  F00D         	goto	u1681
  4129  001ACE  EF6B  F00D         	goto	u1680
  4130  001AD2                     u1681:
  4131  001AD2  EF7B  F00D         	goto	l1956
  4132  001AD6                     u1680:
  4133  001AD6  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  4134  001AD8  1E09               	comf	(___aomod@dividend+6)^0,f,c
  4135  001ADA  1E08               	comf	(___aomod@dividend+5)^0,f,c
  4136  001ADC  1E07               	comf	(___aomod@dividend+4)^0,f,c
  4137  001ADE  1E06               	comf	(___aomod@dividend+3)^0,f,c
  4138  001AE0  1E05               	comf	(___aomod@dividend+2)^0,f,c
  4139  001AE2  1E04               	comf	(___aomod@dividend+1)^0,f,c
  4140  001AE4  6C03               	negf	___aomod@dividend^0,c
  4141  001AE6  0E00               	movlw	0
  4142  001AE8  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  4143  001AEA  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  4144  001AEC  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  4145  001AEE  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  4146  001AF0  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  4147  001AF2  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  4148  001AF4  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  4149  001AF6                     l1956:
  4150  001AF6  C003  F003         	movff	___aomod@dividend,?___aomod
  4151  001AFA  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  4152  001AFE  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  4153  001B02  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  4154  001B06  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  4155  001B0A  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  4156  001B0E  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  4157  001B12  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  4158  001B16  0012               	return		;funcret
  4159  001B18                     __end_of___aomod:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function ___aodiv *****************
  4163 ;; Defined at:
  4164 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  dividend        8    2[COMRAM] long long 
  4167 ;;  divisor         8   10[COMRAM] long long 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  quotient        8   20[COMRAM] long long 
  4170 ;;  sign            1   19[COMRAM] unsigned char 
  4171 ;;  counter         1   18[COMRAM] unsigned char 
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  8    2[COMRAM] long long 
  4174 ;; Registers used:
  4175 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4181 ;;      Params:        16       0       0       0       0       0       0       0       0
  4182 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4184 ;;      Totals:        26       0       0       0       0       0       0       0       0
  4185 ;;Total ram usage:       26 bytes
  4186 ;; Hardware stack levels used:    1
  4187 ;; Hardware stack levels required when called:    1
  4188 ;; This function calls:
  4189 ;;		Nothing
  4190 ;; This function is called by:
  4191 ;;		_dtoa
  4192 ;; This function uses a non-reentrant model
  4193 ;;
  4194                           
  4195                           	psect	text18
  4196  0016B6                     __ptext18:
  4197                           	callstack 0
  4198  0016B6                     ___aodiv:
  4199                           	callstack 25
  4200  0016B6  0E00               	movlw	0
  4201  0016B8  6E14               	movwf	___aodiv@sign^0,c
  4202  0016BA  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  4203  0016BC  EF64  F00B         	goto	u1560
  4204  0016C0  EF62  F00B         	goto	u1561
  4205  0016C4                     u1561:
  4206  0016C4  EF76  F00B         	goto	l1888
  4207  0016C8                     u1560:
  4208  0016C8  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  4209  0016CA  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  4210  0016CC  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  4211  0016CE  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  4212  0016D0  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  4213  0016D2  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  4214  0016D4  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  4215  0016D6  6C0B               	negf	___aodiv@divisor^0,c
  4216  0016D8  0E00               	movlw	0
  4217  0016DA  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  4218  0016DC  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  4219  0016DE  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  4220  0016E0  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  4221  0016E2  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  4222  0016E4  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  4223  0016E6  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  4224  0016E8  0E01               	movlw	1
  4225  0016EA  6E14               	movwf	___aodiv@sign^0,c
  4226  0016EC                     l1888:
  4227  0016EC  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  4228  0016EE  EF7D  F00B         	goto	u1570
  4229  0016F2  EF7B  F00B         	goto	u1571
  4230  0016F6                     u1571:
  4231  0016F6  EF8F  F00B         	goto	l1894
  4232  0016FA                     u1570:
  4233  0016FA  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  4234  0016FC  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  4235  0016FE  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  4236  001700  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  4237  001702  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  4238  001704  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  4239  001706  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  4240  001708  6C03               	negf	___aodiv@dividend^0,c
  4241  00170A  0E00               	movlw	0
  4242  00170C  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  4243  00170E  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  4244  001710  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  4245  001712  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  4246  001714  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  4247  001716  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  4248  001718  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  4249  00171A  0E01               	movlw	1
  4250  00171C  1A14               	xorwf	___aodiv@sign^0,f,c
  4251  00171E                     l1894:
  4252  00171E  EE20  F015         	lfsr	2,___aodiv@quotient
  4253  001722  0E07               	movlw	7
  4254  001724                     u1581:
  4255  001724  6ADE               	clrf	postinc2,c
  4256  001726  06E8               	decf	wreg,f,c
  4257  001728  E2FD               	bc	u1581
  4258  00172A  500B               	movf	___aodiv@divisor^0,w,c
  4259  00172C  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  4260  00172E  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  4261  001730  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  4262  001732  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  4263  001734  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  4264  001736  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  4265  001738  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  4266  00173A  B4D8               	btfsc	status,2,c
  4267  00173C  EFA2  F00B         	goto	u1591
  4268  001740  EFA4  F00B         	goto	u1590
  4269  001744                     u1591:
  4270  001744  EFF6  F00B         	goto	l1916
  4271  001748                     u1590:
  4272  001748  0E01               	movlw	1
  4273  00174A  6E13               	movwf	___aodiv@counter^0,c
  4274  00174C  EFB2  F00B         	goto	l1902
  4275  001750                     l1900:
  4276  001750  90D8               	bcf	status,0,c
  4277  001752  360B               	rlcf	___aodiv@divisor^0,f,c
  4278  001754  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  4279  001756  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  4280  001758  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  4281  00175A  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  4282  00175C  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  4283  00175E  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  4284  001760  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  4285  001762  2A13               	incf	___aodiv@counter^0,f,c
  4286  001764                     l1902:
  4287  001764  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  4288  001766  EFB7  F00B         	goto	u1601
  4289  00176A  EFB9  F00B         	goto	u1600
  4290  00176E                     u1601:
  4291  00176E  EFA8  F00B         	goto	l1900
  4292  001772                     u1600:
  4293  001772                     l1904:
  4294  001772  90D8               	bcf	status,0,c
  4295  001774  3615               	rlcf	___aodiv@quotient^0,f,c
  4296  001776  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  4297  001778  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  4298  00177A  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  4299  00177C  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  4300  00177E  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  4301  001780  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  4302  001782  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  4303  001784  500B               	movf	___aodiv@divisor^0,w,c
  4304  001786  5C03               	subwf	___aodiv@dividend^0,w,c
  4305  001788  500C               	movf	(___aodiv@divisor+1)^0,w,c
  4306  00178A  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  4307  00178C  500D               	movf	(___aodiv@divisor+2)^0,w,c
  4308  00178E  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  4309  001790  500E               	movf	(___aodiv@divisor+3)^0,w,c
  4310  001792  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  4311  001794  500F               	movf	(___aodiv@divisor+4)^0,w,c
  4312  001796  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  4313  001798  5010               	movf	(___aodiv@divisor+5)^0,w,c
  4314  00179A  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  4315  00179C  5011               	movf	(___aodiv@divisor+6)^0,w,c
  4316  00179E  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  4317  0017A0  5012               	movf	(___aodiv@divisor+7)^0,w,c
  4318  0017A2  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  4319  0017A4  A0D8               	btfss	status,0,c
  4320  0017A6  EFD7  F00B         	goto	u1611
  4321  0017AA  EFD9  F00B         	goto	u1610
  4322  0017AE                     u1611:
  4323  0017AE  EFEA  F00B         	goto	l1912
  4324  0017B2                     u1610:
  4325  0017B2  500B               	movf	___aodiv@divisor^0,w,c
  4326  0017B4  5E03               	subwf	___aodiv@dividend^0,f,c
  4327  0017B6  500C               	movf	(___aodiv@divisor+1)^0,w,c
  4328  0017B8  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  4329  0017BA  500D               	movf	(___aodiv@divisor+2)^0,w,c
  4330  0017BC  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  4331  0017BE  500E               	movf	(___aodiv@divisor+3)^0,w,c
  4332  0017C0  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  4333  0017C2  500F               	movf	(___aodiv@divisor+4)^0,w,c
  4334  0017C4  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  4335  0017C6  5010               	movf	(___aodiv@divisor+5)^0,w,c
  4336  0017C8  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  4337  0017CA  5011               	movf	(___aodiv@divisor+6)^0,w,c
  4338  0017CC  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  4339  0017CE  5012               	movf	(___aodiv@divisor+7)^0,w,c
  4340  0017D0  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  4341  0017D2  8015               	bsf	___aodiv@quotient^0,0,c
  4342  0017D4                     l1912:
  4343  0017D4  90D8               	bcf	status,0,c
  4344  0017D6  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  4345  0017D8  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  4346  0017DA  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  4347  0017DC  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  4348  0017DE  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  4349  0017E0  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  4350  0017E2  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  4351  0017E4  320B               	rrcf	___aodiv@divisor^0,f,c
  4352  0017E6  2E13               	decfsz	___aodiv@counter^0,f,c
  4353  0017E8  EFB9  F00B         	goto	l1904
  4354  0017EC                     l1916:
  4355  0017EC  5014               	movf	___aodiv@sign^0,w,c
  4356  0017EE  B4D8               	btfsc	status,2,c
  4357  0017F0  EFFC  F00B         	goto	u1621
  4358  0017F4  EFFE  F00B         	goto	u1620
  4359  0017F8                     u1621:
  4360  0017F8  EF0E  F00C         	goto	l1920
  4361  0017FC                     u1620:
  4362  0017FC  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  4363  0017FE  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  4364  001800  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  4365  001802  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  4366  001804  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  4367  001806  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  4368  001808  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  4369  00180A  6C15               	negf	___aodiv@quotient^0,c
  4370  00180C  0E00               	movlw	0
  4371  00180E  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  4372  001810  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  4373  001812  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  4374  001814  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  4375  001816  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  4376  001818  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  4377  00181A  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  4378  00181C                     l1920:
  4379  00181C  C015  F003         	movff	___aodiv@quotient,?___aodiv
  4380  001820  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  4381  001824  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  4382  001828  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  4383  00182C  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  4384  001830  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  4385  001834  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  4386  001838  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  4387  00183C  0012               	return		;funcret
  4388  00183E                     __end_of___aodiv:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _memset *****************
  4392 ;; Defined at:
  4393 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\memset.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  dest            2    6[COMRAM] PTR void 
  4396 ;;		 -> GSM_Send_Msg@sms_buffer(35), buff(160), 
  4397 ;;  c               2    8[COMRAM] int 
  4398 ;;  n               2   10[COMRAM] unsigned int 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  s               2   16[COMRAM] PTR unsigned char 
  4401 ;;		 -> GSM_Send_Msg@sms_buffer(35), buff(160), 
  4402 ;;  k               2   14[COMRAM] unsigned int 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  2    6[COMRAM] PTR void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4412 ;;      Params:         6       0       0       0       0       0       0       0       0
  4413 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4414 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4415 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4416 ;;Total ram usage:       12 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    1
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_GSM_Send_Msg
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text19
  4427  00183E                     __ptext19:
  4428                           	callstack 0
  4429  00183E                     _memset:
  4430                           	callstack 28
  4431  00183E  C007  F011         	movff	memset@dest,memset@s
  4432  001842  C008  F012         	movff	memset@dest+1,memset@s+1
  4433  001846  500B               	movf	memset@n^0,w,c
  4434  001848  100C               	iorwf	(memset@n+1)^0,w,c
  4435  00184A  A4D8               	btfss	status,2,c
  4436  00184C  EF2A  F00C         	goto	u1981
  4437  001850  EF2C  F00C         	goto	u1980
  4438  001854                     u1981:
  4439  001854  EF2E  F00C         	goto	l2142
  4440  001858                     u1980:
  4441  001858  EFD9  F00C         	goto	l859
  4442  00185C                     l2142:
  4443  00185C  C011  FFD9         	movff	memset@s,fsr2l
  4444  001860  C012  FFDA         	movff	memset@s+1,fsr2h
  4445  001864  C009  FFDF         	movff	memset@c,indf2
  4446  001868  500B               	movf	memset@n^0,w,c
  4447  00186A  2411               	addwf	memset@s^0,w,c
  4448  00186C  6E0D               	movwf	??_memset^0,c
  4449  00186E  500C               	movf	(memset@n+1)^0,w,c
  4450  001870  2012               	addwfc	(memset@s+1)^0,w,c
  4451  001872  6E0E               	movwf	(??_memset+1)^0,c
  4452  001874  0EFF               	movlw	255
  4453  001876  240D               	addwf	??_memset^0,w,c
  4454  001878  6ED9               	movwf	fsr2l,c
  4455  00187A  0EFF               	movlw	255
  4456  00187C  200E               	addwfc	(??_memset+1)^0,w,c
  4457  00187E  6EDA               	movwf	fsr2h,c
  4458  001880  C009  FFDF         	movff	memset@c,indf2
  4459  001884  500C               	movf	(memset@n+1)^0,w,c
  4460  001886  E107               	bnz	u1991
  4461  001888  0E03               	movlw	3
  4462  00188A  5C0B               	subwf	memset@n^0,w,c
  4463  00188C  B0D8               	btfsc	status,0,c
  4464  00188E  EF4B  F00C         	goto	u1991
  4465  001892  EF4D  F00C         	goto	u1990
  4466  001896                     u1991:
  4467  001896  EF4F  F00C         	goto	l2148
  4468  00189A                     u1990:
  4469  00189A  EFD9  F00C         	goto	l859
  4470  00189E                     l2148:
  4471  00189E  EE20 F001          	lfsr	2,1
  4472  0018A2  5011               	movf	memset@s^0,w,c
  4473  0018A4  26D9               	addwf	fsr2l,f,c
  4474  0018A6  5012               	movf	(memset@s+1)^0,w,c
  4475  0018A8  22DA               	addwfc	fsr2h,f,c
  4476  0018AA  C009  FFDF         	movff	memset@c,indf2
  4477  0018AE  EE20 F002          	lfsr	2,2
  4478  0018B2  5011               	movf	memset@s^0,w,c
  4479  0018B4  26D9               	addwf	fsr2l,f,c
  4480  0018B6  5012               	movf	(memset@s+1)^0,w,c
  4481  0018B8  22DA               	addwfc	fsr2h,f,c
  4482  0018BA  C009  FFDF         	movff	memset@c,indf2
  4483  0018BE  500B               	movf	memset@n^0,w,c
  4484  0018C0  2411               	addwf	memset@s^0,w,c
  4485  0018C2  6E0D               	movwf	??_memset^0,c
  4486  0018C4  500C               	movf	(memset@n+1)^0,w,c
  4487  0018C6  2012               	addwfc	(memset@s+1)^0,w,c
  4488  0018C8  6E0E               	movwf	(??_memset+1)^0,c
  4489  0018CA  0EFE               	movlw	254
  4490  0018CC  240D               	addwf	??_memset^0,w,c
  4491  0018CE  6ED9               	movwf	fsr2l,c
  4492  0018D0  0EFF               	movlw	255
  4493  0018D2  200E               	addwfc	(??_memset+1)^0,w,c
  4494  0018D4  6EDA               	movwf	fsr2h,c
  4495  0018D6  C009  FFDF         	movff	memset@c,indf2
  4496  0018DA  500B               	movf	memset@n^0,w,c
  4497  0018DC  2411               	addwf	memset@s^0,w,c
  4498  0018DE  6E0D               	movwf	??_memset^0,c
  4499  0018E0  500C               	movf	(memset@n+1)^0,w,c
  4500  0018E2  2012               	addwfc	(memset@s+1)^0,w,c
  4501  0018E4  6E0E               	movwf	(??_memset+1)^0,c
  4502  0018E6  0EFD               	movlw	253
  4503  0018E8  240D               	addwf	??_memset^0,w,c
  4504  0018EA  6ED9               	movwf	fsr2l,c
  4505  0018EC  0EFF               	movlw	255
  4506  0018EE  200E               	addwfc	(??_memset+1)^0,w,c
  4507  0018F0  6EDA               	movwf	fsr2h,c
  4508  0018F2  C009  FFDF         	movff	memset@c,indf2
  4509  0018F6  500C               	movf	(memset@n+1)^0,w,c
  4510  0018F8  E107               	bnz	u2001
  4511  0018FA  0E07               	movlw	7
  4512  0018FC  5C0B               	subwf	memset@n^0,w,c
  4513  0018FE  B0D8               	btfsc	status,0,c
  4514  001900  EF84  F00C         	goto	u2001
  4515  001904  EF86  F00C         	goto	u2000
  4516  001908                     u2001:
  4517  001908  EF88  F00C         	goto	l2154
  4518  00190C                     u2000:
  4519  00190C  EFD9  F00C         	goto	l859
  4520  001910                     l2154:
  4521  001910  EE20 F003          	lfsr	2,3
  4522  001914  5011               	movf	memset@s^0,w,c
  4523  001916  26D9               	addwf	fsr2l,f,c
  4524  001918  5012               	movf	(memset@s+1)^0,w,c
  4525  00191A  22DA               	addwfc	fsr2h,f,c
  4526  00191C  C009  FFDF         	movff	memset@c,indf2
  4527  001920  500B               	movf	memset@n^0,w,c
  4528  001922  2411               	addwf	memset@s^0,w,c
  4529  001924  6E0D               	movwf	??_memset^0,c
  4530  001926  500C               	movf	(memset@n+1)^0,w,c
  4531  001928  2012               	addwfc	(memset@s+1)^0,w,c
  4532  00192A  6E0E               	movwf	(??_memset+1)^0,c
  4533  00192C  0EFC               	movlw	252
  4534  00192E  240D               	addwf	??_memset^0,w,c
  4535  001930  6ED9               	movwf	fsr2l,c
  4536  001932  0EFF               	movlw	255
  4537  001934  200E               	addwfc	(??_memset+1)^0,w,c
  4538  001936  6EDA               	movwf	fsr2h,c
  4539  001938  C009  FFDF         	movff	memset@c,indf2
  4540  00193C  500C               	movf	(memset@n+1)^0,w,c
  4541  00193E  E107               	bnz	u2011
  4542  001940  0E09               	movlw	9
  4543  001942  5C0B               	subwf	memset@n^0,w,c
  4544  001944  B0D8               	btfsc	status,0,c
  4545  001946  EFA7  F00C         	goto	u2011
  4546  00194A  EFA9  F00C         	goto	u2010
  4547  00194E                     u2011:
  4548  00194E  EFAB  F00C         	goto	l2160
  4549  001952                     u2010:
  4550  001952  EFD9  F00C         	goto	l859
  4551  001956                     l2160:
  4552  001956  C011  F00D         	movff	memset@s,??_memset
  4553  00195A  C012  F00E         	movff	memset@s+1,??_memset+1
  4554  00195E  1E0D               	comf	??_memset^0,f,c
  4555  001960  1E0E               	comf	(??_memset+1)^0,f,c
  4556  001962  4A0D               	infsnz	??_memset^0,f,c
  4557  001964  2A0E               	incf	(??_memset+1)^0,f,c
  4558  001966  0E03               	movlw	3
  4559  001968  140D               	andwf	??_memset^0,w,c
  4560  00196A  6E0F               	movwf	memset@k^0,c
  4561  00196C  6A10               	clrf	(memset@k+1)^0,c
  4562  00196E  500F               	movf	memset@k^0,w,c
  4563  001970  2611               	addwf	memset@s^0,f,c
  4564  001972  5010               	movf	(memset@k+1)^0,w,c
  4565  001974  2212               	addwfc	(memset@s+1)^0,f,c
  4566  001976  500F               	movf	memset@k^0,w,c
  4567  001978  5E0B               	subwf	memset@n^0,f,c
  4568  00197A  5010               	movf	(memset@k+1)^0,w,c
  4569  00197C  5A0C               	subwfb	(memset@n+1)^0,f,c
  4570  00197E  0EFC               	movlw	252
  4571  001980  160B               	andwf	memset@n^0,f,c
  4572  001982  0EFF               	movlw	255
  4573  001984  160C               	andwf	(memset@n+1)^0,f,c
  4574  001986  EFD0  F00C         	goto	l2168
  4575  00198A                     l2162:
  4576  00198A  C011  FFD9         	movff	memset@s,fsr2l
  4577  00198E  C012  FFDA         	movff	memset@s+1,fsr2h
  4578  001992  C009  FFDF         	movff	memset@c,indf2
  4579  001996  060B               	decf	memset@n^0,f,c
  4580  001998  A0D8               	btfss	status,0,c
  4581  00199A  060C               	decf	(memset@n+1)^0,f,c
  4582  00199C  4A11               	infsnz	memset@s^0,f,c
  4583  00199E  2A12               	incf	(memset@s+1)^0,f,c
  4584  0019A0                     l2168:
  4585  0019A0  500B               	movf	memset@n^0,w,c
  4586  0019A2  100C               	iorwf	(memset@n+1)^0,w,c
  4587  0019A4  A4D8               	btfss	status,2,c
  4588  0019A6  EFD7  F00C         	goto	u2021
  4589  0019AA  EFD9  F00C         	goto	u2020
  4590  0019AE                     u2021:
  4591  0019AE  EFC5  F00C         	goto	l2162
  4592  0019B2                     u2020:
  4593  0019B2                     l859:
  4594  0019B2  0012               	return		;funcret
  4595  0019B4                     __end_of_memset:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _USART_SendString *****************
  4599 ;; Defined at:
  4600 ;;		line 40 in file "USART_Source_File.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  out             2    3[COMRAM] PTR const unsigned char 
  4603 ;;		 -> GSM_Send_Msg@sms_buffer(35), main@strr(20), 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  s               1    5[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         2       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        3 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    2
  4622 ;; This function calls:
  4623 ;;		_USART_TxChar
  4624 ;; This function is called by:
  4625 ;;		_GSM_Send_Msg
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text20
  4630  002280                     __ptext20:
  4631                           	callstack 0
  4632  002280                     _USART_SendString:
  4633                           	callstack 27
  4634  002280                     
  4635                           ;USART_Source_File.c: 40: void USART_SendString(const char *out);USART_Source_File.c: 41
      +                          : {;USART_Source_File.c: 42:    unsigned char s=0;
  4636  002280  0E00               	movlw	0
  4637  002282  6E06               	movwf	USART_SendString@s^0,c
  4638                           
  4639                           ;USART_Source_File.c: 44:  while (out[s]!=0){
  4640  002284  EF4E  F011         	goto	l2108
  4641  002288                     l2104:
  4642                           
  4643                           ;USART_Source_File.c: 46:   USART_TxChar (out[s]);
  4644  002288  5006               	movf	USART_SendString@s^0,w,c
  4645  00228A  2404               	addwf	USART_SendString@out^0,w,c
  4646  00228C  6ED9               	movwf	fsr2l,c
  4647  00228E  0E00               	movlw	0
  4648  002290  2005               	addwfc	(USART_SendString@out+1)^0,w,c
  4649  002292  6EDA               	movwf	fsr2h,c
  4650  002294  50DF               	movf	indf2,w,c
  4651  002296  EC78  F011         	call	_USART_TxChar
  4652  00229A                     
  4653                           ;USART_Source_File.c: 47:   s++;
  4654  00229A  2A06               	incf	USART_SendString@s^0,f,c
  4655  00229C                     l2108:
  4656                           
  4657                           ;USART_Source_File.c: 44:  while (out[s]!=0){
  4658  00229C  5006               	movf	USART_SendString@s^0,w,c
  4659  00229E  2404               	addwf	USART_SendString@out^0,w,c
  4660  0022A0  6ED9               	movwf	fsr2l,c
  4661  0022A2  0E00               	movlw	0
  4662  0022A4  2005               	addwfc	(USART_SendString@out+1)^0,w,c
  4663  0022A6  6EDA               	movwf	fsr2h,c
  4664  0022A8  50DF               	movf	indf2,w,c
  4665  0022AA  A4D8               	btfss	status,2,c
  4666  0022AC  EF5A  F011         	goto	u1951
  4667  0022B0  EF5C  F011         	goto	u1950
  4668  0022B4                     u1951:
  4669  0022B4  EF44  F011         	goto	l2104
  4670  0022B8                     u1950:
  4671  0022B8  0012               	return		;funcret
  4672  0022BA                     __end_of_USART_SendString:
  4673                           	callstack 0
  4674                           
  4675 ;; *************** function _USART_TxChar *****************
  4676 ;; Defined at:
  4677 ;;		line 19 in file "USART_Source_File.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  data            1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  data            1    2[COMRAM] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0
  4692 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4694 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4695 ;;Total ram usage:        1 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    1
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_USART_SendString
  4702 ;;		_GSM_Send_Msg
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text21
  4707  0022F0                     __ptext21:
  4708                           	callstack 0
  4709  0022F0                     _USART_TxChar:
  4710                           	callstack 28
  4711                           
  4712                           ;incstack = 0
  4713                           ;USART_TxChar@data stored from wreg
  4714  0022F0  6E03               	movwf	USART_TxChar@data^0,c
  4715  0022F2                     l30:
  4716  0022F2  A89E               	btfss	3998,4,c	;volatile
  4717  0022F4  EF7E  F011         	goto	u1931
  4718  0022F8  EF80  F011         	goto	u1930
  4719  0022FC                     u1931:
  4720  0022FC  EF79  F011         	goto	l30
  4721  002300                     u1930:
  4722  002300                     
  4723                           ;USART_Source_File.c: 22:         TXREG=data;
  4724  002300  C003  FFAD         	movff	USART_TxChar@data,4013	;volatile
  4725  002304  0012               	return		;funcret
  4726  002306                     __end_of_USART_TxChar:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _MSdelay *****************
  4730 ;; Defined at:
  4731 ;;		line 53 in file "Level_Sensor.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  val             2    2[COMRAM] unsigned int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  j               2    6[COMRAM] unsigned int 
  4736 ;;  i               2    4[COMRAM] unsigned int 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  1    wreg      void 
  4739 ;; Registers used:
  4740 ;;		wreg, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4746 ;;      Params:         2       0       0       0       0       0       0       0       0
  4747 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4749 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4750 ;;Total ram usage:        6 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_main
  4757 ;;		_GSM_Send_Msg
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text22
  4762  002178                     __ptext22:
  4763                           	callstack 0
  4764  002178                     _MSdelay:
  4765                           	callstack 29
  4766  002178                     
  4767                           ;Level_Sensor.c: 53: void MSdelay(unsigned int val);Level_Sensor.c: 54: {;Level_Sensor.c
      +                          : 55:      unsigned int i,j;;Level_Sensor.c: 56:         for(i=0;i<=val;i++)
  4768  002178  0E00               	movlw	0
  4769  00217A  6E06               	movwf	(MSdelay@i+1)^0,c
  4770  00217C  0E00               	movlw	0
  4771  00217E  6E05               	movwf	MSdelay@i^0,c
  4772  002180  EFD5  F010         	goto	l2124
  4773  002184                     l2112:
  4774                           
  4775                           ;Level_Sensor.c: 57:             for(j=0;j<81;j++);
  4776  002184  0E00               	movlw	0
  4777  002186  6E08               	movwf	(MSdelay@j+1)^0,c
  4778  002188  0E00               	movlw	0
  4779  00218A  6E07               	movwf	MSdelay@j^0,c
  4780  00218C                     l2118:
  4781  00218C  4A07               	infsnz	MSdelay@j^0,f,c
  4782  00218E  2A08               	incf	(MSdelay@j+1)^0,f,c
  4783  002190  5008               	movf	(MSdelay@j+1)^0,w,c
  4784  002192  E109               	bnz	u1960
  4785  002194  0E51               	movlw	81
  4786  002196  5C07               	subwf	MSdelay@j^0,w,c
  4787  002198  A0D8               	btfss	status,0,c
  4788  00219A  EFD1  F010         	goto	u1961
  4789  00219E  EFD3  F010         	goto	u1960
  4790  0021A2                     u1961:
  4791  0021A2  EFC6  F010         	goto	l2118
  4792  0021A6                     u1960:
  4793  0021A6  4A05               	infsnz	MSdelay@i^0,f,c
  4794  0021A8  2A06               	incf	(MSdelay@i+1)^0,f,c
  4795  0021AA                     l2124:
  4796  0021AA  5005               	movf	MSdelay@i^0,w,c
  4797  0021AC  5C03               	subwf	MSdelay@val^0,w,c
  4798  0021AE  5006               	movf	(MSdelay@i+1)^0,w,c
  4799  0021B0  5804               	subwfb	(MSdelay@val+1)^0,w,c
  4800  0021B2  B0D8               	btfsc	status,0,c
  4801  0021B4  EFDE  F010         	goto	u1971
  4802  0021B8  EFE0  F010         	goto	u1970
  4803  0021BC                     u1971:
  4804  0021BC  EFC2  F010         	goto	l2112
  4805  0021C0                     u1970:
  4806  0021C0  0012               	return		;funcret
  4807  0021C2                     __end_of_MSdelay:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function _ADC_Read *****************
  4811 ;; Defined at:
  4812 ;;		line 153 in file "Level_Sensor.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  channel         2    2[COMRAM] int 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  2    2[COMRAM] int 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2, status,0
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4826 ;;      Params:         2       0       0       0       0       0       0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4828 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4829 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4830 ;;Total ram usage:        6 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; Hardware stack levels required when called:    1
  4833 ;; This function calls:
  4834 ;;		Nothing
  4835 ;; This function is called by:
  4836 ;;		_main
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text23
  4841  001EB6                     __ptext23:
  4842                           	callstack 0
  4843  001EB6                     _ADC_Read:
  4844                           	callstack 29
  4845  001EB6                     
  4846                           ;Level_Sensor.c: 153: int ADC_Read(int channel);Level_Sensor.c: 154: {;Level_Sensor.c: 1
      +                          56:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  4847  001EB6  C003  F005         	movff	ADC_Read@channel,??_ADC_Read
  4848  001EBA  90D8               	bcf	status,0,c
  4849  001EBC  3605               	rlcf	??_ADC_Read^0,f,c
  4850  001EBE  90D8               	bcf	status,0,c
  4851  001EC0  3605               	rlcf	??_ADC_Read^0,f,c
  4852  001EC2  0E3C               	movlw	60
  4853  001EC4  1605               	andwf	??_ADC_Read^0,f,c
  4854  001EC6  50C2               	movf	194,w,c	;volatile
  4855  001EC8  0BC3               	andlw	195
  4856  001ECA  1005               	iorwf	??_ADC_Read^0,w,c
  4857  001ECC  6EC2               	movwf	194,c	;volatile
  4858                           
  4859                           ;Level_Sensor.c: 158:     ADCON0 |= ((1<<ADON)|(1<<GO));
  4860  001ECE  B2C2               	btfsc	4034,1,c	;volatile
  4861  001ED0  EF6C  F00F         	goto	u2821
  4862  001ED4  EF70  F00F         	goto	u2820
  4863  001ED8                     u2821:
  4864  001ED8  6A05               	clrf	??_ADC_Read^0,c
  4865  001EDA  2A05               	incf	??_ADC_Read^0,f,c
  4866  001EDC  EF71  F00F         	goto	u2838
  4867  001EE0                     u2820:
  4868  001EE0  6A05               	clrf	??_ADC_Read^0,c
  4869  001EE2                     u2838:
  4870  001EE2  0E01               	movlw	1
  4871  001EE4  6E06               	movwf	(??_ADC_Read+1)^0,c
  4872  001EE6  2A05               	incf	??_ADC_Read^0,f,c
  4873  001EE8  EF78  F00F         	goto	u2844
  4874  001EEC                     u2845:
  4875  001EEC  90D8               	bcf	status,0,c
  4876  001EEE  3606               	rlcf	(??_ADC_Read+1)^0,f,c
  4877  001EF0                     u2844:
  4878  001EF0  2E05               	decfsz	??_ADC_Read^0,f,c
  4879  001EF2  EF76  F00F         	goto	u2845
  4880  001EF6  B0C2               	btfsc	4034,0,c	;volatile
  4881  001EF8  EF80  F00F         	goto	u2851
  4882  001EFC  EF84  F00F         	goto	u2850
  4883  001F00                     u2851:
  4884  001F00  6A07               	clrf	(??_ADC_Read+2)^0,c
  4885  001F02  2A07               	incf	(??_ADC_Read+2)^0,f,c
  4886  001F04  EF85  F00F         	goto	u2868
  4887  001F08                     u2850:
  4888  001F08  6A07               	clrf	(??_ADC_Read+2)^0,c
  4889  001F0A                     u2868:
  4890  001F0A  0E01               	movlw	1
  4891  001F0C  6E08               	movwf	(??_ADC_Read+3)^0,c
  4892  001F0E  2A07               	incf	(??_ADC_Read+2)^0,f,c
  4893  001F10  EF8C  F00F         	goto	u2874
  4894  001F14                     u2875:
  4895  001F14  90D8               	bcf	status,0,c
  4896  001F16  3608               	rlcf	(??_ADC_Read+3)^0,f,c
  4897  001F18                     u2874:
  4898  001F18  2E07               	decfsz	(??_ADC_Read+2)^0,f,c
  4899  001F1A  EF8A  F00F         	goto	u2875
  4900  001F1E  5008               	movf	(??_ADC_Read+3)^0,w,c
  4901  001F20  1006               	iorwf	(??_ADC_Read+1)^0,w,c
  4902  001F22  12C2               	iorwf	194,f,c	;volatile
  4903  001F24                     l178:
  4904  001F24  B2C2               	btfsc	194,1,c	;volatile
  4905  001F26  EF97  F00F         	goto	u2881
  4906  001F2A  EF99  F00F         	goto	u2880
  4907  001F2E                     u2881:
  4908  001F2E  EF92  F00F         	goto	l178
  4909  001F32                     u2880:
  4910  001F32                     
  4911                           ;Level_Sensor.c: 160:     digital = (ADRESH*256) | (ADRESL);
  4912  001F32  50C3               	movf	195,w,c	;volatile
  4913  001F34  CFC4 F005          	movff	4036,??_ADC_Read	;volatile
  4914  001F38  6A06               	clrf	(??_ADC_Read+1)^0,c
  4915  001F3A  C005  F006         	movff	??_ADC_Read,??_ADC_Read+1
  4916  001F3E  6A05               	clrf	??_ADC_Read^0,c
  4917  001F40  1005               	iorwf	??_ADC_Read^0,w,c
  4918  001F42  0100               	movlb	0	; () banked
  4919  001F44  6FF7               	movwf	_digital& (0+255),b
  4920  001F46  5006               	movf	(??_ADC_Read+1)^0,w,c
  4921  001F48  6FF8               	movwf	(_digital+1)& (0+255),b
  4922  001F4A                     
  4923                           ; BSR set to: 0
  4924                           ;Level_Sensor.c: 161:     return(digital);
  4925  001F4A  C0F7  F003         	movff	_digital,?_ADC_Read
  4926  001F4E  C0F8  F004         	movff	_digital+1,?_ADC_Read+1
  4927  001F52                     
  4928                           ; BSR set to: 0
  4929  001F52  0012               	return		;funcret
  4930  001F54                     __end_of_ADC_Read:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _ADC_Init *****************
  4934 ;; Defined at:
  4935 ;;		line 144 in file "Level_Sensor.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;		None
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4949 ;;      Params:         0       0       0       0       0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4952 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4953 ;;Total ram usage:        0 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_main
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text24
  4964  002306                     __ptext24:
  4965                           	callstack 0
  4966  002306                     _ADC_Init:
  4967                           	callstack 29
  4968  002306                     
  4969                           ;Level_Sensor.c: 146:     TRISA = 0xff;
  4970  002306  6892               	setf	146,c	;volatile
  4971  002308                     
  4972                           ;Level_Sensor.c: 147:     ADCON1 = 0x0e;
  4973  002308  0E0E               	movlw	14
  4974  00230A  6EC1               	movwf	193,c	;volatile
  4975                           
  4976                           ;Level_Sensor.c: 148:     ADCON2 = 0x92;
  4977  00230C  0E92               	movlw	146
  4978  00230E  6EC0               	movwf	192,c	;volatile
  4979                           
  4980                           ;Level_Sensor.c: 149:     ADRESH = 0;
  4981  002310  0E00               	movlw	0
  4982  002312  6EC4               	movwf	196,c	;volatile
  4983                           
  4984                           ;Level_Sensor.c: 150:     ADRESL = 0;
  4985  002314  0E00               	movlw	0
  4986  002316  6EC3               	movwf	195,c	;volatile
  4987  002318  0012               	return		;funcret
  4988  00231A                     __end_of_ADC_Init:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _my_isr *****************
  4992 ;; Defined at:
  4993 ;;		line 100 in file "Level_Sensor.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;		None
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5007 ;;      Params:         0       0       0       0       0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5009 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5011 ;;Total ram usage:        2 bytes
  5012 ;; Hardware stack levels used:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		Interrupt level 2
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	intcode
  5021  000008                     __pintcode:
  5022                           	callstack 0
  5023  000008                     _my_isr:
  5024                           	callstack 21
  5025                           
  5026                           ;incstack = 0
  5027  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5028  00000A  ED69  F010         	call	int_func,f	;refresh shadow registers
  5029                           
  5030                           	psect	intcode_body
  5031  0020D2                     __pintcode_body:
  5032                           	callstack 21
  5033  0020D2                     int_func:
  5034                           	callstack 21
  5035  0020D2  0006               	pop		; remove dummy address from shadow register refresh
  5036  0020D4  CFD9 F001          	movff	fsr2l,??_my_isr
  5037  0020D8  CFDA F002          	movff	fsr2h,??_my_isr+1
  5038  0020DC                     
  5039                           ;Level_Sensor.c: 102:     if(RCIF)
  5040  0020DC  AA9E               	btfss	3998,5,c	;volatile
  5041  0020DE  EF73  F010         	goto	i2u290_41
  5042  0020E2  EF75  F010         	goto	i2u290_40
  5043  0020E6                     i2u290_41:
  5044  0020E6  EF8D  F010         	goto	i2l165
  5045  0020EA                     i2u290_40:
  5046  0020EA                     
  5047                           ;Level_Sensor.c: 103:     {;Level_Sensor.c: 104:         buff[a] = RCREG;
  5048  0020EA  0E00               	movlw	low _buff
  5049  0020EC  0100               	movlb	0	; () banked
  5050  0020EE  2582               	addwf	_a& (0+255),w,b	;volatile
  5051  0020F0  6ED9               	movwf	fsr2l,c
  5052  0020F2  0E01               	movlw	high _buff
  5053  0020F4  2183               	addwfc	(_a+1)& (0+255),w,b	;volatile
  5054  0020F6  6EDA               	movwf	fsr2h,c
  5055  0020F8  CFAE FFDF          	movff	4014,indf2	;volatile
  5056  0020FC                     
  5057                           ; BSR set to: 0
  5058                           ;Level_Sensor.c: 105:         a++;
  5059  0020FC  4B82               	infsnz	_a& (0+255),f,b	;volatile
  5060  0020FE  2B83               	incf	(_a+1)& (0+255),f,b	;volatile
  5061  002100                     
  5062                           ; BSR set to: 0
  5063                           ;Level_Sensor.c: 107:         if(RCSTAbits.OERR)
  5064  002100  A2AB               	btfss	171,1,c	;volatile
  5065  002102  EF85  F010         	goto	i2u291_41
  5066  002106  EF87  F010         	goto	i2u291_40
  5067  00210A                     i2u291_41:
  5068  00210A  EF8A  F010         	goto	i2l2682
  5069  00210E                     i2u291_40:
  5070  00210E                     
  5071                           ; BSR set to: 0
  5072                           ;Level_Sensor.c: 108:         {;Level_Sensor.c: 109:             CREN = 0;
  5073  00210E  98AB               	bcf	4011,4,c	;volatile
  5074                           
  5075                           ;Level_Sensor.c: 110:             __nop();
  5076  002110  F000               	nop	
  5077                           
  5078                           ;Level_Sensor.c: 111:             CREN=1;
  5079  002112  88AB               	bsf	4011,4,c	;volatile
  5080  002114                     i2l2682:
  5081                           
  5082                           ;Level_Sensor.c: 113:         status_flag=1;
  5083  002114  0E01               	movlw	1
  5084  002116  0100               	movlb	0	; () banked
  5085  002118  6F8C               	movwf	_status_flag& (0+255),b	;volatile
  5086  00211A                     i2l165:
  5087  00211A  C002  FFDA         	movff	??_my_isr+1,fsr2h
  5088  00211E  C001  FFD9         	movff	??_my_isr,fsr2l
  5089  002122  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5090  002124  0011               	retfie		f
  5091  002126                     __end_of_my_isr:
  5092                           	callstack 0
  5093                           
  5094                           	psect	rparam
  5095  0000                     
  5096                           	psect	temp
  5097  00005D                     btemp:
  5098                           	callstack 0
  5099  00005D                     	ds	1
  5100  0000                     int$flags	set	btemp
  5101  0000                     wtemp8	set	btemp+1
  5102  0000                     ttemp5	set	btemp+1
  5103  0000                     ttemp6	set	btemp+4
  5104  0000                     ttemp7	set	btemp+8
  5105                           
  5106                           	psect	idloc
  5107                           
  5108                           ;Config register IDLOC0 @ 0x200000
  5109                           ;	unspecified, using default values
  5110  200000                     	org	2097152
  5111  200000  FF                 	db	255
  5112                           
  5113                           ;Config register IDLOC1 @ 0x200001
  5114                           ;	unspecified, using default values
  5115  200001                     	org	2097153
  5116  200001  FF                 	db	255
  5117                           
  5118                           ;Config register IDLOC2 @ 0x200002
  5119                           ;	unspecified, using default values
  5120  200002                     	org	2097154
  5121  200002  FF                 	db	255
  5122                           
  5123                           ;Config register IDLOC3 @ 0x200003
  5124                           ;	unspecified, using default values
  5125  200003                     	org	2097155
  5126  200003  FF                 	db	255
  5127                           
  5128                           ;Config register IDLOC4 @ 0x200004
  5129                           ;	unspecified, using default values
  5130  200004                     	org	2097156
  5131  200004  FF                 	db	255
  5132                           
  5133                           ;Config register IDLOC5 @ 0x200005
  5134                           ;	unspecified, using default values
  5135  200005                     	org	2097157
  5136  200005  FF                 	db	255
  5137                           
  5138                           ;Config register IDLOC6 @ 0x200006
  5139                           ;	unspecified, using default values
  5140  200006                     	org	2097158
  5141  200006  FF                 	db	255
  5142                           
  5143                           ;Config register IDLOC7 @ 0x200007
  5144                           ;	unspecified, using default values
  5145  200007                     	org	2097159
  5146  200007  FF                 	db	255
  5147                           
  5148                           	psect	config
  5149                           
  5150                           ;Config register CONFIG1L @ 0x300000
  5151                           ;	PLL Prescaler Selection bits
  5152                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5153                           ;	System Clock Postscaler Selection bits
  5154                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5155                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5156                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5157  300000                     	org	3145728
  5158  300000  00                 	db	0
  5159                           
  5160                           ;Config register CONFIG1H @ 0x300001
  5161                           ;	Oscillator Selection bits
  5162                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  5163                           ;	Fail-Safe Clock Monitor Enable bit
  5164                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5165                           ;	Internal/External Oscillator Switchover bit
  5166                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5167  300001                     	org	3145729
  5168  300001  09                 	db	9
  5169                           
  5170                           ;Config register CONFIG2L @ 0x300002
  5171                           ;	Power-up Timer Enable bit
  5172                           ;	PWRT = OFF, PWRT disabled
  5173                           ;	Brown-out Reset Enable bits
  5174                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5175                           ;	Brown-out Reset Voltage bits
  5176                           ;	BORV = 3, Minimum setting 2.05V
  5177                           ;	USB Voltage Regulator Enable bit
  5178                           ;	VREGEN = OFF, USB voltage regulator disabled
  5179  300002                     	org	3145730
  5180  300002  1F                 	db	31
  5181                           
  5182                           ;Config register CONFIG2H @ 0x300003
  5183                           ;	Watchdog Timer Enable bit
  5184                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5185                           ;	Watchdog Timer Postscale Select bits
  5186                           ;	WDTPS = 32768, 1:32768
  5187  300003                     	org	3145731
  5188  300003  1E                 	db	30
  5189                           
  5190                           ; Padding undefined space
  5191  300004                     	org	3145732
  5192  300004  FF                 	db	255
  5193                           
  5194                           ;Config register CONFIG3H @ 0x300005
  5195                           ;	CCP2 MUX bit
  5196                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  5197                           ;	PORTB A/D Enable bit
  5198                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5199                           ;	Low-Power Timer 1 Oscillator Enable bit
  5200                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5201                           ;	MCLR Pin Enable bit
  5202                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5203  300005                     	org	3145733
  5204  300005  00                 	db	0
  5205                           
  5206                           ;Config register CONFIG4L @ 0x300006
  5207                           ;	Stack Full/Underflow Reset Enable bit
  5208                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5209                           ;	Single-Supply ICSP Enable bit
  5210                           ;	LVP = OFF, Single-Supply ICSP disabled
  5211                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5212                           ;	ICPRT = OFF, ICPORT disabled
  5213                           ;	Extended Instruction Set Enable bit
  5214                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5215                           ;	Background Debugger Enable bit
  5216                           ;	DEBUG = 0x1, unprogrammed default
  5217  300006                     	org	3145734
  5218  300006  81                 	db	129
  5219                           
  5220                           ; Padding undefined space
  5221  300007                     	org	3145735
  5222  300007  FF                 	db	255
  5223                           
  5224                           ;Config register CONFIG5L @ 0x300008
  5225                           ;	Code Protection bit
  5226                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5227                           ;	Code Protection bit
  5228                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5229                           ;	Code Protection bit
  5230                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5231                           ;	Code Protection bit
  5232                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5233  300008                     	org	3145736
  5234  300008  0F                 	db	15
  5235                           
  5236                           ;Config register CONFIG5H @ 0x300009
  5237                           ;	Boot Block Code Protection bit
  5238                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5239                           ;	Data EEPROM Code Protection bit
  5240                           ;	CPD = OFF, Data EEPROM is not code-protected
  5241  300009                     	org	3145737
  5242  300009  C0                 	db	192
  5243                           
  5244                           ;Config register CONFIG6L @ 0x30000A
  5245                           ;	Write Protection bit
  5246                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5247                           ;	Write Protection bit
  5248                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5249                           ;	Write Protection bit
  5250                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5251                           ;	Write Protection bit
  5252                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5253  30000A                     	org	3145738
  5254  30000A  0F                 	db	15
  5255                           
  5256                           ;Config register CONFIG6H @ 0x30000B
  5257                           ;	Configuration Register Write Protection bit
  5258                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5259                           ;	Boot Block Write Protection bit
  5260                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5261                           ;	Data EEPROM Write Protection bit
  5262                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5263  30000B                     	org	3145739
  5264  30000B  E0                 	db	224
  5265                           
  5266                           ;Config register CONFIG7L @ 0x30000C
  5267                           ;	Table Read Protection bit
  5268                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5269                           ;	Table Read Protection bit
  5270                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5271                           ;	Table Read Protection bit
  5272                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5273                           ;	Table Read Protection bit
  5274                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5275  30000C                     	org	3145740
  5276  30000C  0F                 	db	15
  5277                           
  5278                           ;Config register CONFIG7H @ 0x30000D
  5279                           ;	Boot Block Table Read Protection bit
  5280                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5281  30000D                     	org	3145741
  5282  30000D  40                 	db	64
  5283                           tosu	equ	0xFFF
  5284                           tosh	equ	0xFFE
  5285                           tosl	equ	0xFFD
  5286                           stkptr	equ	0xFFC
  5287                           pclatu	equ	0xFFB
  5288                           pclath	equ	0xFFA
  5289                           pcl	equ	0xFF9
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           indf0	equ	0xFEF
  5297                           postinc0	equ	0xFEE
  5298                           postdec0	equ	0xFED
  5299                           preinc0	equ	0xFEC
  5300                           plusw0	equ	0xFEB
  5301                           fsr0h	equ	0xFEA
  5302                           fsr0l	equ	0xFE9
  5303                           wreg	equ	0xFE8
  5304                           indf1	equ	0xFE7
  5305                           postinc1	equ	0xFE6
  5306                           postdec1	equ	0xFE5
  5307                           preinc1	equ	0xFE4
  5308                           plusw1	equ	0xFE3
  5309                           fsr1h	equ	0xFE2
  5310                           fsr1l	equ	0xFE1
  5311                           bsr	equ	0xFE0
  5312                           indf2	equ	0xFDF
  5313                           postinc2	equ	0xFDE
  5314                           postdec2	equ	0xFDD
  5315                           preinc2	equ	0xFDC
  5316                           plusw2	equ	0xFDB
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         440
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     73     153
    BANK1           256      0     160
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    data2	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    data1	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 160
		 -> dbuf(BANK0[32]), GSM_Send_Msg@sms_buffer(BANK0[35]), buff(BANK1[160]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 160
		 -> dbuf(BANK0[32]), GSM_Send_Msg@sms_buffer(BANK0[35]), buff(BANK1[160]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 35
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), main@strr(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[2]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[2]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[2]), STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 35
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), main@strr(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S872_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 35
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), main@strr(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 35
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), main@strr(BANK0[20]), 

    memset@dest	PTR void  size(2) Largest target is 160
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), buff(BANK1[160]), 

    memset@s	PTR unsigned char  size(2) Largest target is 160
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), buff(BANK1[160]), 

    GSM_Send_Msg@sms	PTR const unsigned char  size(2) Largest target is 20
		 -> main@strr(BANK0[20]), 

    sp__memset	PTR void  size(2) Largest target is 160
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), buff(BANK1[160]), 

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 35
		 -> GSM_Send_Msg@sms_buffer(BANK0[35]), main@strr(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_GSM_Send_Msg
    _USART_Init->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _memset->_strlen
    _USART_SendString->_USART_TxChar

Critical Paths under _my_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_GSM_Send_Msg
    _GSM_Send_Msg->_sprintf

Critical Paths under _my_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   21504
                                             53 BANK0     20    20      0
                           _ADC_Init
                           _ADC_Read
                       _GSM_Send_Msg
                            _MSdelay
                         _USART_Init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4    4611
                                             57 COMRAM     8     4      4
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1399
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2388
                                             41 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _GSM_Send_Msg                                        40    38      2    9559
                                             89 COMRAM     1     1      0
                                             16 BANK0     37    35      2
                            _MSdelay
                   _USART_SendString
                       _USART_TxChar
                             _memset
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6836
                                              0 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6333
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5979
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     394
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              6 COMRAM    12     6      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_SendString                                     3     1      2     264
                                              3 COMRAM     3     1      2
                       _USART_TxChar
 ---------------------------------------------------------------------------------
 (2) _USART_TxChar                                         1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     320
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2      98
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _my_isr                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _GSM_Send_Msg
     _MSdelay
     _USART_SendString
       _USART_TxChar
     _USART_TxChar
     _memset
       _strlen (ARG)
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
     _strlen
   _MSdelay
   _USART_Init
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _my_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A0       7       62.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25D      20        0.0%
DATA                 0      0     25D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 30 14:02:29 2021

             ___fldiv@aexp 0029               ___fldiv@bexp 0028                          _a 0082  
                        _e 0084                          _s 0086                          _y 006A  
             ___fldiv@sign 0021                         l30 22F2                         l33 2304  
                       l27 1FE6                         l46 22B8                         _GO 007E11  
                      l150 2056                        l311 1B16                        l144 21C0  
                      l152 2058                        l154 205A                        l172 1C22  
                      l181 1F52                        l175 2318                        l178 1F24  
                      l712 0A04                        l721 0CD4                        l713 09F2  
                      l481 1D28                        l298 183C                        l714 09B8  
                      l902 1E7A                        l910 1110                        l904 1EB4  
                      l912 1118                        l729 0B1E                        l930 134C  
                      l738 0BEE                        l842 1500                        l739 0BDC  
                      l771 0E92                        l780 0F7A                        l853 1498  
                      l766 106E                        l846 143C                        l951 2244  
                      l943 20C8                        l839 13A4                        l944 20D0  
                      l872 2176                        l768 0ECE                        l937 16B4  
                      l777 0F14                        l859 19B2                        l963 1DF2  
                      l971 2204                        l779 0F8C                        l948 223C  
                      l980 22EE                        l974 231A                        l899 1E38  
                      _abs 2206                        _pad 1DF4                        wreg 000FE8  
              _status_flag 008C               ___fltol@exp1 000C                       l2000 1120  
                     l2010 1156                       l2002 1132                       ?_abs 0015  
                     l2012 115C                       l2020 124E                       l2004 1140  
                     l2100 20AC                       l2110 2178                       l2102 2280  
                     l2022 1268                       l2030 12C8                       l2014 11DE  
                     l2006 1146                       l2120 2190                       l2112 2184  
                     l2104 2288                       l2040 130C                       l2032 12DA  
                     l2024 1286                       l2016 11E4                       l2008 114E  
                     l2200 08AC                       l2122 21A6                       l2106 229A  
                     l2042 1314                       l2034 12E8                       l2026 12A0  
                     l2018 11EA                       l2050 1526                       l2130 2140  
                     l2202 08BC                       l2210 08E6                       l2124 21AA  
                     l2108 229C                       l2036 12EE                       l2044 1324  
                     l2028 12BA                       l2060 1592                       l2052 1534  
                     l2132 2148                       l2300 0AEE                       l2220 091E  
                     l2212 08F6                       l2204 08CC                       l2118 218C  
                     l2150 18F6                       l2142 185C                       l2038 1300  
                     l2070 1644                       l2062 15DA                       l2054 1546  
                     l2134 2164                       l2126 2126                       l2302 0AFE  
                     l2230 0932                       l2222 0922                       l2214 0908  
                     l2206 08DC                       l2160 1956                       l2144 1868  
                     l2072 1658                       l2056 154A                       l2048 1502  
                     l2128 2138                       l2320 0B80                       l2312 0B58  
                     l2304 0B0E                       l2240 0946                       l2232 0936  
                     l2224 0926                       l2216 0916                       l2208 08DE  
                     l2400 0D68                       l2090 22F2                       l2162 198A  
                     l2154 1910                       l2138 183E                       l2066 1612  
                     l2058 156E                       l2082 167E                       l2322 0B88  
                     l2314 0B62                       l2306 0B34                       l2330 0BAC  
                     l2250 095A                       l2242 094A                       l2234 093A  
                     l2226 092A                       l2218 091A                       l2170 0816  
                     l2410 0DA2                       l2402 0D78                       l2092 2300  
                     l2164 1996                       l2156 193C                       l2148 189E  
                     l2084 16A2                       l2068 1636                       l2076 1664  
                     l2340 0BFE                       l2332 0BB0                       l2324 0B8C  
                     l2316 0B70                       l2308 0B44                       l2260 09D2  
                     l2252 0984                       l2244 094E                       l2236 093E  
                     l2228 092E                       l2180 0852                       l2172 0822  
                     l2500 1062                       l2412 0DB8                       l2404 0D88  
                     l2166 199C                       l2078 1672                       l2094 2070  
                     l2350 0C64                       l2342 0C0A                       l2334 0BBE  
                     l2326 0B9C                       l2318 0B72                       l2270 0A12  
                     l2262 09D6                       l2254 09A0                       l2246 0952  
                     l2238 0942                       l2190 0882                       l2182 0862  
                     l2174 0830                       l2502 1064                       l2430 0E0C  
                     l2414 0DC8                       l2422 0DE8                       l2406 0D8A  
                     l2510 1C24                       l2168 19A0                       l2096 2078  
                     l2360 0CAC                       l2352 0C74                       l2344 0C18  
                     l2336 0BD4                       l2328 0B9E                       l2280 0A54  
                     l2272 0A22                       l2264 09E4                       l2256 09B0  
                     l2248 0956                       l2192 0894                       l2184 0864  
                     l2176 0832                       l2440 0E5E                       l2432 0E26  
                     l2424 0DF8                       l2416 0DD0                       l2408 0D92  
                     l2520 1C7A                       l2512 1C3A                       l2600 1F54  
                     l2610 2308                       l2098 2086                       l2362 0CAE  
                     l2354 0C94                       l2346 0C52                       l2290 0A82  
                     l2282 0A62                       l2266 09E6                       l2258 09C6  
                     l2194 0896                       l2178 0842                       l2186 086C  
                     l2450 0EBA                       l2442 0E6E                       l2434 0E36  
                     l2426 0DF8                       l2418 0DD4                       l2522 1C8A  
                     l2602 1F58                       l2612 1EB6                       l1900 1750  
                     l2364 0CB4                       l2356 0C98                       l2348 0C54  
                     l2292 0A8C                       l2284 0A6E                       l2276 0A36  
                     l2268 09F0                       l2196 089C                       l2188 087C  
                     l2460 0EFA                       l2452 0EBC                       l2444 0E82  
                     l2436 0E46                       l2380 0D02                       l2372 0CD6  
                     l2532 1CB4                       l2524 1C8E                       l2516 1C4E  
                     l2604 1FDE                       l2614 1F32                       l1910 17D2  
                     l1902 1764                       l2710 1B36                       l2366 0CC2  
                     l2358 0CA6                       l2286 0A72                       l2278 0A46  
                     l2294 0A92                       l2198 08AA                       l2470 0F36  
                     l2462 0F04                       l2454 0ECC                       l2446 0E90  
                     l2438 0E56                       l2390 0D3C                       l2382 0D12  
                     l2374 0CE2                       l2550 1D18                       l2542 1CDC  
                     l2534 1CBE                       l2526 1C9C                       l2518 1C78  
                     l2606 1FE2                       l2608 2306                       l2616 1F4A  
                     l1920 181C                       l1912 17D4                       l1904 1772  
                     l2720 1B9E                       l2712 1B42                       l2368 0CC4  
                     l2296 0AB8                       l2288 0A80                       l2480 0FA8  
                     l2472 0F44                       l2464 0F12                       l2456 0EDE  
                     l2448 0E9C                       l2392 0D42                       l2384 0D22  
                     l2376 0CF0                       l2544 1CE8                       l2536 1CC8  
                     l2560 13B4                       l1914 17E6                       l1906 1784  
                     l1930 19E6                       l1850 1D3C                       l2730 1BD2  
                     l2722 1BAA                       l2714 1B4E                       l2706 1B18  
                     l2298 0AEC                       l2490 1014                       l2482 0FB6  
                     l2474 0F72                       l2458 0EF4                       l2466 0F24  
                     l2394 0D48                       l2386 0D24                       l2378 0CF2  
                     l2546 1CF8                       l2570 13F2                       l2562 13CA  
                     l2554 1350                       l1908 17B2                       l1916 17EC  
                     l1940 1A3E                       l1932 19EA                       l1924 19B4  
                     l1852 1D4E                       l2732 1BFA                       l2716 1B6E  
                     l2724 1BB4                       l2708 1B22                       l2492 102E  
                     l2484 0FE0                       l2468 0F32                       l2396 0D56  
                     l2388 0D2C                       l2548 1D08                       l2580 147A  
                     l2572 1424                       l2556 1360                       l2740 200E  
                     l1918 17FC                       l1950 1AC0                       l1942 1A52  
                     l1934 19F8                       l1926 19B8                       l1854 1D58  
                     l1862 22BA                       l2726 1BBC                       l2718 1B76  
                     l2494 104A                       l2478 0F9C                       l2486 0FE4  
                     l2398 0D58                       l2590 14D0                       l2582 1488  
                     l2574 1426                       l2566 13DE                       l2558 136E  
                     l2742 2012                       l2734 1FE8                       l1880 16B6  
                     l1944 1A60                       l1952 1AC6                       l1936 1A18  
                     l1928 19C6                       l1856 1D76                       l1848 1D2A  
                     l1872 21C2                       l1864 22C6                       l1960 1DF4  
                     l2728 1BC8                       l2496 104E                       l2488 0FFE  
                     l2592 14E0                       l2584 14A6                       l2576 1432  
                     l2568 13E6                       l2744 2016                       l2736 1FF8  
                     l1890 16FA                       l1882 16BA                       l1954 1AD6  
                     l1946 1A8E                       l1938 1A36                       l1858 1DAC  
                     l1874 21CE                       l1866 22CA                       l1970 1E44  
                     l1962 1E02                       l2498 105C                       l2594 14EE  
                     l2586 14A8                       l2578 146E                       l2746 202A  
                     l2738 1FFA                       l1892 171A                       l1884 16C8  
                     l1956 1AF6                       l1948 1AAE                       l1876 21E0  
                     l1868 22E2                       l1972 1E58                       l1964 1E16  
                     l2596 14F0                       l2588 14AC                       l2756 205C  
                     l2748 2048                       l1894 171E                       l1886 16E8  
                     l1982 2206                       l1878 21E4                       l1974 1E5C  
                     l1966 1E24                       l1990 10B8                       ?_pad 0013  
                     l1896 172A                       l1888 16EC                       l1984 2220  
                     l1976 1E88                       l1968 1E30                       l1992 10D8  
                     l1898 1748                       l1978 1E9C                       l1994 10E8  
                     l1986 1070                       l1996 10EA                       l1988 1090  
                     l1998 1104                       _ADON 007E10                       STR_1 0801  
                     STR_2 0812                       _CREN 007D5C                       u2000 190C  
                     u2001 1908                       u2010 1952                       u2011 194E  
                     u2020 19B2                       u2100 0908                       u2021 19AE  
                     u2101 0904                       u2110 0916                       u2030 0830  
                     u2111 0912                       u2031 082C                       u2200 0A54  
                     u2120 0984                       u2040 0842                       u2201 0A50  
                     u2121 0980                       u2041 083E                       u2210 0A62  
                     u2130 099C                       u2050 0852                       u2211 0A5E  
                     u2131 0996                       u2051 084E                       u1500 1D3C  
                     u2300 0BAC                       u2220 0A80                       u2140 099E  
                     u2060 0894                       u1501 1D38                       u2301 0BA8  
                     u2221 0A7C                       u2061 0890                       u1510 1D4E  
                     u2310 0BBE                       u2230 0AB8                       u2150 09C6  
                     u2070 08AA                       u1511 1D4A                       u2311 0BBA  
                     u2231 0AB4                       u2151 09C2                       u2071 08A6  
                     u1600 1772                       u1520 1D76                       u2400 0CA6  
                     u2320 0BD4                       u2240 0AFE                       u2160 09E4  
                     u2080 08BC                       u1601 176E                       u1521 1D72  
                     u2401 0CA2                       u2321 0BD0                       u2241 0AFA  
                     u2161 09E0                       u2081 08B8                       u1610 17B2  
                     u1530 1DAC                       u2410 0CC2                       u2330 0BEA  
                     u2250 0B34                       u2170 0A04                       u2090 08CC  
                     u1611 17AE                       u1531 1DA8                       u2411 0CBE  
                     u2331 0BE6                       u2251 0B30                       u2171 0A00  
                     u2091 08C8                       u1620 17FC                       u1540 22E2  
                     u1700 1E24                       u2340 0BFE                       u2260 0B44  
                     u2180 0A12                       u2500 0E6E                       u2420 0CF0  
                     u1621 17F8                       u1541 22DE                       u1701 1E20  
                     u2341 0BFA                       u2261 0B40                       u2181 0A0E  
                     u2501 0E6A                       u2421 0CEC                       u1630 19C6  
                     u1550 2204                       u1710 1E7A                       u2350 0C18  
                     u2270 0B70                       u2190 0A22                       u2510 0E90  
                     u2430 0D02                       u1631 19C2                       u1551 2200  
                     u1711 1E76                       u2351 0C14                       u2271 0B6C  
                     u2191 0A1E                       u2511 0E8C                       u2431 0CFE  
                     u1560 16C8                       u1640 19F8                       u1720 1E88  
                     u1800 1140                       u2360 0C52                       u2280 0B80  
                     u2600 0F9C                       u2520 0EBA                       u2440 0D12  
                     u1561 16C4                       u1641 19F4                       u1721 1E84  
                     u1801 113C                       u2361 0C4E                       u2281 0B7C  
                     u2601 0F98                       u2521 0EB6                       u2441 0D0E  
                     u1570 16FA                       u1650 1A36                       u1730 2220  
                     u1810 1268                       u2370 0C64                       u2290 0B9C  
                     u2610 0FB6                       u2530 0EDE                       u2450 0D56  
                     u1571 16F6                       u1651 1A32                       u1731 221C  
                     u1811 1264                       u2371 0C60                       u2291 0B98  
                     u2611 0FB2                       u2531 0EDA                       u2451 0D52  
                     u1660 1A60                       u1820 1286                       u1740 10A0  
                     u1900 156E                       u2380 0C74                       u2620 0FFE  
                     u2540 0EF4                       u2460 0D68                       u2700 1CF8  
                     u1581 1724                       u1661 1A5C                       u1821 1282  
                     u1741 109A                       u1901 156A                       u2381 0C70  
                     u2621 0FFA                       u2541 0EF0                       u2461 0D64  
                     u2701 1CF4                       u1590 1748                       u1670 1A8E  
                     u1830 12A0                       u1750 10A2                       u1910 1592  
                     u2390 0C94                       u2630 102E                       u2550 0F12  
                     u2470 0D78                       u2710 1D08                       u1591 1744  
                     u1671 1A8A                       u1831 129C                       u1911 158E  
                     u2391 0C90                       u2631 102A                       u2551 0F0E  
                     u2471 0D74                       u2711 1D04                       u1680 1AD6  
                     u1840 12BA                       u1760 10B8                       u1920 1636  
                     u2640 105C                       u2560 0F32                       u2480 0DB8  
                     u2800 14E0                       u2720 1360                       u1681 1AD2  
                     u1841 12B6                       u1761 10B4                       u1921 1632  
                     u2641 1058                       u2561 0F2E                       u2481 0DB4  
                     u2801 14DC                       u2721 135C                       u1930 2300  
                     u1690 1E02                       u1850 12C8                       u1770 10E8  
                     u2570 0F44                       u2490 0DF8                       u2650 1C3A  
                     u2810 14EE                       u2730 136E                       u1931 22FC  
                     u1691 1DFE                       u1851 12C4                       u1771 10E4  
                     u2571 0F40                       u2491 0DF4                       u2651 1C36  
                     u2811 14EA                       u2731 136A                       u2820 1EE0  
                     u1860 12DA                       u1780 1104                       u1940 20C8  
                     u2580 0F72                       u2660 1C6E                       u2740 13CA  
                     u2821 1ED8                       u1861 12D6                       u1781 1100  
                     u1941 20C4                       u2581 0F6E                       u2741 13C6  
                     u1950 22B8                       u1870 12E8                       u1790 1132  
                     u2590 0F88                       u2670 1C9C                       u2750 1420  
                     u1951 22B4                       u1871 12E4                       u1791 112E  
                     u2591 0F84                       u2671 1C98                       u2751 141C  
                     u1960 21A6                       u1880 1300                       u2680 1CB0  
                     u2760 146A                       u1961 21A2                       u1881 12FC  
                     u2681 1CAC                       u2665 1C64                       u2761 1466  
                     u2850 1F08                       u1970 21C0                       u1890 1526  
                     u2690 1CD8                       u2770 1488                       u2851 1F00  
                     u1971 21BC                       u1891 1522                       u2691 1CD4  
                     u2771 1484                       u2844 1EF0                       u1980 1858  
                     u2780 1498                       u2845 1EEC                       u1981 1854  
                     u2781 1494                       u2838 1EE2                       u1990 189A  
                     u2790 14A6                       u1991 1896                       u2791 14A2  
                     u2880 1F32                       u2881 1F2E                       u2874 1F18  
                     u2970 1B6E                       u2875 1F14                       u2971 1B6A  
                     u2868 1F0A                       _RCIF 007CF5                       _TXIF 007CF4  
                     abs@a 0015                       _data 0060                       _dbuf 008E  
                     _buff 0100                       _main 1FE8                       _dtoa 1070  
                     _prec 0080                       _str1 0264                       _str2 0200  
                     _nout 007C                       pad@i 001A                       pad@p 0017  
                     fsr1h 000FE2                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       pad@w 001C                       fsr2l 000FD9  
                     btemp 005D   __end_of_USART_SendString 22BA           __end_of_ADC_Init 231A  
         __end_of_ADC_Read 1F54                       start 000E            __end_of_MSdelay 21C2  
          ___fldiv@new_exp 0022            GSM_Send_Msg@sms 00BE               ___param_bank 000000  
                    ??_abs 0017                      ??_pad 0019              ___fltol@sign1 000B  
          __end_of___aodiv 183E            __end_of___fladd 0CD6                      ?_main 0001  
                    ?_dtoa 001E            __end_of___aomod 1B18            __end_of___fldiv 1070  
          __end_of___fltol 1D2A                      i2l165 211A                      _RCREG 000FAE  
                    _RCSTA 000FAB               vfpfcnvrt@fmt 0044                      _SPBRG 000FAF  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96                      _TXREG 000FAD  
                    _TXSTA 000FAC                      _data1 008A                      _data2 0088  
                    _depth 0074                      _flags 005B                      _index 008D  
                    _fputc 1D2A                      _fputs 21C2                      pad@fp 0013  
                    _width 007E                      _putch 231A                      dtoa@d 0020  
                    dtoa@i 0040                      dtoa@n 0038                      dtoa@p 0032  
                    dtoa@s 0036                      dtoa@w 0034                      tablat 000FF5  
                    ttemp5 005E                      ttemp6 0061                      ttemp7 0065  
                    status 000FD8                      wtemp8 005E            __end_of_sprintf 2178  
              ?_USART_Init 003A            __initialization 2246               __end_of_main 2070  
             __end_of_dtoa 134E                     ??_main 005B                     ??_dtoa 0028  
            __activetblptr 000001                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     ?_fputc 0003                     ?_fputs 000C  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     ?_putch 0001  
                ??_MSdelay 0005                     i2l2680 210E                     i2l2672 20DC  
                   i2l2682 2114                     i2l2674 20EA                     i2l2676 20FC  
                   i2l2678 2100                     _OSCCON 000FD3                     _TRISC6 007CA6  
                   _TRISC7 007CA7           __end_of___xxtofl 1502               vfprintf@cfmt 0058  
                ??___aodiv 0013                  ??___fladd 0032                  ??___aomod 0013  
                ??___fldiv 0019                  ??___fltol 0007            ADC_Read@channel 0003  
                   _memset 183E                     clear_0 224C                     clear_1 2258  
                   clear_2 2264                     _my_isr 0008              ?_GSM_Send_Msg 00BE  
                   pad@buf 0015                     dtoa@fp 001E                     _strlen 22BA  
                   fputc@c 0003                     fputs@c 0010                     fputs@i 0011  
                   fputs@s 000C                  ?_ADC_Init 0001                  ?_ADC_Read 0003  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8        __size_of_USART_Init 0094                     putch@c 0001  
         __end_of_vfprintf 20D2                  ??_sprintf 005A               ___xxtofl@arg 000D  
             ___xxtofl@exp 000C               ___xxtofl@val 0003                 __accesstop 0060  
  __end_of__initialization 226E              ___rparam_used 000001                 ___fltol@f1 0003  
           __pcstackCOMRAM 0001              __end_of_fputc 1DF4              __end_of_fputs 2206  
            __end_of_putch 231C             ??_GSM_Send_Msg 005A                 ??_ADC_Init 0003  
               ??_ADC_Read 0005                    ??_fputc 0007                    ??_fputs 0010  
                  ??_putch 0003                 __pbssBANK0 0060                 __pbssBANK1 0100  
               __pbssBANK2 0200          ?_USART_SendString 0004         ??_USART_SendString 0006  
                  ?_memset 0007                    ?_my_isr 0001                    ?_strlen 0003  
                ?___xxtofl 0003         __size_of_vfpfcnvrt 01B4                    _MSdelay 2178  
             ??_USART_Init 003E                    __Hparam 0000                    __Lparam 0000  
                  ___aodiv 16B6                    ___fladd 0816                    ___aomod 19B4  
                  ___fldiv 0CD6                    ___fltol 1C24                  ?_vfprintf 0052  
             __psmallconst 0800                    __pcinit 2246            __size_of_memset 0176  
                  __ramtop 0800                    _digital 00F7                    __ptext0 1FE8  
                  __ptext1 1F54                    __ptext2 134E                    __ptext3 1C24  
                  __ptext4 0CD6                    __ptext5 0816                    __ptext6 1B18  
                  __ptext7 2126                    __ptext8 2070                    __ptext9 1502  
          __size_of_my_isr 211E        USART_SendString@out 0004            __size_of_strlen 0036  
           USART_Init@temp 003E               __size_of_abs 0040               __size_of_pad 00C2  
               ??___xxtofl 0007         __end_of_USART_Init 1FE8                    _sprintf 2126  
                  _voltage 0078             __pintcode_body 20D2       end_of_initialization 226E  
                  fputc@fp 0005       __end_of_GSM_Send_Msg 1C24                    memset@c 0009  
                  memset@k 000F                    memset@n 000B                    memset@s 0011  
                  int_func 20D2                    fputs@fp 000E          __end_of_vfpfcnvrt 16B6  
                _RCSTAbits 000FAB                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE                 ??_vfprintf 0058  
                  strlen@a 0005                    strlen@s 0003                  _PORTAbits 000F80  
                _PORTBbits 000F81                ___fladd@grs 0039              ___xxtofl@sign 000B  
              ___fldiv@grs 0024                ___fldiv@rem 001D          __size_of_ADC_Init 0014  
        __size_of_ADC_Read 009E        USART_Init@baud_rate 003A              ?_USART_TxChar 0001  
              vfpfcnvrt@ap 0046                vfpfcnvrt@fp 0042                vfpfcnvrt@ll 004A  
   GSM_Send_Msg@sms_buffer 00C0             __end_of_memset 19B4             __end_of_my_isr 2126  
           __end_of_strlen 22F0        start_initialization 2246                __end_of_abs 2246  
              __end_of_pad 1EB6             ??_USART_TxChar 0003                vfprintf@fmt 0054  
        USART_SendString@s 0006                   ??_memset 000D                   ??_my_isr 0001  
               memset@dest 0007                   ??_strlen 0005  __size_of_USART_SendString 003A  
                ___fladd@a 002E                  ___fladd@b 002A                  ___fldiv@a 0015  
                ___fldiv@b 0011                __pbssCOMRAM 005B              __pcstackBANK0 00AE  
         ___aodiv@dividend 0003      __size_of_GSM_Send_Msg 010C          __size_of___xxtofl 01B4  
                 ?_MSdelay 0003                  __pnvBANK0 00F7                  __pintcode 0008  
                 ?___aodiv 0003                   ?___fladd 002A                   ?___aomod 0003  
                 ?___fldiv 0011           ___aodiv@quotient 0015                   ?___fltol 0003  
        __size_of_vfprintf 0062               _GSM_Send_Msg 1B18                __smallconst 0800  
                 _ADC_Init 2306                   _ADC_Read 1EB6                   ?_sprintf 00AE  
           __size_of_fputc 00CA             __size_of_fputs 0044             __size_of_putch 0002  
                 MSdelay@i 0005                   MSdelay@j 0007                   i2u290_40 20EA  
                 i2u290_41 20E6                   i2u291_40 210E                   i2u291_41 210A  
                _vfpfcnvrt 1502                 _ADCON0bits 000FC2       __end_of_USART_TxChar 2306  
         __size_of_MSdelay 004A                   __Hrparam 0000                 vfprintf@ap 0056  
                 __Lrparam 0000                 vfprintf@fp 0052               __Lsmallconst 0800  
         USART_TxChar@data 0003           __size_of___aodiv 0188           __size_of___fladd 04C0  
         __size_of___aomod 0164           __size_of___fldiv 039A           __size_of___fltol 0106  
               ?_vfpfcnvrt 0042            ___aodiv@divisor 000B            ___aodiv@counter 0013  
         _USART_SendString 2280                 sprintf@fmt 00B0                   ___xxtofl 134E  
                 _dtoa$941 0030                   __ptext10 1070                   __ptext11 1DF4  
                 __ptext20 2280                   __ptext12 22BA                   __ptext21 22F0  
                 __ptext13 21C2                   __ptext22 2178                   __ptext14 1D2A  
                 __ptext23 1EB6                   __ptext15 231A                   __ptext24 2306  
                 __ptext16 2206                   __ptext17 19B4                   __ptext18 16B6  
                 __ptext19 183E           __size_of_sprintf 0052              __size_of_main 0088  
            __size_of_dtoa 02DE                 MSdelay@val 0003                   int$flags 005D  
                 _vfprintf 2070                   main@strr 00E3           ___aomod@dividend 0003  
                 intlevel2 0000                  sprintf@ap 00B6      __size_of_USART_TxChar 0016  
          ___aomod@divisor 000B                ??_vfpfcnvrt 0048            ___aomod@counter 0013  
                 sprintf@f 00B8                   sprintf@s 00AE              ___fladd@signs 0036  
             ___aodiv@sign 0014               ___fladd@aexp 0037               ___fladd@bexp 0038  
             _USART_TxChar 22F0               ___aomod@sign 0014                 _USART_Init 1F54  
